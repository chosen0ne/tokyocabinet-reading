!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACTGET	tcawmgr.c	/^  ACTGET                                 \/\/ get a record$/;"	e	enum:__anon11	file:
ACTLIST	tcawmgr.c	/^  ACTLIST,                               \/\/ list records$/;"	e	enum:__anon11	file:
ACTLISTVAL	tcawmgr.c	/^  ACTLISTVAL,                            \/\/ list records with values$/;"	e	enum:__anon11	file:
ACTOUT	tcawmgr.c	/^  ACTOUT,                                \/\/ remove a record$/;"	e	enum:__anon11	file:
ACTPUT	tcawmgr.c	/^  ACTPUT,                                \/\/ put a record$/;"	e	enum:__anon11	file:
ADBDIRMODE	tcadb.c	25;"	d	file:
ADBMAPBDB	tcadb.c	/^} ADBMAPBDB;$/;"	t	typeref:struct:__anon3	file:
ADBMAPPROC	tcadb.h	/^typedef bool (*ADBMAPPROC)(void *map, const char *kbuf, int ksiz, const char *vbuf, int vsiz,$/;"	t
ADBMUL	tcadb.c	/^} ADBMUL;$/;"	t	typeref:struct:__anon2	file:
ADBMULPREFIX	tcadb.c	26;"	d	file:
ADBOBDB	tcadb.h	/^  ADBOBDB,                               \/* B+ tree database *\/$/;"	e	enum:__anon5
ADBOFDB	tcadb.h	/^  ADBOFDB,                               \/* fixed-length database *\/$/;"	e	enum:__anon5
ADBOHDB	tcadb.h	/^  ADBOHDB,                               \/* hash database *\/$/;"	e	enum:__anon5
ADBOMDB	tcadb.h	/^  ADBOMDB,                               \/* on-memory hash database *\/$/;"	e	enum:__anon5
ADBONDB	tcadb.h	/^  ADBONDB,                               \/* on-memory tree database *\/$/;"	e	enum:__anon5
ADBOSKEL	tcadb.h	/^  ADBOSKEL                               \/* skeleton database *\/$/;"	e	enum:__anon5
ADBOTDB	tcadb.h	/^  ADBOTDB,                               \/* table database *\/$/;"	e	enum:__anon5
ADBOVOID	tcadb.h	/^  ADBOVOID,                              \/* not opened *\/$/;"	e	enum:__anon5
ADBSKEL	tcadb.h	/^} ADBSKEL;$/;"	t	typeref:struct:__anon6
BDBCACHEOUT	tcbdb.c	27;"	d	file:
BDBCMP	tcutil.h	4168;"	d
BDBCPAFTER	tcbdb.h	/^  BDBCPAFTER                             \/* after *\/$/;"	e	enum:__anon23
BDBCPBEFORE	tcbdb.h	/^  BDBCPBEFORE,                           \/* before *\/$/;"	e	enum:__anon23
BDBCPCURRENT	tcbdb.h	/^  BDBCPCURRENT,                          \/* current *\/$/;"	e	enum:__anon23
BDBCUR	tcbdb.h	/^} BDBCUR;$/;"	t	typeref:struct:__anon22
BDBDEFAPOW	tcbdb.c	34;"	d	file:
BDBDEFBNUM	tcbdb.c	33;"	d	file:
BDBDEFFPOW	tcbdb.c	35;"	d	file:
BDBDEFLCNUM	tcbdb.c	36;"	d	file:
BDBDEFLMEMB	tcbdb.c	29;"	d	file:
BDBDEFLSMAX	tcbdb.c	38;"	d	file:
BDBDEFNCNUM	tcbdb.c	37;"	d	file:
BDBDEFNMEMB	tcbdb.c	31;"	d	file:
BDBFFATAL	tcbdb.h	/^  BDBFFATAL = HDBFFATAL                  \/* whether with fatal error *\/$/;"	e	enum:__anon19
BDBFOPEN	tcbdb.h	/^  BDBFOPEN = HDBFOPEN,                   \/* whether opened *\/$/;"	e	enum:__anon19
BDBIDX	tcbdb.c	/^} BDBIDX;$/;"	t	typeref:struct:__anon14	file:
BDBLEAF	tcbdb.c	/^} BDBLEAF;$/;"	t	typeref:struct:__anon13	file:
BDBLEFTOPQSIZ	tcbdb.c	23;"	d	file:
BDBLEVELMAX	tcbdb.c	26;"	d	file:
BDBLOCKCACHE	tcbdb.c	92;"	d	file:
BDBLOCKMETHOD	tcbdb.c	88;"	d	file:
BDBMINLMEMB	tcbdb.c	30;"	d	file:
BDBMINLSMAX	tcbdb.c	39;"	d	file:
BDBMINNMEMB	tcbdb.c	32;"	d	file:
BDBNODE	tcbdb.c	/^} BDBNODE;$/;"	t	typeref:struct:__anon15	file:
BDBNODEIDBASE	tcbdb.c	25;"	d	file:
BDBOCREAT	tcbdb.h	/^  BDBOCREAT = 1 << 2,                    \/* writer creating *\/$/;"	e	enum:__anon21
BDBOLCKNB	tcbdb.h	/^  BDBOLCKNB = 1 << 5,                    \/* lock without blocking *\/$/;"	e	enum:__anon21
BDBONOLCK	tcbdb.h	/^  BDBONOLCK = 1 << 4,                    \/* open without locking *\/$/;"	e	enum:__anon21
BDBOPAQUESIZ	tcbdb.c	22;"	d	file:
BDBOREADER	tcbdb.h	/^  BDBOREADER = 1 << 0,                   \/* open as a reader *\/$/;"	e	enum:__anon21
BDBOTRUNC	tcbdb.h	/^  BDBOTRUNC = 1 << 3,                    \/* writer truncating *\/$/;"	e	enum:__anon21
BDBOTSYNC	tcbdb.h	/^  BDBOTSYNC = 1 << 6                     \/* synchronize every transaction *\/$/;"	e	enum:__anon21
BDBOWRITER	tcbdb.h	/^  BDBOWRITER = 1 << 1,                   \/* open as a writer *\/$/;"	e	enum:__anon21
BDBPAGEBUFSIZ	tcbdb.c	24;"	d	file:
BDBPDADDDBL	tcbdb.c	/^  BDBPDADDDBL,                           \/\/ add a real number$/;"	e	enum:__anon16	file:
BDBPDADDINT	tcbdb.c	/^  BDBPDADDINT,                           \/\/ add an integer$/;"	e	enum:__anon16	file:
BDBPDCAT	tcbdb.c	/^  BDBPDCAT,                              \/\/ concatenate values$/;"	e	enum:__anon16	file:
BDBPDDUP	tcbdb.c	/^  BDBPDDUP,                              \/\/ allow duplication of keys$/;"	e	enum:__anon16	file:
BDBPDDUPB	tcbdb.c	/^  BDBPDDUPB,                             \/\/ allow backward duplication$/;"	e	enum:__anon16	file:
BDBPDKEEP	tcbdb.c	/^  BDBPDKEEP,                             \/\/ keep the existing value$/;"	e	enum:__anon16	file:
BDBPDOVER	tcbdb.c	/^  BDBPDOVER,                             \/\/ overwrite an existing value$/;"	e	enum:__anon16	file:
BDBPDPROC	tcbdb.c	/^  BDBPDPROC                              \/\/ process by a callback function$/;"	e	enum:__anon16	file:
BDBPDPROCOP	tcbdb.c	/^} BDBPDPROCOP;$/;"	t	typeref:struct:__anon17	file:
BDBREC	tcbdb.c	/^} BDBREC;$/;"	t	typeref:struct:__anon12	file:
BDBTBZIP	tcbdb.h	/^  BDBTBZIP = 1 << 2,                     \/* compress each record with BZIP2 *\/$/;"	e	enum:__anon20
BDBTDEFLATE	tcbdb.h	/^  BDBTDEFLATE = 1 << 1,                  \/* compress each page with Deflate *\/$/;"	e	enum:__anon20
BDBTEXCODEC	tcbdb.h	/^  BDBTEXCODEC = 1 << 4                   \/* compress each record with outer functions *\/$/;"	e	enum:__anon20
BDBTHREADYIELD	tcbdb.c	96;"	d	file:
BDBTLARGE	tcbdb.h	/^  BDBTLARGE = 1 << 0,                    \/* use 64-bit bucket array *\/$/;"	e	enum:__anon20
BDBTTCBS	tcbdb.h	/^  BDBTTCBS = 1 << 3,                     \/* compress each page with TCBS *\/$/;"	e	enum:__anon20
BDBUNLOCKCACHE	tcbdb.c	94;"	d	file:
BDBUNLOCKMETHOD	tcbdb.c	90;"	d	file:
BIG_CACHESIZE	bros/bdbtest.c	19;"	d	file:
BIG_PAGESIZE	bros/bdbtest.c	18;"	d	file:
BINDIR	Makefile	/^BINDIR = ${exec_prefix}\/bin$/;"	m
BYTE_ORDER	md5.c	57;"	d	file:
BYTE_ORDER	md5.c	59;"	d	file:
BYTE_ORDER	md5.c	61;"	d	file:
BZIPBUFSIZ	myconf.c	242;"	d	file:
C99FLAGS	example/Makefile	/^C99FLAGS = -I. -I.. -std=c99 -Wall -pedantic -fsigned-char -O2$/;"	m
CACHESIZE	bros/gdbmtest.c	17;"	d	file:
CC	Makefile	/^CC = gcc$/;"	m
CC	example/Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2 -std=c99 -Wall -fPIC -fsigned-char -O2$/;"	m
CFLAGS	example/Makefile	/^CFLAGS = -I. -I.. -ansi -Wall -pedantic -fsigned-char -O2$/;"	m
CGIFILES	Makefile	/^CGIFILES = tcawmgr.cgi$/;"	m
CMDLDFLAGS	Makefile	/^CMDLDFLAGS = $/;"	m
COMMANDFILES	Makefile	/^COMMANDFILES = tcutest tcumttest tcucodec tchtest tchmttest tchmgr tcbtest tcbmttest tcbmgr tcftest tcfmttest tcfmgr tcttest tctmttest tctmgr tcatest tcamttest tcamgr$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = -I. -I$(INCLUDEDIR) -I\/Users\/louzhenlin\/include -I\/usr\/local\/include -DNDEBUG -D_GNU_SOURCE=1 -D_REENTRANT -D__EXTENSIONS__ \\$/;"	m
DATADIR	Makefile	/^DATADIR = ${datarootdir}\/$(PACKAGE)$/;"	m
DBNAME	tcawmgr.c	28;"	d	file:
DEFSHOWNUM	tcawmgr.c	24;"	d	file:
DESTDIR	Makefile	/^DESTDIR =$/;"	m
DOCUMENTFILES	Makefile	/^DOCUMENTFILES = COPYING ChangeLog doc tokyocabinet.idl$/;"	m
D_GNU_SOURCE	bros/Makefile	/^	gcc -I.. -I\/usr\/local\/include -D_GNU_SOURCE=1 \\$/;"	m
D_GNU_SOURCE	bros/Makefile	/^	gcc -I\/usr\/local\/bdb\/include -D_GNU_SOURCE=1 \\$/;"	m
D_GNU_SOURCE	bros/Makefile	/^	gcc -I\/usr\/local\/include -D_GNU_SOURCE=1 \\$/;"	m
EXHEADSIZ	tcfmttest.c	22;"	d	file:
EXHEADSIZ	tcftest.c	22;"	d	file:
F	md5.c	202;"	d	file:
FALSE	bros/bdbtest.c	13;"	d	file:
FALSE	bros/bdbtest.c	14;"	d	file:
FALSE	bros/cdbtest.c	13;"	d	file:
FALSE	bros/cdbtest.c	14;"	d	file:
FALSE	bros/gdbmtest.c	13;"	d	file:
FALSE	bros/gdbmtest.c	14;"	d	file:
FALSE	bros/ndbmtest.c	15;"	d	file:
FALSE	bros/ndbmtest.c	16;"	d	file:
FALSE	bros/qdbmtest.c	15;"	d	file:
FALSE	bros/qdbmtest.c	16;"	d	file:
FALSE	bros/sdbmtest.c	15;"	d	file:
FALSE	bros/sdbmtest.c	16;"	d	file:
FALSE	bros/sqltest.c	10;"	d	file:
FALSE	bros/sqltest.c	9;"	d	file:
FALSE	bros/tctest.c	18;"	d	file:
FALSE	bros/tctest.c	19;"	d	file:
FALSE	bros/tdbtest.c	15;"	d	file:
FALSE	bros/tdbtest.c	16;"	d	file:
FDBDEFLIMSIZ	tcfdb.c	37;"	d	file:
FDBDEFWIDTH	tcfdb.c	36;"	d	file:
FDBFFATAL	tcfdb.h	/^  FDBFFATAL = 1 << 1                     \/* whether with fatal error *\/$/;"	e	enum:__anon33
FDBFILEMODE	tcfdb.c	21;"	d	file:
FDBFLAGSOFF	tcfdb.c	27;"	d	file:
FDBFOPEN	tcfdb.h	/^  FDBFOPEN = 1 << 0,                     \/* whether opened *\/$/;"	e	enum:__anon33
FDBFSIZOFF	tcfdb.c	29;"	d	file:
FDBHEADSIZ	tcfdb.c	25;"	d	file:
FDBIDARYUNIT	tcfdb.c	40;"	d	file:
FDBIDMAX	tcfdb.h	/^  FDBIDMAX = -3,                         \/* maximum number *\/$/;"	e	enum:__anon35
FDBIDMIN	tcfdb.h	/^  FDBIDMIN = -1,                         \/* minimum number *\/$/;"	e	enum:__anon35
FDBIDNEXT	tcfdb.h	/^  FDBIDNEXT = -4                         \/* greater by one than the miximum *\/$/;"	e	enum:__anon35
FDBIDPREV	tcfdb.h	/^  FDBIDPREV = -2,                        \/* less by one than the minimum *\/$/;"	e	enum:__anon35
FDBIOBUFSIZ	tcfdb.c	22;"	d	file:
FDBLIMSIZOFF	tcfdb.c	31;"	d	file:
FDBLOCKALLRECORDS	tcfdb.c	71;"	d	file:
FDBLOCKATTR	tcfdb.c	63;"	d	file:
FDBLOCKMETHOD	tcfdb.c	59;"	d	file:
FDBLOCKRECORD	tcfdb.c	67;"	d	file:
FDBLOCKWAL	tcfdb.c	75;"	d	file:
FDBMAGICDATA	tcfdb.c	24;"	d	file:
FDBMAXOFF	tcfdb.c	33;"	d	file:
FDBMINOFF	tcfdb.c	32;"	d	file:
FDBOCREAT	tcfdb.h	/^  FDBOCREAT = 1 << 2,                    \/* writer creating *\/$/;"	e	enum:__anon34
FDBOLCKNB	tcfdb.h	/^  FDBOLCKNB = 1 << 5,                    \/* lock without blocking *\/$/;"	e	enum:__anon34
FDBONOLCK	tcfdb.h	/^  FDBONOLCK = 1 << 4,                    \/* open without locking *\/$/;"	e	enum:__anon34
FDBOPAQUEOFF	tcfdb.c	34;"	d	file:
FDBOREADER	tcfdb.h	/^  FDBOREADER = 1 << 0,                   \/* open as a reader *\/$/;"	e	enum:__anon34
FDBOTRUNC	tcfdb.h	/^  FDBOTRUNC = 1 << 3,                    \/* writer truncating *\/$/;"	e	enum:__anon34
FDBOTSYNC	tcfdb.h	/^  FDBOTSYNC = 1 << 6                     \/* synchronize every transaction *\/$/;"	e	enum:__anon34
FDBOWRITER	tcfdb.h	/^  FDBOWRITER = 1 << 1,                   \/* open as a writer *\/$/;"	e	enum:__anon34
FDBPDADDDBL	tcfdb.c	/^  FDBPDADDDBL,                           \/\/ add a real number$/;"	e	enum:__anon30	file:
FDBPDADDINT	tcfdb.c	/^  FDBPDADDINT,                           \/\/ add an integer$/;"	e	enum:__anon30	file:
FDBPDCAT	tcfdb.c	/^  FDBPDCAT,                              \/\/ concatenate values$/;"	e	enum:__anon30	file:
FDBPDKEEP	tcfdb.c	/^  FDBPDKEEP,                             \/\/ keep the existing value$/;"	e	enum:__anon30	file:
FDBPDOVER	tcfdb.c	/^  FDBPDOVER,                             \/\/ overwrite an existing value$/;"	e	enum:__anon30	file:
FDBPDPROC	tcfdb.c	/^  FDBPDPROC                              \/\/ process by a callback function$/;"	e	enum:__anon30	file:
FDBPDPROCOP	tcfdb.c	/^} FDBPDPROCOP;$/;"	t	typeref:struct:__anon31	file:
FDBRMTXNUM	tcfdb.c	38;"	d	file:
FDBRNUMOFF	tcfdb.c	28;"	d	file:
FDBTHREADYIELD	tcfdb.c	79;"	d	file:
FDBTRUNCALW	tcfdb.c	39;"	d	file:
FDBTYPEOFF	tcfdb.c	26;"	d	file:
FDBUNLOCKALLRECORDS	tcfdb.c	73;"	d	file:
FDBUNLOCKATTR	tcfdb.c	65;"	d	file:
FDBUNLOCKMETHOD	tcfdb.c	61;"	d	file:
FDBUNLOCKRECORD	tcfdb.c	69;"	d	file:
FDBUNLOCKWAL	tcfdb.c	77;"	d	file:
FDBWALSUFFIX	tcfdb.c	41;"	d	file:
FDBWIDTHOFF	tcfdb.c	30;"	d	file:
FORMATVER	Makefile	/^FORMATVER = 1.0$/;"	m
FWMMAX	tcawmgr.c	25;"	d	file:
G	md5.c	228;"	d	file:
H	md5.c	254;"	d	file:
HDBAPOWOFF	tchdb.c	29;"	d	file:
HDBBNUMOFF	tchdb.c	32;"	d	file:
HDBCACHEOUT	tchdb.c	55;"	d	file:
HDBDEFAPOW	tchdb.c	39;"	d	file:
HDBDEFBNUM	tchdb.c	38;"	d	file:
HDBDEFFPOW	tchdb.c	41;"	d	file:
HDBDEFXMSIZ	tchdb.c	43;"	d	file:
HDBDFRSRAT	tchdb.c	53;"	d	file:
HDBDRPLAT	tchdb.c	52;"	d	file:
HDBDRPUNIT	tchdb.c	51;"	d	file:
HDBFB	tchdb.c	/^} HDBFB;$/;"	t	typeref:struct:__anon42	file:
HDBFBMAXSIZ	tchdb.c	54;"	d	file:
HDBFBPALWRAT	tchdb.c	47;"	d	file:
HDBFBPBSIZ	tchdb.c	48;"	d	file:
HDBFBPESIZ	tchdb.c	49;"	d	file:
HDBFBPMGFREQ	tchdb.c	50;"	d	file:
HDBFFATAL	tchdb.h	/^  HDBFFATAL = 1 << 1                     \/* whether with fatal error *\/$/;"	e	enum:__anon47
HDBFILEMODE	tchdb.c	22;"	d	file:
HDBFLAGSOFF	tchdb.c	28;"	d	file:
HDBFOPEN	tchdb.h	/^  HDBFOPEN = 1 << 0,                     \/* whether opened *\/$/;"	e	enum:__anon47
HDBFPOWOFF	tchdb.c	30;"	d	file:
HDBFRECOFF	tchdb.c	35;"	d	file:
HDBFSIZOFF	tchdb.c	34;"	d	file:
HDBHEADSIZ	tchdb.c	26;"	d	file:
HDBIOBUFSIZ	tchdb.c	23;"	d	file:
HDBLOCKALLRECORDS	tchdb.c	108;"	d	file:
HDBLOCKDB	tchdb.c	112;"	d	file:
HDBLOCKMETHOD	tchdb.c	100;"	d	file:
HDBLOCKRECORD	tchdb.c	104;"	d	file:
HDBLOCKWAL	tchdb.c	116;"	d	file:
HDBMAGICDATA	tchdb.c	25;"	d	file:
HDBMAGICFB	tchdb.c	/^  HDBMAGICFB = 0xb0                      \/\/ for free block$/;"	e	enum:__anon43	file:
HDBMAGICREC	tchdb.c	/^  HDBMAGICREC = 0xc8,                    \/\/ for data block$/;"	e	enum:__anon43	file:
HDBMAXAPOW	tchdb.c	40;"	d	file:
HDBMAXFPOW	tchdb.c	42;"	d	file:
HDBMAXHSIZ	tchdb.c	46;"	d	file:
HDBMINRUNIT	tchdb.c	45;"	d	file:
HDBOCREAT	tchdb.h	/^  HDBOCREAT = 1 << 2,                    \/* writer creating *\/$/;"	e	enum:__anon49
HDBOLCKNB	tchdb.h	/^  HDBOLCKNB = 1 << 5,                    \/* lock without blocking *\/$/;"	e	enum:__anon49
HDBONOLCK	tchdb.h	/^  HDBONOLCK = 1 << 4,                    \/* open without locking *\/$/;"	e	enum:__anon49
HDBOPAQUEOFF	tchdb.c	36;"	d	file:
HDBOPTSOFF	tchdb.c	31;"	d	file:
HDBOREADER	tchdb.h	/^  HDBOREADER = 1 << 0,                   \/* open as a reader *\/$/;"	e	enum:__anon49
HDBOTRUNC	tchdb.h	/^  HDBOTRUNC = 1 << 3,                    \/* writer truncating *\/$/;"	e	enum:__anon49
HDBOTSYNC	tchdb.h	/^  HDBOTSYNC = 1 << 6                     \/* synchronize every transaction *\/$/;"	e	enum:__anon49
HDBOWRITER	tchdb.h	/^  HDBOWRITER = 1 << 1,                   \/* open as a writer *\/$/;"	e	enum:__anon49
HDBPDADDDBL	tchdb.c	/^  HDBPDADDDBL,                           \/\/ add a real number$/;"	e	enum:__anon44	file:
HDBPDADDINT	tchdb.c	/^  HDBPDADDINT,                           \/\/ add an integer$/;"	e	enum:__anon44	file:
HDBPDCAT	tchdb.c	/^  HDBPDCAT,                              \/\/ concatenate values$/;"	e	enum:__anon44	file:
HDBPDKEEP	tchdb.c	/^  HDBPDKEEP,                             \/\/ keep the existing value$/;"	e	enum:__anon44	file:
HDBPDOVER	tchdb.c	/^  HDBPDOVER,                             \/\/ overwrite an existing value$/;"	e	enum:__anon44	file:
HDBPDPROC	tchdb.c	/^  HDBPDPROC                              \/\/ process by a callback function$/;"	e	enum:__anon44	file:
HDBPDPROCOP	tchdb.c	/^} HDBPDPROCOP;$/;"	t	typeref:struct:__anon45	file:
HDBRNUMOFF	tchdb.c	33;"	d	file:
HDBTBZIP	tchdb.h	/^  HDBTBZIP = 1 << 2,                     \/* compress each record with BZIP2 *\/$/;"	e	enum:__anon48
HDBTDEFLATE	tchdb.h	/^  HDBTDEFLATE = 1 << 1,                  \/* compress each record with Deflate *\/$/;"	e	enum:__anon48
HDBTEXCODEC	tchdb.h	/^  HDBTEXCODEC = 1 << 4                   \/* compress each record with custom functions *\/$/;"	e	enum:__anon48
HDBTHREADYIELD	tchdb.c	120;"	d	file:
HDBTLARGE	tchdb.h	/^  HDBTLARGE = 1 << 0,                    \/* use 64-bit bucket array *\/$/;"	e	enum:__anon48
HDBTTCBS	tchdb.h	/^  HDBTTCBS = 1 << 3,                     \/* compress each record with TCBS *\/$/;"	e	enum:__anon48
HDBTYPEOFF	tchdb.c	27;"	d	file:
HDBUNLOCKALLRECORDS	tchdb.c	110;"	d	file:
HDBUNLOCKDB	tchdb.c	114;"	d	file:
HDBUNLOCKMETHOD	tchdb.c	102;"	d	file:
HDBUNLOCKRECORD	tchdb.c	106;"	d	file:
HDBUNLOCKWAL	tchdb.c	118;"	d	file:
HDBWALSUFFIX	tchdb.c	56;"	d	file:
HDBXFSIZINC	tchdb.c	44;"	d	file:
HEADERFILES	Makefile	/^HEADERFILES = tcutil.h tchdb.h tcbdb.h tcfdb.h tctdb.h tcadb.h$/;"	m
I	md5.c	280;"	d	file:
INCLUDEDIR	Makefile	/^INCLUDEDIR = ${prefix}\/include$/;"	m
LDENV	Makefile	/^LDENV = LD_RUN_PATH=\/lib:\/usr\/lib:$(LIBDIR):$(HOME)\/lib:\/usr\/local\/lib:$(LIBDIR):.$/;"	m
LDENV	example/Makefile	/^LDENV = LD_RUN_PATH=\/lib:\/usr\/lib:$(HOME)\/lib:\/usr\/local\/lib:.:..$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -L. -L$(LIBDIR) -L\/Users\/louzhenlin\/lib -L\/usr\/local\/lib$/;"	m
LDFLAGS	example/Makefile	/^LDFLAGS =$/;"	m
LD_LIBRARY_PATH	bros/Makefile	/^	LD_LIBRARY_PATH="$(LD_LIBRARY_PATH):.:.." ; PATH="$(PATH):.:.." ; \\$/;"	m
LD_LIBRARY_PATH	example/Makefile	/^	  LD_LIBRARY_PATH=\/usr\/local\/lib:.:.. ..\/tctmgr importtsv tctsearch.tct$/;"	m
LD_LIBRARY_PATH	example/Makefile	/^	LD_LIBRARY_PATH=\/usr\/local\/lib:.:.. ..\/tctmgr create tctchat.tct$/;"	m
LD_LIBRARY_PATH	example/Makefile	/^	LD_LIBRARY_PATH=\/usr\/local\/lib:.:.. ..\/tctmgr create tctsearch.tct$/;"	m
LD_LIBRARY_PATH	example/Makefile	/^	LD_LIBRARY_PATH=\/usr\/local\/lib:.:.. ..\/tctmgr setindex -it qgram tctchat.tct "t"$/;"	m
LD_LIBRARY_PATH	example/Makefile	/^	LD_LIBRARY_PATH=\/usr\/local\/lib:.:.. ..\/tctmgr setindex -it qgram tctsearch.tct "text"$/;"	m
LD_LIBRARY_PATH	example/Makefile	/^	LD_LIBRARY_PATH=\/usr\/local\/lib:.:.. ..\/tctmgr setindex -it qgram tctsearch.tct "title"$/;"	m
LIBDIR	Makefile	/^LIBDIR = ${exec_prefix}\/lib$/;"	m
LIBEXECDIR	Makefile	/^LIBEXECDIR = ${exec_prefix}\/libexec$/;"	m
LIBOBJFILES	Makefile	/^LIBOBJFILES = tcutil.o tchdb.o tcbdb.o tcfdb.o tctdb.o tcadb.o myconf.o md5.o$/;"	m
LIBRARYFILES	Makefile	/^LIBRARYFILES = libtokyocabinet.a libtokyocabinet.9.11.0.dylib libtokyocabinet.9.dylib libtokyocabinet.dylib$/;"	m
LIBREV	Makefile	/^LIBREV = 11$/;"	m
LIBS	Makefile	/^LIBS = -lbz2 -lz -lpthread -lm -lc $/;"	m
LIBS	example/Makefile	/^LIBS = -L. -L.. -ltokyocabinet -lz -lbz2 -lpthread -lm -lc$/;"	m
LIBVER	Makefile	/^LIBVER = 9$/;"	m
MAN1DIR	Makefile	/^MAN1DIR = ${datarootdir}\/man\/man1$/;"	m
MAN1FILES	Makefile	/^MAN1FILES = tcutest.1 tcumttest.1 tcucodec.1 tchtest.1 tchmttest.1 tchmgr.1 tcbtest.1 tcbmttest.1 tcbmgr.1 tcftest.1 tcfmttest.1 tcfmgr.1 tcttest.1 tctmttest.1 tctmgr.1 tcatest.1 tcamttest.1 tcamgr.1$/;"	m
MAN3DIR	Makefile	/^MAN3DIR = ${datarootdir}\/man\/man3$/;"	m
MAN3FILES	Makefile	/^MAN3FILES = tokyocabinet.3 tcutil.3 tcxstr.3 tclist.3 tcmap.3 tctree.3 tcmdb.3 tcmpool.3 tchdb.3 tcbdb.3 tcfdb.3 tctdb.3 tcadb.3$/;"	m
MINIBNUM	tcawmgr.c	21;"	d	file:
MULDIVNUM	tcamttest.c	21;"	d	file:
MULDIVNUM	tcatest.c	21;"	d	file:
MYBINS	bros/Makefile	/^MYBINS = tctest qdbmtest ndbmtest sdbmtest gdbmtest tdbtest cdbtest bdbtest \\$/;"	m
MYBINS	example/Makefile	/^MYBINS = tcutilex tchdbex tcbdbex tcfdbex tctdbex tcadbex tctchat.cgi tctsearch.cgi$/;"	m
MYCALLOC	myconf.h	202;"	d
MYCDIRSTR	myconf.h	306;"	d
MYEXTCHR	myconf.h	304;"	d
MYEXTSTR	myconf.h	305;"	d
MYFREE	myconf.h	204;"	d
MYMALLOC	myconf.h	201;"	d
MYPATHCHR	myconf.h	302;"	d
MYPATHSTR	myconf.h	303;"	d
MYPDIRSTR	myconf.h	307;"	d
MYREALLOC	myconf.h	203;"	d
NAME_MAX	myconf.h	286;"	d
OUTBUFSIZ	tcawmgr.c	22;"	d	file:
PACKAGE	Makefile	/^PACKAGE = tokyocabinet$/;"	m
PACKAGEDIR	Makefile	/^PACKAGEDIR = $(PACKAGE)-$(VERSION)$/;"	m
PACKAGETGZ	Makefile	/^PACKAGETGZ = $(PACKAGE)-$(VERSION).tar.gz$/;"	m
PAGETITLE	tcawmgr.c	27;"	d	file:
PARAMS	tcawmgr.c	/^} PARAMS;$/;"	t	typeref:struct:__anon10	file:
PATH_MAX	myconf.h	280;"	d
PATH_MAX	myconf.h	282;"	d
PCDIR	Makefile	/^PCDIR = ${exec_prefix}\/lib\/pkgconfig$/;"	m
PCFILES	Makefile	/^PCFILES = tokyocabinet.pc$/;"	m
POSTCMD	Makefile	/^POSTCMD = true$/;"	m
PTHREAD_MUTEX_INITIALIZER	myconf.h	375;"	d
PTHREAD_MUTEX_INITIALIZER	myconf.h	376;"	d
PTHREAD_MUTEX_RECURSIVE	myconf.h	368;"	d
PTHREAD_MUTEX_RECURSIVE	myconf.h	369;"	d
PTHREAD_ONCE_INIT	myconf.h	363;"	d
PTHREAD_ONCE_INIT	myconf.h	364;"	d
PTHREAD_RWLOCK_INITIALIZER	myconf.h	383;"	d
PTHREAD_RWLOCK_INITIALIZER	myconf.h	384;"	d
RECBUFSIZ	bros/bdbtest.c	16;"	d	file:
RECBUFSIZ	bros/cdbtest.c	16;"	d	file:
RECBUFSIZ	bros/gdbmtest.c	16;"	d	file:
RECBUFSIZ	bros/maptest.cc	17;"	d	file:
RECBUFSIZ	bros/ndbmtest.c	18;"	d	file:
RECBUFSIZ	bros/qdbmtest.c	18;"	d	file:
RECBUFSIZ	bros/sdbmtest.c	18;"	d	file:
RECBUFSIZ	bros/sqltest.c	12;"	d	file:
RECBUFSIZ	bros/tctest.c	21;"	d	file:
RECBUFSIZ	bros/tdbtest.c	18;"	d	file:
RECBUFSIZ	tcamttest.c	22;"	d	file:
RECBUFSIZ	tcatest.c	22;"	d	file:
RECBUFSIZ	tcbmttest.c	21;"	d	file:
RECBUFSIZ	tcbtest.c	21;"	d	file:
RECBUFSIZ	tcfmttest.c	21;"	d	file:
RECBUFSIZ	tcftest.c	21;"	d	file:
RECBUFSIZ	tchmttest.c	21;"	d	file:
RECBUFSIZ	tchtest.c	21;"	d	file:
RECBUFSIZ	tctmttest.c	21;"	d	file:
RECBUFSIZ	tcttest.c	21;"	d	file:
RECBUFSIZ	tcumttest.c	20;"	d	file:
RECBUFSIZ	tcutest.c	20;"	d	file:
RECORDNUM	bros/cmpsqltctest.c	19;"	d	file:
ROTATE_LEFT	md5.c	197;"	d	file:
RUNENV	Makefile	/^RUNENV = DYLD_LIBRARY_PATH=.:\/lib:\/usr\/lib:$(LIBDIR):$(HOME)\/lib:\/usr\/local\/lib:$(LIBDIR)$/;"	m
SAMPLENUM	bros/cmpsqltctest.c	18;"	d	file:
SET	md5.c	203;"	d	file:
SET	md5.c	223;"	d	file:
SET	md5.c	229;"	d	file:
SET	md5.c	249;"	d	file:
SET	md5.c	255;"	d	file:
SET	md5.c	275;"	d	file:
SET	md5.c	281;"	d	file:
SET	md5.c	301;"	d	file:
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	bros/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	example/Makefile	/^SHELL = \/bin\/sh$/;"	m
SMALL_CACHESIZE	bros/bdbtest.c	20;"	d	file:
SMALL_PAGESIZE	bros/bdbtest.c	17;"	d	file:
SQLBUFSIZ	bros/cmpsqltctest.c	17;"	d	file:
SQLFILE	bros/cmpsqltctest.c	15;"	d	file:
T1	md5.c	65;"	d	file:
T10	md5.c	74;"	d	file:
T11	md5.c	75;"	d	file:
T12	md5.c	76;"	d	file:
T13	md5.c	77;"	d	file:
T14	md5.c	78;"	d	file:
T15	md5.c	79;"	d	file:
T16	md5.c	80;"	d	file:
T17	md5.c	81;"	d	file:
T18	md5.c	82;"	d	file:
T19	md5.c	83;"	d	file:
T2	md5.c	66;"	d	file:
T20	md5.c	84;"	d	file:
T21	md5.c	85;"	d	file:
T22	md5.c	86;"	d	file:
T23	md5.c	87;"	d	file:
T24	md5.c	88;"	d	file:
T25	md5.c	89;"	d	file:
T26	md5.c	90;"	d	file:
T27	md5.c	91;"	d	file:
T28	md5.c	92;"	d	file:
T29	md5.c	93;"	d	file:
T3	md5.c	67;"	d	file:
T30	md5.c	94;"	d	file:
T31	md5.c	95;"	d	file:
T32	md5.c	96;"	d	file:
T33	md5.c	97;"	d	file:
T34	md5.c	98;"	d	file:
T35	md5.c	99;"	d	file:
T36	md5.c	100;"	d	file:
T37	md5.c	101;"	d	file:
T38	md5.c	102;"	d	file:
T39	md5.c	103;"	d	file:
T4	md5.c	68;"	d	file:
T40	md5.c	104;"	d	file:
T41	md5.c	105;"	d	file:
T42	md5.c	106;"	d	file:
T43	md5.c	107;"	d	file:
T44	md5.c	108;"	d	file:
T45	md5.c	109;"	d	file:
T46	md5.c	110;"	d	file:
T47	md5.c	111;"	d	file:
T48	md5.c	112;"	d	file:
T49	md5.c	113;"	d	file:
T5	md5.c	69;"	d	file:
T50	md5.c	114;"	d	file:
T51	md5.c	115;"	d	file:
T52	md5.c	116;"	d	file:
T53	md5.c	117;"	d	file:
T54	md5.c	118;"	d	file:
T55	md5.c	119;"	d	file:
T56	md5.c	120;"	d	file:
T57	md5.c	121;"	d	file:
T58	md5.c	122;"	d	file:
T59	md5.c	123;"	d	file:
T6	md5.c	70;"	d	file:
T60	md5.c	124;"	d	file:
T61	md5.c	125;"	d	file:
T62	md5.c	126;"	d	file:
T63	md5.c	127;"	d	file:
T64	md5.c	128;"	d	file:
T7	md5.c	71;"	d	file:
T8	md5.c	72;"	d	file:
T9	md5.c	73;"	d	file:
TARGCOMBO	tcumttest.c	/^} TARGCOMBO;$/;"	t	typeref:struct:__anon78	file:
TARGRACE	tcbmttest.c	/^} TARGRACE;$/;"	t	typeref:struct:__anon29	file:
TARGRACE	tchmttest.c	/^} TARGRACE;$/;"	t	typeref:struct:__anon55	file:
TARGREAD	tcamttest.c	/^} TARGREAD;$/;"	t	typeref:struct:__anon8	file:
TARGREAD	tcbmttest.c	/^} TARGREAD;$/;"	t	typeref:struct:__anon25	file:
TARGREAD	tcfmttest.c	/^} TARGREAD;$/;"	t	typeref:struct:__anon37	file:
TARGREAD	tchmttest.c	/^} TARGREAD;$/;"	t	typeref:struct:__anon51	file:
TARGREAD	tctmttest.c	/^} TARGREAD;$/;"	t	typeref:struct:__anon74	file:
TARGREMOVE	tcamttest.c	/^} TARGREMOVE;$/;"	t	typeref:struct:__anon9	file:
TARGREMOVE	tcbmttest.c	/^} TARGREMOVE;$/;"	t	typeref:struct:__anon26	file:
TARGREMOVE	tcfmttest.c	/^} TARGREMOVE;$/;"	t	typeref:struct:__anon38	file:
TARGREMOVE	tchmttest.c	/^} TARGREMOVE;$/;"	t	typeref:struct:__anon52	file:
TARGREMOVE	tctmttest.c	/^} TARGREMOVE;$/;"	t	typeref:struct:__anon75	file:
TARGTYPICAL	tcbmttest.c	/^} TARGTYPICAL;$/;"	t	typeref:struct:__anon28	file:
TARGTYPICAL	tcfmttest.c	/^} TARGTYPICAL;$/;"	t	typeref:struct:__anon40	file:
TARGTYPICAL	tchmttest.c	/^} TARGTYPICAL;$/;"	t	typeref:struct:__anon54	file:
TARGTYPICAL	tctmttest.c	/^} TARGTYPICAL;$/;"	t	typeref:struct:__anon77	file:
TARGTYPICAL	tcumttest.c	/^} TARGTYPICAL;$/;"	t	typeref:struct:__anon79	file:
TARGWICKED	tcbmttest.c	/^} TARGWICKED;$/;"	t	typeref:struct:__anon27	file:
TARGWICKED	tcfmttest.c	/^} TARGWICKED;$/;"	t	typeref:struct:__anon39	file:
TARGWICKED	tchmttest.c	/^} TARGWICKED;$/;"	t	typeref:struct:__anon53	file:
TARGWICKED	tctmttest.c	/^} TARGWICKED;$/;"	t	typeref:struct:__anon76	file:
TARGWRITE	tcamttest.c	/^} TARGWRITE;$/;"	t	typeref:struct:__anon7	file:
TARGWRITE	tcbmttest.c	/^} TARGWRITE;$/;"	t	typeref:struct:__anon24	file:
TARGWRITE	tcfmttest.c	/^} TARGWRITE;$/;"	t	typeref:struct:__anon36	file:
TARGWRITE	tchmttest.c	/^} TARGWRITE;$/;"	t	typeref:struct:__anon50	file:
TARGWRITE	tctmttest.c	/^} TARGWRITE;$/;"	t	typeref:struct:__anon73	file:
TCADB	tcadb.h	/^} TCADB;$/;"	t	typeref:struct:__anon4
TCALIGNOF	tcutil.h	4004;"	d
TCALIGNPAD	tcutil.h	4010;"	d
TCBDB	tcbdb.h	/^} TCBDB;$/;"	t	typeref:struct:__anon18
TCBIGEND	myconf.h	139;"	d
TCBIGEND	myconf.h	147;"	d
TCBITMAP	tcutil.h	/^typedef unsigned char TCBITMAP;          \/* type of a bit map object *\/$/;"	t
TCBITMAPCHECK	tcutil.h	3608;"	d
TCBITMAPDEL	tcutil.h	3587;"	d
TCBITMAPNEW	tcutil.h	3582;"	d
TCBITMAPOFF	tcutil.h	3601;"	d
TCBITMAPON	tcutil.h	3594;"	d
TCBITSTRM	tcutil.h	/^} TCBITSTRM;$/;"	t	typeref:struct:__anon96
TCBITSTRMCAT	tcutil.h	3624;"	d
TCBITSTRMINITR	tcutil.h	3654;"	d
TCBITSTRMINITW	tcutil.h	3613;"	d
TCBITSTRMNUM	tcutil.h	3676;"	d
TCBITSTRMREAD	tcutil.h	3664;"	d
TCBITSTRMSETEND	tcutil.h	3637;"	d
TCBITSTRMSIZE	tcutil.h	3649;"	d
TCBSENCUNIT	tcutil.c	9508;"	d	file:
TCBWTBUFNUM	tcutil.c	9511;"	d	file:
TCBWTCNTLV	tcutil.c	9510;"	d	file:
TCBWTCNTMIN	tcutil.c	9509;"	d	file:
TCBWTREC	tcutil.c	/^} TCBWTREC;$/;"	t	typeref:struct:__anon80	file:
TCCALCVNUMSIZE	myconf.h	526;"	d
TCCALLOC	tcutil.h	3961;"	d
TCCALLOC	tcutil.h	3966;"	d
TCCHIDX	tcutil.h	/^} TCCHIDX;$/;"	t	typeref:struct:__anon93
TCCHIDXNODE	tcutil.h	/^} TCCHIDXNODE;$/;"	t	typeref:struct:__anon92
TCCHIDXVNNUM	tcutil.c	5714;"	d	file:
TCCMP	tcutil.h	/^typedef int (*TCCMP)(const char *aptr, int asiz, const char *bptr, int bsiz, void *op);$/;"	t
TCCMPLEXICAL	myconf.h	531;"	d
TCCODEC	tcutil.h	/^typedef void *(*TCCODEC)(const void *ptr, int size, int *sp, void *op);$/;"	t
TCDBTBTREE	tcutil.h	/^  TCDBTBTREE,                            \/* B+ tree *\/$/;"	e	enum:__anon98
TCDBTFIXED	tcutil.h	/^  TCDBTFIXED,                            \/* fixed-length *\/$/;"	e	enum:__anon98
TCDBTHASH	tcutil.h	/^  TCDBTHASH,                             \/* hash table *\/$/;"	e	enum:__anon98
TCDBTTABLE	tcutil.h	/^  TCDBTTABLE                             \/* table *\/$/;"	e	enum:__anon98
TCDISTBUFSIZ	tcutil.c	4689;"	d	file:
TCDISTMAXLEN	tcutil.c	4688;"	d	file:
TCDODEBUG	myconf.h	102;"	d
TCDODEBUG	myconf.h	106;"	d
TCDPRINTF	tcutil.h	3878;"	d
TCDPRINTF	tcutil.h	3885;"	d
TCECLOSE	tcutil.h	/^  TCECLOSE,                              \/* close error *\/$/;"	e	enum:__anon97
TCEINVALID	tcutil.h	/^  TCEINVALID,                            \/* invalid operation *\/$/;"	e	enum:__anon97
TCEKEEP	tcutil.h	/^  TCEKEEP,                               \/* existing record *\/$/;"	e	enum:__anon97
TCELOCK	tcutil.h	/^  TCELOCK,                               \/* lock error *\/$/;"	e	enum:__anon97
TCEMETA	tcutil.h	/^  TCEMETA,                               \/* invalid meta data *\/$/;"	e	enum:__anon97
TCEMISC	tcutil.h	/^  TCEMISC = 9999                         \/* miscellaneous error *\/$/;"	e	enum:__anon97
TCEMKDIR	tcutil.h	/^  TCEMKDIR,                              \/* mkdir error *\/$/;"	e	enum:__anon97
TCEMMAP	tcutil.h	/^  TCEMMAP,                               \/* mmap error *\/$/;"	e	enum:__anon97
TCENCBUFSIZ	tcutil.c	7238;"	d	file:
TCENOFILE	tcutil.h	/^  TCENOFILE,                             \/* file not found *\/$/;"	e	enum:__anon97
TCENOPERM	tcutil.h	/^  TCENOPERM,                             \/* no permission *\/$/;"	e	enum:__anon97
TCENOREC	tcutil.h	/^  TCENOREC,                              \/* no record found *\/$/;"	e	enum:__anon97
TCEOPEN	tcutil.h	/^  TCEOPEN,                               \/* open error *\/$/;"	e	enum:__anon97
TCEREAD	tcutil.h	/^  TCEREAD,                               \/* read error *\/$/;"	e	enum:__anon97
TCERENAME	tcutil.h	/^  TCERENAME,                             \/* rename error *\/$/;"	e	enum:__anon97
TCERHEAD	tcutil.h	/^  TCERHEAD,                              \/* invalid record header *\/$/;"	e	enum:__anon97
TCERMDIR	tcutil.h	/^  TCERMDIR,                              \/* rmdir error *\/$/;"	e	enum:__anon97
TCESEEK	tcutil.h	/^  TCESEEK,                               \/* seek error *\/$/;"	e	enum:__anon97
TCESTAT	tcutil.h	/^  TCESTAT,                               \/* stat error *\/$/;"	e	enum:__anon97
TCESUCCESS	tcutil.h	/^  TCESUCCESS,                            \/* success *\/$/;"	e	enum:__anon97
TCESYNC	tcutil.h	/^  TCESYNC,                               \/* sync error *\/$/;"	e	enum:__anon97
TCETHREAD	tcutil.h	/^  TCETHREAD,                             \/* threading error *\/$/;"	e	enum:__anon97
TCETRUNC	tcutil.h	/^  TCETRUNC,                              \/* trunc error *\/$/;"	e	enum:__anon97
TCEUNLINK	tcutil.h	/^  TCEUNLINK,                             \/* unlink error *\/$/;"	e	enum:__anon97
TCEWRITE	tcutil.h	/^  TCEWRITE,                              \/* write error *\/$/;"	e	enum:__anon97
TCFDB	tcfdb.h	/^} TCFDB;$/;"	t	typeref:struct:__anon32
TCFILEMODE	tcutil.c	6907;"	d	file:
TCFREE	tcutil.h	3997;"	d
TCHDB	tchdb.h	/^} TCHDB;$/;"	t	typeref:struct:__anon46
TCHREC	tchdb.c	/^} TCHREC;$/;"	t	typeref:struct:__anon41	file:
TCHTOIL	myconf.h	141;"	d
TCHTOIL	myconf.h	149;"	d
TCHTOILL	myconf.h	142;"	d
TCHTOILL	myconf.h	150;"	d
TCHTOIS	myconf.h	140;"	d
TCHTOIS	myconf.h	148;"	d
TCIOBUFSIZ	tcutil.c	6908;"	d	file:
TCITER	tcutil.h	/^typedef bool (*TCITER)(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op);$/;"	t
TCITOHL	myconf.h	144;"	d
TCITOHL	myconf.h	152;"	d
TCITOHLL	myconf.h	145;"	d
TCITOHLL	myconf.h	153;"	d
TCITOHS	myconf.h	143;"	d
TCITOHS	myconf.h	151;"	d
TCKEYCMP	tcutil.c	984;"	d	file:
TCKWMUBRCT	tcutil.h	/^  TCKWMUBRCT = 1 << 2,                   \/* mark up by brackets *\/$/;"	e	enum:__anon91
TCKWMUCTRL	tcutil.h	/^  TCKWMUCTRL = 1 << 1,                   \/* mark up by control characters *\/$/;"	e	enum:__anon91
TCKWMUTAB	tcutil.h	/^  TCKWMUTAB = 1 << 0,                    \/* mark up by tabs *\/$/;"	e	enum:__anon91
TCKWNOOVER	tcutil.h	/^  TCKWNOOVER = 1 << 24,                  \/* no overlap *\/$/;"	e	enum:__anon91
TCKWPULEAD	tcutil.h	/^  TCKWPULEAD = 1 << 25                   \/* pick up the lead string *\/$/;"	e	enum:__anon91
TCLDBLCOLMAX	tcutil.c	4690;"	d	file:
TCLIST	tcutil.h	/^} TCLIST;$/;"	t	typeref:struct:__anon83
TCLISTDATUM	tcutil.h	/^} TCLISTDATUM;$/;"	t	typeref:struct:__anon82
TCLISTINSERT	tcutil.h	4085;"	d
TCLISTNUM	tcutil.h	4043;"	d
TCLISTPUSH	tcutil.h	4066;"	d
TCLISTTRUNC	tcutil.h	4105;"	d
TCLISTUNIT	tcutil.c	394;"	d	file:
TCLISTVAL	tcutil.h	4048;"	d
TCLISTVALPTR	tcutil.h	4056;"	d
TCLISTVALSIZ	tcutil.h	4061;"	d
TCMALLOC	tcutil.h	3947;"	d
TCMALLOC	tcutil.h	3952;"	d
TCMAP	tcutil.h	/^} TCMAP;$/;"	t	typeref:struct:__anon84
TCMAPCBUNIT	tcutil.c	960;"	d	file:
TCMAPCSUNIT	tcutil.c	959;"	d	file:
TCMAPDEFBNUM	tcutil.c	957;"	d	file:
TCMAPHASH1	tcutil.c	964;"	d	file:
TCMAPHASH2	tcutil.c	974;"	d	file:
TCMAPKMAXSIZ	tcutil.c	956;"	d	file:
TCMAPREC	tcutil.h	/^} TCMAPREC;$/;"	t	typeref:struct:_TCMAPREC
TCMAPRNUM	tcutil.h	4114;"	d
TCMAPTINYBNUM	tcutil.c	961;"	d	file:
TCMAPZMMINSIZ	tcutil.c	958;"	d	file:
TCMDB	tcutil.h	/^} TCMDB;$/;"	t	typeref:struct:__anon86
TCMDBDEFBNUM	tcutil.c	3660;"	d	file:
TCMDBHASH	tcutil.c	3663;"	d	file:
TCMDBMNUM	tcutil.c	3659;"	d	file:
TCMEMDUP	tcutil.h	3988;"	d
TCMICROYIELD	myconf.h	196;"	d
TCMICROYIELD	myconf.h	198;"	d
TCMPELEM	tcutil.h	/^} TCMPELEM;$/;"	t	typeref:struct:__anon88
TCMPOOL	tcutil.h	/^} TCMPOOL;$/;"	t	typeref:struct:__anon89
TCMPOOLUNIT	tcutil.c	4502;"	d	file:
TCNDB	tcutil.h	/^} TCNDB;$/;"	t	typeref:struct:__anon87
TCNUMBUFSIZ	myconf.h	443;"	d
TCPDPROC	tcutil.h	/^typedef void *(*TCPDPROC)(const void *vbuf, int vsiz, int *sp, void *op);$/;"	t
TCPRINTHEX	tcutil.h	3893;"	d
TCPRINTLIST	tcutil.h	3912;"	d
TCPRINTMAP	tcutil.h	3926;"	d
TCPRINTXSTR	tcutil.h	3904;"	d
TCPTRLIST	tcutil.h	/^} TCPTRLIST;$/;"	t	typeref:struct:__anon95
TCPTRLISTINSERT	tcutil.h	4143;"	d
TCPTRLISTNUM	tcutil.h	4119;"	d
TCPTRLISTPUSH	tcutil.h	4129;"	d
TCPTRLISTTRUNC	tcutil.h	4161;"	d
TCPTRLISTVAL	tcutil.h	4124;"	d
TCRANDDEV	tcutil.c	4687;"	d	file:
TCREADVNUMBUF	myconf.h	490;"	d
TCREADVNUMBUF64	myconf.h	508;"	d
TCREALLOC	tcutil.h	3975;"	d
TCREALLOC	tcutil.h	3980;"	d
TCSETVNUMBUF	myconf.h	446;"	d
TCSETVNUMBUF64	myconf.h	468;"	d
TCSWAB16	myconf.h	112;"	d
TCSWAB32	myconf.h	118;"	d
TCSWAB64	myconf.h	126;"	d
TCSYSNAME	myconf.h	30;"	d
TCSYSNAME	myconf.h	35;"	d
TCSYSNAME	myconf.h	40;"	d
TCSYSNAME	myconf.h	45;"	d
TCSYSNAME	myconf.h	50;"	d
TCSYSNAME	myconf.h	55;"	d
TCSYSNAME	myconf.h	60;"	d
TCSYSNAME	myconf.h	65;"	d
TCSYSNAME	myconf.h	70;"	d
TCSYSNAME	myconf.h	75;"	d
TCSYSNAME	myconf.h	80;"	d
TCSYSNAME	myconf.h	85;"	d
TCSYSNAME	myconf.h	90;"	d
TCTDB	tctdb.h	/^} TCTDB;$/;"	t	typeref:struct:__anon62
TCTESTYIELD	myconf.h	406;"	d
TCTESTYIELD	myconf.h	427;"	d
TCTFILE	bros/cmpsqltctest.c	16;"	d	file:
TCTMPL	tcutil.h	/^} TCTMPL;$/;"	t	typeref:struct:__anon94
TCTMPLBEGSEP	tcutil.c	8781;"	d	file:
TCTMPLENDSEP	tcutil.c	8782;"	d	file:
TCTMPLMAXDEP	tcutil.c	8780;"	d	file:
TCTMPLUNIT	tcutil.c	8779;"	d	file:
TCTREE	tcutil.h	/^} TCTREE;$/;"	t	typeref:struct:__anon85
TCTREECBUNIT	tcutil.c	2328;"	d	file:
TCTREECSUNIT	tcutil.c	2327;"	d	file:
TCTREEREC	tcutil.h	/^} TCTREEREC;$/;"	t	typeref:struct:_TCTREEREC
TCTYPRFXLIST	tcutil.c	8783;"	d	file:
TCTYPRFXMAP	tcutil.c	8784;"	d	file:
TCUBCACHE	myconf.h	157;"	d
TCUBCACHE	myconf.h	160;"	d
TCUBCACHE	myconf.h	162;"	d
TCUNLOWER	tcutil.h	/^  TCUNLOWER = 1 << 1,                    \/* lower case normalization *\/$/;"	e	enum:__anon90
TCUNNOACC	tcutil.h	/^  TCUNNOACC = 1 << 2,                    \/* strip accent marks *\/$/;"	e	enum:__anon90
TCUNSPACE	tcutil.h	/^  TCUNSPACE = 1 << 0,                    \/* white space normalization *\/$/;"	e	enum:__anon90
TCUNWIDTH	tcutil.h	/^  TCUNWIDTH = 1 << 3                     \/* half-width normalization *\/$/;"	e	enum:__anon90
TCUSEBZIP	myconf.h	172;"	d
TCUSEBZIP	myconf.h	174;"	d
TCUSEEXLZMA	myconf.h	178;"	d
TCUSEEXLZMA	myconf.h	180;"	d
TCUSEEXLZO	myconf.h	184;"	d
TCUSEEXLZO	myconf.h	186;"	d
TCUSEPTHREAD	myconf.h	190;"	d
TCUSEPTHREAD	myconf.h	192;"	d
TCUSEZLIB	myconf.h	166;"	d
TCUSEZLIB	myconf.h	168;"	d
TCXMLATBNUM	tcutil.c	7239;"	d	file:
TCXSTR	tcutil.h	/^} TCXSTR;$/;"	t	typeref:struct:__anon81
TCXSTRCAT	tcutil.h	4015;"	d
TCXSTRPTR	tcutil.h	4033;"	d
TCXSTRSIZE	tcutil.h	4038;"	d
TCXSTRUNIT	tcutil.c	98;"	d	file:
TDBCOLBUFSIZ	tctdb.c	45;"	d	file:
TDBCOND	tctdb.h	/^} TDBCOND;$/;"	t	typeref:struct:__anon67
TDBDEFAPOW	tctdb.c	28;"	d	file:
TDBDEFBNUM	tctdb.c	27;"	d	file:
TDBDEFFPOW	tctdb.c	29;"	d	file:
TDBDEFLCNUM	tctdb.c	30;"	d	file:
TDBDEFNCNUM	tctdb.c	31;"	d	file:
TDBDEFXMSIZ	tctdb.c	32;"	d	file:
TDBFFATAL	tctdb.h	/^  TDBFFATAL = HDBFFATAL                  \/* whether with fatal error *\/$/;"	e	enum:__anon63
TDBFOPEN	tctdb.h	/^  TDBFOPEN = HDBFOPEN,                   \/* whether opened *\/$/;"	e	enum:__anon63
TDBFTSBMNUM	tctdb.c	43;"	d	file:
TDBFTSNUMOCR	tctdb.c	/^} TDBFTSNUMOCR;$/;"	t	typeref:struct:__anon60	file:
TDBFTSOCRUNIT	tctdb.c	42;"	d	file:
TDBFTSSTROCR	tctdb.c	/^} TDBFTSSTROCR;$/;"	t	typeref:struct:__anon59	file:
TDBFTSUNIT	tctdb.c	/^} TDBFTSUNIT;$/;"	t	typeref:struct:__anon58	file:
TDBFTSUNITMAX	tctdb.c	41;"	d	file:
TDBHINTUSIZ	tctdb.c	47;"	d	file:
TDBIDX	tctdb.h	/^} TDBIDX;$/;"	t	typeref:struct:__anon61
TDBIDXICCBNUM	tctdb.c	37;"	d	file:
TDBIDXICCMAX	tctdb.c	38;"	d	file:
TDBIDXICCSYNC	tctdb.c	39;"	d	file:
TDBIDXLMEMB	tctdb.c	34;"	d	file:
TDBIDXLSMAX	tctdb.c	36;"	d	file:
TDBIDXNMEMB	tctdb.c	35;"	d	file:
TDBIDXQGUNIT	tctdb.c	40;"	d	file:
TDBIDXSUFFIX	tctdb.c	33;"	d	file:
TDBITDECIMAL	tctdb.h	/^  TDBITDECIMAL,                          \/* decimal string *\/$/;"	e	enum:__anon66
TDBITKEEP	tctdb.h	/^  TDBITKEEP = 1 << 24                    \/* keep existing index *\/$/;"	e	enum:__anon66
TDBITLEXICAL	tctdb.h	/^  TDBITLEXICAL,                          \/* lexical string *\/$/;"	e	enum:__anon66
TDBITOPT	tctdb.h	/^  TDBITOPT = 9998,                       \/* optimize *\/$/;"	e	enum:__anon66
TDBITQGRAM	tctdb.h	/^  TDBITQGRAM,                            \/* q-gram inverted index *\/$/;"	e	enum:__anon66
TDBITTOKEN	tctdb.h	/^  TDBITTOKEN,                            \/* token inverted index *\/$/;"	e	enum:__anon66
TDBITVOID	tctdb.h	/^  TDBITVOID = 9999,                      \/* void *\/$/;"	e	enum:__anon66
TDBLEFTOPQSIZ	tctdb.c	24;"	d	file:
TDBLOCKMETHOD	tctdb.c	85;"	d	file:
TDBMSDIFF	tctdb.h	/^  TDBMSDIFF                              \/* difference *\/$/;"	e	enum:__anon71
TDBMSISECT	tctdb.h	/^  TDBMSISECT,                            \/* intersection *\/$/;"	e	enum:__anon71
TDBMSUNION	tctdb.h	/^  TDBMSUNION,                            \/* union *\/$/;"	e	enum:__anon71
TDBNUMCNTCOL	tctdb.c	44;"	d	file:
TDBNUMCOLMAX	tctdb.c	46;"	d	file:
TDBOCREAT	tctdb.h	/^  TDBOCREAT = 1 << 2,                    \/* writer creating *\/$/;"	e	enum:__anon65
TDBOLCKNB	tctdb.h	/^  TDBOLCKNB = 1 << 5,                    \/* lock without blocking *\/$/;"	e	enum:__anon65
TDBONOLCK	tctdb.h	/^  TDBONOLCK = 1 << 4,                    \/* open without locking *\/$/;"	e	enum:__anon65
TDBOPAQUESIZ	tctdb.c	23;"	d	file:
TDBORDRATIO	tctdb.c	48;"	d	file:
TDBOREADER	tctdb.h	/^  TDBOREADER = 1 << 0,                   \/* open as a reader *\/$/;"	e	enum:__anon65
TDBOTRUNC	tctdb.h	/^  TDBOTRUNC = 1 << 3,                    \/* writer truncating *\/$/;"	e	enum:__anon65
TDBOTSYNC	tctdb.h	/^  TDBOTSYNC = 1 << 6                     \/* synchronize every transaction *\/$/;"	e	enum:__anon65
TDBOWRITER	tctdb.h	/^  TDBOWRITER = 1 << 1,                   \/* open as a writer *\/$/;"	e	enum:__anon65
TDBPAGEBUFSIZ	tctdb.c	25;"	d	file:
TDBPDCAT	tctdb.c	/^  TDBPDCAT                               \/\/ concatenate values$/;"	e	enum:__anon56	file:
TDBPDKEEP	tctdb.c	/^  TDBPDKEEP,                             \/\/ keep the existing value$/;"	e	enum:__anon56	file:
TDBPDOVER	tctdb.c	/^  TDBPDOVER,                             \/\/ overwrite an existing value$/;"	e	enum:__anon56	file:
TDBQCFTSAND	tctdb.h	/^  TDBQCFTSAND,                           \/* full-text search with all tokens in *\/$/;"	e	enum:__anon69
TDBQCFTSEX	tctdb.h	/^  TDBQCFTSEX,                            \/* full-text search with the compound expression of *\/$/;"	e	enum:__anon69
TDBQCFTSOR	tctdb.h	/^  TDBQCFTSOR,                            \/* full-text search with at least one token in *\/$/;"	e	enum:__anon69
TDBQCFTSPH	tctdb.h	/^  TDBQCFTSPH,                            \/* full-text search with the phrase of *\/$/;"	e	enum:__anon69
TDBQCNEGATE	tctdb.h	/^  TDBQCNEGATE = 1 << 24,                 \/* negation flag *\/$/;"	e	enum:__anon69
TDBQCNOIDX	tctdb.h	/^  TDBQCNOIDX = 1 << 25                   \/* no index flag *\/$/;"	e	enum:__anon69
TDBQCNUMBT	tctdb.h	/^  TDBQCNUMBT,                            \/* number is between two tokens of *\/$/;"	e	enum:__anon69
TDBQCNUMEQ	tctdb.h	/^  TDBQCNUMEQ,                            \/* number is equal to *\/$/;"	e	enum:__anon69
TDBQCNUMGE	tctdb.h	/^  TDBQCNUMGE,                            \/* number is greater than or equal to *\/$/;"	e	enum:__anon69
TDBQCNUMGT	tctdb.h	/^  TDBQCNUMGT,                            \/* number is greater than *\/$/;"	e	enum:__anon69
TDBQCNUMLE	tctdb.h	/^  TDBQCNUMLE,                            \/* number is less than or equal to *\/$/;"	e	enum:__anon69
TDBQCNUMLT	tctdb.h	/^  TDBQCNUMLT,                            \/* number is less than *\/$/;"	e	enum:__anon69
TDBQCNUMOREQ	tctdb.h	/^  TDBQCNUMOREQ,                          \/* number is equal to at least one token in *\/$/;"	e	enum:__anon69
TDBQCSTRAND	tctdb.h	/^  TDBQCSTRAND,                           \/* string includes all tokens in *\/$/;"	e	enum:__anon69
TDBQCSTRBW	tctdb.h	/^  TDBQCSTRBW,                            \/* string begins with *\/$/;"	e	enum:__anon69
TDBQCSTREQ	tctdb.h	/^  TDBQCSTREQ,                            \/* string is equal to *\/$/;"	e	enum:__anon69
TDBQCSTREW	tctdb.h	/^  TDBQCSTREW,                            \/* string ends with *\/$/;"	e	enum:__anon69
TDBQCSTRINC	tctdb.h	/^  TDBQCSTRINC,                           \/* string is included in *\/$/;"	e	enum:__anon69
TDBQCSTROR	tctdb.h	/^  TDBQCSTROR,                            \/* string includes at least one token in *\/$/;"	e	enum:__anon69
TDBQCSTROREQ	tctdb.h	/^  TDBQCSTROREQ,                          \/* string is equal to at least one token in *\/$/;"	e	enum:__anon69
TDBQCSTRRX	tctdb.h	/^  TDBQCSTRRX,                            \/* string matches regular expressions of *\/$/;"	e	enum:__anon69
TDBQONUMASC	tctdb.h	/^  TDBQONUMASC,                           \/* number ascending *\/$/;"	e	enum:__anon70
TDBQONUMDESC	tctdb.h	/^  TDBQONUMDESC                           \/* number descending *\/$/;"	e	enum:__anon70
TDBQOSTRASC	tctdb.h	/^  TDBQOSTRASC,                           \/* string ascending *\/$/;"	e	enum:__anon70
TDBQOSTRDESC	tctdb.h	/^  TDBQOSTRDESC,                          \/* string descending *\/$/;"	e	enum:__anon70
TDBQPOUT	tctdb.h	/^  TDBQPOUT = 1 << 1,                     \/* remove the record *\/$/;"	e	enum:__anon72
TDBQPPUT	tctdb.h	/^  TDBQPPUT = 1 << 0,                     \/* modify the record *\/$/;"	e	enum:__anon72
TDBQPSTOP	tctdb.h	/^  TDBQPSTOP = 1 << 24                    \/* stop the iteration *\/$/;"	e	enum:__anon72
TDBQRY	tctdb.h	/^} TDBQRY;$/;"	t	typeref:struct:__anon68
TDBQRYPROC	tctdb.h	/^typedef int (*TDBQRYPROC)(const void *pkbuf, int pksiz, TCMAP *cols, void *op);$/;"	t
TDBSORTREC	tctdb.c	/^} TDBSORTREC;$/;"	t	typeref:struct:__anon57	file:
TDBTBZIP	tctdb.h	/^  TDBTBZIP = 1 << 2,                     \/* compress each record with BZIP2 *\/$/;"	e	enum:__anon64
TDBTDEFLATE	tctdb.h	/^  TDBTDEFLATE = 1 << 1,                  \/* compress each page with Deflate *\/$/;"	e	enum:__anon64
TDBTEXCODEC	tctdb.h	/^  TDBTEXCODEC = 1 << 4                   \/* compress each record with outer functions *\/$/;"	e	enum:__anon64
TDBTHREADYIELD	tctdb.c	89;"	d	file:
TDBTLARGE	tctdb.h	/^  TDBTLARGE = 1 << 0,                    \/* use 64-bit bucket array *\/$/;"	e	enum:__anon64
TDBTTCBS	tctdb.h	/^  TDBTTCBS = 1 << 3,                     \/* compress each page with TCBS *\/$/;"	e	enum:__anon64
TDBUNLOCKMETHOD	tctdb.c	87;"	d	file:
TREESTACKNUM	tcutil.c	2326;"	d	file:
TRUE	bros/bdbtest.c	11;"	d	file:
TRUE	bros/bdbtest.c	12;"	d	file:
TRUE	bros/cdbtest.c	11;"	d	file:
TRUE	bros/cdbtest.c	12;"	d	file:
TRUE	bros/gdbmtest.c	11;"	d	file:
TRUE	bros/gdbmtest.c	12;"	d	file:
TRUE	bros/ndbmtest.c	13;"	d	file:
TRUE	bros/ndbmtest.c	14;"	d	file:
TRUE	bros/qdbmtest.c	13;"	d	file:
TRUE	bros/qdbmtest.c	14;"	d	file:
TRUE	bros/sdbmtest.c	13;"	d	file:
TRUE	bros/sdbmtest.c	14;"	d	file:
TRUE	bros/sqltest.c	7;"	d	file:
TRUE	bros/sqltest.c	8;"	d	file:
TRUE	bros/tctest.c	16;"	d	file:
TRUE	bros/tctest.c	17;"	d	file:
TRUE	bros/tdbtest.c	13;"	d	file:
TRUE	bros/tdbtest.c	14;"	d	file:
T_MASK	md5.c	64;"	d	file:
UPLOADMAX	tcawmgr.c	23;"	d	file:
VALWIDTH	tcawmgr.c	26;"	d	file:
VERSION	Makefile	/^VERSION = 1.4.48$/;"	m
XP	tcawmgr.c	30;"	d	file:
ZLIBBUFSIZ	myconf.c	50;"	d	file:
_MYCONF_H	myconf.h	18;"	d
_SYS_AIX_	myconf.h	64;"	d
_SYS_CYGWIN_	myconf.h	84;"	d
_SYS_FREEBSD_	myconf.h	34;"	d
_SYS_GENERIC_	myconf.h	89;"	d
_SYS_HPUX_	myconf.h	54;"	d
_SYS_LINUX_	myconf.h	29;"	d
_SYS_MACOSX_	myconf.h	69;"	d
_SYS_MINGW_	myconf.h	79;"	d
_SYS_MSVC_	myconf.h	74;"	d
_SYS_NETBSD_	myconf.h	39;"	d
_SYS_OPENBSD_	myconf.h	44;"	d
_SYS_SUNOS_	myconf.h	49;"	d
_SYS_TRU64_	myconf.h	59;"	d
_TCADB_H	tcadb.h	18;"	d
_TCBDB_H	tcbdb.h	18;"	d
_TCFDB_H	tcfdb.h	18;"	d
_TCHDB_H	tchdb.h	18;"	d
_TCMAPREC	tcutil.h	/^typedef struct _TCMAPREC {               \/* type of structure for an element of a map *\/$/;"	s
_TCTDB_H	tctdb.h	18;"	d
_TCTREEREC	tcutil.h	/^typedef struct _TCTREEREC {              \/* type of structure for an element of a tree *\/$/;"	s
_TCUTIL_H	tcutil.h	18;"	d
_TCZMGZIP	myconf.h	/^  _TCZMGZIP$/;"	e	enum:__anon1
_TCZMRAW	myconf.h	/^  _TCZMRAW,$/;"	e	enum:__anon1
_TCZMZLIB	myconf.h	/^  _TCZMZLIB,$/;"	e	enum:__anon1
_TC_FORMATVER	tcutil.h	3690;"	d
_TC_LIBVER	tcutil.h	3689;"	d
_TC_VERSION	tcutil.h	3688;"	d
__TCADB_CLINKAGEBEGIN	tcadb.h	21;"	d
__TCADB_CLINKAGEBEGIN	tcadb.h	24;"	d
__TCADB_CLINKAGEEND	tcadb.h	22;"	d
__TCADB_CLINKAGEEND	tcadb.h	25;"	d
__TCBDB_CLINKAGEBEGIN	tcbdb.h	21;"	d
__TCBDB_CLINKAGEBEGIN	tcbdb.h	24;"	d
__TCBDB_CLINKAGEEND	tcbdb.h	22;"	d
__TCBDB_CLINKAGEEND	tcbdb.h	25;"	d
__TCFDB_CLINKAGEBEGIN	tcfdb.h	21;"	d
__TCFDB_CLINKAGEBEGIN	tcfdb.h	24;"	d
__TCFDB_CLINKAGEEND	tcfdb.h	22;"	d
__TCFDB_CLINKAGEEND	tcfdb.h	25;"	d
__TCHDB_CLINKAGEBEGIN	tchdb.h	21;"	d
__TCHDB_CLINKAGEBEGIN	tchdb.h	24;"	d
__TCHDB_CLINKAGEEND	tchdb.h	22;"	d
__TCHDB_CLINKAGEEND	tchdb.h	25;"	d
__TCTDB_CLINKAGEBEGIN	tctdb.h	21;"	d
__TCTDB_CLINKAGEBEGIN	tctdb.h	24;"	d
__TCTDB_CLINKAGEEND	tctdb.h	22;"	d
__TCTDB_CLINKAGEEND	tctdb.h	25;"	d
__TCUTIL_CLINKAGEBEGIN	tcutil.h	21;"	d
__TCUTIL_CLINKAGEBEGIN	tcutil.h	24;"	d
__TCUTIL_CLINKAGEEND	tcutil.h	22;"	d
__TCUTIL_CLINKAGEEND	tcutil.h	25;"	d
_alignof	myconf.h	262;"	d
_alignof	myconf.h	264;"	d
_issigned	myconf.h	266;"	d
_maxof	myconf.h	267;"	d
_tc_bzcompress	myconf.c	/^char *(*_tc_bzcompress)(const char *, int, int *) = NULL;$/;"	v
_tc_bzcompress	myconf.c	/^char *(*_tc_bzcompress)(const char *, int, int *) = _tc_bzcompress_impl;$/;"	v
_tc_bzcompress_impl	myconf.c	/^static char *_tc_bzcompress_impl(const char *ptr, int size, int *sp){$/;"	f	file:
_tc_bzdecompress	myconf.c	/^char *(*_tc_bzdecompress)(const char *, int, int *) = NULL;$/;"	v
_tc_bzdecompress	myconf.c	/^char *(*_tc_bzdecompress)(const char *, int, int *) = _tc_bzdecompress_impl;$/;"	v
_tc_bzdecompress_impl	myconf.c	/^static char *_tc_bzdecompress_impl(const char *ptr, int size, int *sp){$/;"	f	file:
_tc_deflate	myconf.c	/^char *(*_tc_deflate)(const char *, int, int *, int) = NULL;$/;"	v
_tc_deflate	myconf.c	/^char *(*_tc_deflate)(const char *, int, int *, int) = _tc_deflate_impl;$/;"	v
_tc_deflate_impl	myconf.c	/^static char *_tc_deflate_impl(const char *ptr, int size, int *sp, int mode){$/;"	f	file:
_tc_dummy_cnt	myconf.c	/^int _tc_dummy_cnt = 0;$/;"	v
_tc_dummyfunc	myconf.c	/^int _tc_dummyfunc(void){$/;"	f
_tc_dummyfuncv	myconf.c	/^int _tc_dummyfuncv(int a, ...){$/;"	f
_tc_getcrc	myconf.c	/^unsigned int (*_tc_getcrc)(const char *, int) = NULL;$/;"	v
_tc_getcrc	myconf.c	/^unsigned int (*_tc_getcrc)(const char *, int) = _tc_getcrc_impl;$/;"	v
_tc_getcrc_impl	myconf.c	/^static unsigned int _tc_getcrc_impl(const char *ptr, int size){$/;"	f	file:
_tc_inflate	myconf.c	/^char *(*_tc_inflate)(const char *, int, int *, int) = NULL;$/;"	v
_tc_inflate	myconf.c	/^char *(*_tc_inflate)(const char *, int, int *, int) = _tc_inflate_impl;$/;"	v
_tc_inflate_impl	myconf.c	/^static char *_tc_inflate_impl(const char *ptr, int size, int *sp, int mode){$/;"	f	file:
_tc_lzo_init	myconf.c	/^bool _tc_lzo_init = false;$/;"	v
_tc_recdecode	myconf.c	/^void *_tc_recdecode(const void *ptr, int size, int *sp, void *op){$/;"	f
_tc_recencode	myconf.c	/^void *_tc_recencode(const void *ptr, int size, int *sp, void *op){$/;"	f
abcd	md5.h	/^    md5_word_t abcd[4];         \/* digest buffer *\/$/;"	m	struct:md5_state_s
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
action	tcawmgr.c	/^  int action;                            \/\/ kind of the action$/;"	m	struct:__anon10	file:
adb	tcadb.c	/^  TCADB *adb;                            \/\/ source database object$/;"	m	struct:__anon3	file:
adb	tcamttest.c	/^  TCADB *adb;$/;"	m	struct:__anon7	file:
adb	tcamttest.c	/^  TCADB *adb;$/;"	m	struct:__anon8	file:
adb	tcamttest.c	/^  TCADB *adb;$/;"	m	struct:__anon9	file:
adbs	tcadb.c	/^  TCADB **adbs;                          \/\/ inner database objects$/;"	m	struct:__anon2	file:
adddouble	tcadb.h	/^  double (*adddouble)(void *, const void *, int, double);$/;"	m	struct:__anon6
addint	tcadb.h	/^  int (*addint)(void *, const void *, int, int);$/;"	m	struct:__anon6
align	tchdb.h	/^  uint32_t align;                        \/* record alignment *\/$/;"	m	struct:__anon46
alive	tctdb.h	/^  bool alive;                            \/* alive flag *\/$/;"	m	struct:__anon67
amtx	tcfdb.h	/^  void *amtx;                            \/* mutex for attribute *\/$/;"	m	struct:__anon32
anum	tcutil.h	/^  int anum;                              \/* number of the elements of the array *\/$/;"	m	struct:__anon83
anum	tcutil.h	/^  int anum;                              \/* number of the elements of the array *\/$/;"	m	struct:__anon89
anum	tcutil.h	/^  int anum;                              \/* number of the elements of the array *\/$/;"	m	struct:__anon95
apow	tchdb.h	/^  uint8_t apow;                          \/* power of record alignment *\/$/;"	m	struct:__anon46
array	tcfdb.h	/^  unsigned char *array;                  \/* pointer to the array region *\/$/;"	m	struct:__anon32
array	tcutil.h	/^  TCLISTDATUM *array;                    \/* array of data *\/$/;"	m	struct:__anon83
array	tcutil.h	/^  void **array;                          \/* array of pointers *\/$/;"	m	struct:__anon95
as	tchmttest.c	/^  bool as;$/;"	m	struct:__anon50	file:
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
asize	tcutil.h	/^  int asize;                             \/* size of the allocated region *\/$/;"	m	struct:__anon81
assert	myconf.h	413;"	d
assert	myconf.h	414;"	d
async	tchdb.h	/^  bool async;                            \/* whether asynchronous storing is called *\/$/;"	m	struct:__anon46
ba32	tchdb.h	/^  uint32_t *ba32;                        \/* 32-bit bucket array *\/$/;"	m	struct:__anon46
ba64	tchdb.h	/^  uint64_t *ba64;                        \/* 64-bit bucket array *\/$/;"	m	struct:__anon46
bbuf	tchdb.c	/^  char *bbuf;                            \/\/ buffer of the body$/;"	m	struct:__anon41	file:
bdb	tcadb.c	/^  TCBDB *bdb;                            \/\/ destination database object$/;"	m	struct:__anon3	file:
bdb	tcadb.h	/^  TCBDB *bdb;                            \/* B+ tree database object *\/$/;"	m	struct:__anon4
bdb	tcbdb.h	/^  TCBDB *bdb;                            \/* database object *\/$/;"	m	struct:__anon22
bdb	tcbmttest.c	/^  TCBDB *bdb;$/;"	m	struct:__anon24	file:
bdb	tcbmttest.c	/^  TCBDB *bdb;$/;"	m	struct:__anon25	file:
bdb	tcbmttest.c	/^  TCBDB *bdb;$/;"	m	struct:__anon26	file:
bdb	tcbmttest.c	/^  TCBDB *bdb;$/;"	m	struct:__anon27	file:
bdb	tcbmttest.c	/^  TCBDB *bdb;$/;"	m	struct:__anon28	file:
bdb	tcbmttest.c	/^  TCBDB *bdb;$/;"	m	struct:__anon29	file:
begsep	tcutil.h	/^  char *begsep;                          \/* beginning separator *\/$/;"	m	struct:__anon94
bnum	tchdb.h	/^  uint64_t bnum;                         \/* number of the bucket array *\/$/;"	m	struct:__anon46
bnum	tcutil.h	/^  uint32_t bnum;                         \/* number of buckets *\/$/;"	m	struct:__anon84
boff	tchdb.c	/^  uint64_t boff;                         \/\/ offset of the body$/;"	m	struct:__anon41	file:
buckets	tcutil.h	/^  TCMAPREC **buckets;                    \/* bucket array *\/$/;"	m	struct:__anon84
buf	md5.h	/^    md5_byte_t buf[64];         \/* accumulate block *\/$/;"	m	struct:md5_state_s
callback	bros/cmpsqltctest.c	/^static int callback(void *opq, int argc, char **argv, char **colname){$/;"	f	file:
callback	bros/sqltest.c	/^int callback(void *opq, int argc, char **argv, char **colname){$/;"	f
capcnt	tcadb.h	/^  uint32_t capcnt;                       \/* count for capacity check *\/$/;"	m	struct:__anon4
capnum	tcadb.h	/^  int64_t capnum;                        \/* capacity number of records *\/$/;"	m	struct:__anon4
capnum	tcbdb.h	/^  uint64_t capnum;                       \/* capacity number of records *\/$/;"	m	struct:__anon18
capsiz	tcadb.h	/^  int64_t capsiz;                        \/* capacity size of using memory *\/$/;"	m	struct:__anon4
cc	tctdb.h	/^  void *cc;                              \/* internal cache object *\/$/;"	m	struct:__anon61
checkfile	lab/widthcheck	/^def checkfile(path)$/;"	f
checkurl	lab/wgettsv	/^def checkurl(url, filters)$/;"	f
clock	tcbdb.h	/^  uint64_t clock;                        \/* logical clock *\/$/;"	m	struct:__anon22
clock	tcbdb.h	/^  volatile uint64_t clock;               \/* logical clock *\/$/;"	m	struct:__anon18
close	tcadb.h	/^  bool (*close)(void *);$/;"	m	struct:__anon6
cmp	tcbdb.h	/^  TCCMP cmp;                             \/* pointer to the comparison function *\/$/;"	m	struct:__anon18
cmp	tcutil.h	/^  TCCMP cmp;                             \/* pointer to the comparison function *\/$/;"	m	struct:__anon85
cmpop	tcbdb.h	/^  void *cmpop;                           \/* opaque object for the comparison function *\/$/;"	m	struct:__anon18
cmpop	tcutil.h	/^  void *cmpop;                           \/* opaque object for the comparison function *\/$/;"	m	struct:__anon85
cmtx	tcbdb.h	/^  void *cmtx;                            \/* mutex for cache *\/$/;"	m	struct:__anon18
cnt_adjleafc	tcbdb.h	/^  volatile int64_t cnt_adjleafc;         \/* tesing counter for node cache adjust times *\/$/;"	m	struct:__anon18
cnt_adjnodec	tcbdb.h	/^  volatile int64_t cnt_adjnodec;         \/* tesing counter for node cache adjust times *\/$/;"	m	struct:__anon18
cnt_adjrecc	tchdb.h	/^  volatile int64_t cnt_adjrecc;          \/* tesing counter for record cache adjust times *\/$/;"	m	struct:__anon46
cnt_appenddrp	tchdb.h	/^  volatile int64_t cnt_appenddrp;        \/* tesing counter for DRP append times *\/$/;"	m	struct:__anon46
cnt_deferdrp	tchdb.h	/^  volatile int64_t cnt_deferdrp;         \/* tesing counter for DRP defer times *\/$/;"	m	struct:__anon46
cnt_defrag	tchdb.h	/^  volatile int64_t cnt_defrag;           \/* tesing counter for defragmentation times *\/$/;"	m	struct:__anon46
cnt_dividefbp	tchdb.h	/^  volatile int64_t cnt_dividefbp;        \/* tesing counter for FBP divide times *\/$/;"	m	struct:__anon46
cnt_flushdrp	tchdb.h	/^  volatile int64_t cnt_flushdrp;         \/* tesing counter for DRP flush times *\/$/;"	m	struct:__anon46
cnt_insertfbp	tchdb.h	/^  volatile int64_t cnt_insertfbp;        \/* tesing counter for FBP insert times *\/$/;"	m	struct:__anon46
cnt_killleaf	tcbdb.h	/^  volatile int64_t cnt_killleaf;         \/* tesing counter for leaf kill times *\/$/;"	m	struct:__anon18
cnt_loadleaf	tcbdb.h	/^  volatile int64_t cnt_loadleaf;         \/* tesing counter for leaf load times *\/$/;"	m	struct:__anon18
cnt_loadnode	tcbdb.h	/^  volatile int64_t cnt_loadnode;         \/* tesing counter for node load times *\/$/;"	m	struct:__anon18
cnt_mergefbp	tchdb.h	/^  volatile int64_t cnt_mergefbp;         \/* tesing counter for FBP merge times *\/$/;"	m	struct:__anon46
cnt_moverec	tchdb.h	/^  volatile int64_t cnt_moverec;          \/* tesing counter for record move times *\/$/;"	m	struct:__anon46
cnt_readrec	tcfdb.h	/^  int64_t cnt_readrec;                   \/* tesing counter for record read times *\/$/;"	m	struct:__anon32
cnt_readrec	tchdb.h	/^  volatile int64_t cnt_readrec;          \/* tesing counter for record read times *\/$/;"	m	struct:__anon46
cnt_reducefbp	tchdb.h	/^  volatile int64_t cnt_reducefbp;        \/* tesing counter for FBP reduce times *\/$/;"	m	struct:__anon46
cnt_reuserec	tchdb.h	/^  volatile int64_t cnt_reuserec;         \/* tesing counter for record reuse times *\/$/;"	m	struct:__anon46
cnt_saveleaf	tcbdb.h	/^  volatile int64_t cnt_saveleaf;         \/* tesing counter for leaf save times *\/$/;"	m	struct:__anon18
cnt_savenode	tcbdb.h	/^  volatile int64_t cnt_savenode;         \/* tesing counter for node save times *\/$/;"	m	struct:__anon18
cnt_searchfbp	tchdb.h	/^  volatile int64_t cnt_searchfbp;        \/* tesing counter for FBP search times *\/$/;"	m	struct:__anon46
cnt_shiftrec	tchdb.h	/^  volatile int64_t cnt_shiftrec;         \/* tesing counter for record shift times *\/$/;"	m	struct:__anon46
cnt_splicefbp	tchdb.h	/^  volatile int64_t cnt_splicefbp;        \/* tesing counter for FBP splice times *\/$/;"	m	struct:__anon46
cnt_trunc	tchdb.h	/^  volatile int64_t cnt_trunc;            \/* tesing counter for truncation times *\/$/;"	m	struct:__anon46
cnt_truncfile	tcfdb.h	/^  int64_t cnt_truncfile;                 \/* tesing counter for file truncate times *\/$/;"	m	struct:__anon32
cnt_writerec	tcfdb.h	/^  int64_t cnt_writerec;                  \/* tesing counter for record write times *\/$/;"	m	struct:__anon32
cnt_writerec	tchdb.h	/^  volatile int64_t cnt_writerec;         \/* tesing counter for record write times *\/$/;"	m	struct:__anon46
cnum	tctdb.h	/^  int cnum;                              \/* number of conditions *\/$/;"	m	struct:__anon68
conds	tctdb.h	/^  TDBCOND *conds;                        \/* condition objects *\/$/;"	m	struct:__anon68
conf	tcutil.h	/^  TCMAP *conf;                           \/* configuration variables *\/$/;"	m	struct:__anon94
copy	tcadb.h	/^  bool (*copy)(void *, const char *);$/;"	m	struct:__anon6
count	md5.h	/^    md5_word_t count[2];        \/* message length in bits, lsw first *\/$/;"	m	struct:md5_state_s
count	tctdb.h	/^  int count;                             \/* count of corresponding records *\/$/;"	m	struct:__anon68
cp	tcutil.h	/^  uint8_t *cp;                           \/* current pointer *\/$/;"	m	struct:__anon96
csiz	tcadb.c	/^  int64_t csiz;                          \/\/ capacity of cached records$/;"	m	struct:__anon3	file:
cur	tcadb.h	/^  BDBCUR *cur;                           \/* cursor of B+ tree *\/$/;"	m	struct:__anon4
cur	tcutil.h	/^  TCMAPREC *cur;                         \/* pointer to the current element *\/$/;"	m	struct:__anon84
cur	tcutil.h	/^  TCTREEREC *cur;                        \/* pointer to the current element *\/$/;"	m	struct:__anon85
d	tcutil.h	/^typedef union { int32_t i; int64_t l; double d; void *p; TCCMP f; } tcgeneric_t;$/;"	m	union:__anon99
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
db	tctdb.h	/^  void *db;                              \/* internal database object *\/$/;"	m	struct:__anon61
dbgfd	tcfdb.h	/^  int dbgfd;                             \/* file descriptor for debugging *\/$/;"	m	struct:__anon32
dbgfd	tchdb.h	/^  int dbgfd;                             \/* file descriptor for debugging *\/$/;"	m	struct:__anon46
dead	tcbdb.c	/^  bool dead;                             \/\/ whether to be removed$/;"	m	struct:__anon13	file:
dead	tcbdb.c	/^  bool dead;                             \/\/ whether to be removed$/;"	m	struct:__anon15	file:
dec	tchdb.h	/^  TCCODEC dec;                           \/* pointer to the decoding function *\/$/;"	m	struct:__anon46
decop	tchdb.h	/^  void *decop;                           \/* opaque object for the decoding functions *\/$/;"	m	struct:__anon46
del	tcadb.h	/^  void (*del)(void *);                   \/* destructor *\/$/;"	m	struct:__anon6
del	tcutil.h	/^  void (*del)(void *);                   \/* deleting function *\/$/;"	m	struct:__anon88
dfcnt	tchdb.h	/^  uint32_t dfcnt;                        \/* counter of auto defragmentation *\/$/;"	m	struct:__anon46
dfcur	tchdb.h	/^  uint64_t dfcur;                        \/* offset of the cursor for defragmentation *\/$/;"	m	struct:__anon46
dfunit	tchdb.h	/^  uint32_t dfunit;                       \/* unit step number of auto defragmentation *\/$/;"	m	struct:__anon46
dirty	tcbdb.c	/^  bool dirty;                            \/\/ whether to be written back$/;"	m	struct:__anon13	file:
dirty	tcbdb.c	/^  bool dirty;                            \/\/ whether to be written back$/;"	m	struct:__anon15	file:
dmtx	tchdb.h	/^  void *dmtx;                            \/* mutex for the while database *\/$/;"	m	struct:__anon46
dobtread	bros/bdbtest.c	/^int dobtread(char *name, int rnum, int rnd){$/;"	f
dobtread	bros/qdbmtest.c	/^int dobtread(char *name, int rnum, int rnd){$/;"	f
dobtread	bros/tctest.c	/^int dobtread(char *name, int rnum, int rnd){$/;"	f
dobtwrite	bros/bdbtest.c	/^int dobtwrite(char *name, int rnum, int rnd){$/;"	f
dobtwrite	bros/qdbmtest.c	/^int dobtwrite(char *name, int rnum, int rnd){$/;"	f
dobtwrite	bros/tctest.c	/^int dobtwrite(char *name, int rnum, int rnd){$/;"	f
doerror	tcawmgr.c	/^static void doerror(int code, const char *msg){$/;"	f	file:
doflread	bros/tctest.c	/^int doflread(char *name, int rnum){$/;"	f
doflwrite	bros/tctest.c	/^int doflwrite(char *name, int rnum){$/;"	f
doget	tcawmgr.c	/^static void doget(PARAMS *params, TCADB *db){$/;"	f	file:
dolist	tcawmgr.c	/^static void dolist(PARAMS *params, TCADB *db){$/;"	f	file:
doread	bros/bdbtest.c	/^int doread(char *name, int rnum){$/;"	f
doread	bros/cdbtest.c	/^int doread(char *name, int rnum){$/;"	f
doread	bros/gdbmtest.c	/^int doread(char *name, int rnum){$/;"	f
doread	bros/ndbmtest.c	/^int doread(char *name, int rnum){$/;"	f
doread	bros/qdbmtest.c	/^int doread(char *name, int rnum){$/;"	f
doread	bros/sdbmtest.c	/^int doread(char *name, int rnum){$/;"	f
doread	bros/sqltest.c	/^int doread(char *name, int rnum){$/;"	f
doread	bros/tctest.c	/^int doread(char *name, int rnum){$/;"	f
doread	bros/tdbtest.c	/^int doread(char *name, int rnum){$/;"	f
dotblread	bros/sqltest.c	/^int dotblread(char *name, int rnum){$/;"	f
dotblread	bros/tctest.c	/^int dotblread(char *name, int rnum){$/;"	f
dotblwrite	bros/sqltest.c	/^int dotblwrite(char *name, int rnum){$/;"	f
dotblwrite	bros/tctest.c	/^int dotblwrite(char *name, int rnum){$/;"	f
dowrite	bros/bdbtest.c	/^int dowrite(char *name, int rnum){$/;"	f
dowrite	bros/cdbtest.c	/^int dowrite(char *name, int rnum){$/;"	f
dowrite	bros/gdbmtest.c	/^int dowrite(char *name, int rnum){$/;"	f
dowrite	bros/ndbmtest.c	/^int dowrite(char *name, int rnum){$/;"	f
dowrite	bros/qdbmtest.c	/^int dowrite(char *name, int rnum){$/;"	f
dowrite	bros/sdbmtest.c	/^int dowrite(char *name, int rnum){$/;"	f
dowrite	bros/sqltest.c	/^int dowrite(char *name, int rnum){$/;"	f
dowrite	bros/tctest.c	/^int dowrite(char *name, int rnum){$/;"	f
dowrite	bros/tdbtest.c	/^int dowrite(char *name, int rnum){$/;"	f
drpdef	tchdb.h	/^  TCXSTR *drpdef;                        \/* deferred records of the delayed record pool *\/$/;"	m	struct:__anon46
drpoff	tchdb.h	/^  uint64_t drpoff;                       \/* offset of the delayed record pool *\/$/;"	m	struct:__anon46
drpool	tchdb.h	/^  TCXSTR *drpool;                        \/* delayed record pool *\/$/;"	m	struct:__anon46
eckey	tcfdb.h	/^  void *eckey;                           \/* key for thread specific error code *\/$/;"	m	struct:__anon32
eckey	tchdb.h	/^  void *eckey;                           \/* key for thread specific error code *\/$/;"	m	struct:__anon46
ecode	tcfdb.h	/^  int ecode;                             \/* last happened error code *\/$/;"	m	struct:__anon32
ecode	tchdb.h	/^  int ecode;                             \/* last happened error code *\/$/;"	m	struct:__anon46
elems	tcutil.h	/^  TCLIST *elems;                         \/* elements separated by the separators *\/$/;"	m	struct:__anon94
elems	tcutil.h	/^  TCMPELEM *elems;                       \/* array of elements *\/$/;"	m	struct:__anon89
enc	tchdb.h	/^  TCCODEC enc;                           \/* pointer to the encoding function *\/$/;"	m	struct:__anon46
encop	tchdb.h	/^  void *encop;                           \/* opaque object for the encoding functions *\/$/;"	m	struct:__anon46
endsep	tcutil.h	/^  char *endsep;                          \/* ending separator *\/$/;"	m	struct:__anon94
eprint	tcamttest.c	/^static void eprint(TCADB *adb, int line, const char *func){$/;"	f	file:
eprint	tcatest.c	/^static void eprint(TCADB *adb, int line, const char *func){$/;"	f	file:
eprint	tcbmttest.c	/^static void eprint(TCBDB *bdb, int line, const char *func){$/;"	f	file:
eprint	tcbtest.c	/^static void eprint(TCBDB *bdb, int line, const char *func){$/;"	f	file:
eprint	tcfmttest.c	/^static void eprint(TCFDB *fdb, int line, const char *func){$/;"	f	file:
eprint	tcftest.c	/^static void eprint(TCFDB *fdb, int line, const char *func){$/;"	f	file:
eprint	tchmttest.c	/^static void eprint(TCHDB *hdb, int line, const char *func){$/;"	f	file:
eprint	tchtest.c	/^static void eprint(TCHDB *hdb, int line, const char *func){$/;"	f	file:
eprint	tctmttest.c	/^static void eprint(TCTDB *tdb, int line, const char *func){$/;"	f	file:
eprint	tcttest.c	/^static void eprint(TCTDB *tdb, int line, const char *func){$/;"	f	file:
eprint	tcumttest.c	/^static void eprint(int line, const char *func){$/;"	f	file:
eprintf	tcucodec.c	/^static void eprintf(const char *format, ...){$/;"	f	file:
esiz	tctdb.h	/^  int esiz;                              \/* size of the operand expression *\/$/;"	m	struct:__anon67
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
expr	tctdb.h	/^  char *expr;                            \/* operand expression *\/$/;"	m	struct:__anon67
f	tcutil.h	/^typedef union { int32_t i; int64_t l; double d; void *p; TCCMP f; } tcgeneric_t;$/;"	m	union:__anon99
fatal	tcfdb.h	/^  bool fatal;                            \/* whether a fatal error occured *\/$/;"	m	struct:__anon32
fatal	tchdb.h	/^  bool fatal;                            \/* whether a fatal error occured *\/$/;"	m	struct:__anon46
fbpmax	tchdb.h	/^  int32_t fbpmax;                        \/* maximum number of the free block pool *\/$/;"	m	struct:__anon46
fbpmis	tchdb.h	/^  int32_t fbpmis;                        \/* number of missing retrieval of the free block pool *\/$/;"	m	struct:__anon46
fbpnum	tchdb.h	/^  int32_t fbpnum;                        \/* number of the free block pool *\/$/;"	m	struct:__anon46
fbpool	tchdb.h	/^  void *fbpool;                          \/* free block pool *\/$/;"	m	struct:__anon46
fchr	tcutil.c	/^  int fchr;                              \/\/ character code of the first character$/;"	m	struct:__anon80	file:
fd	tcfdb.h	/^  int fd;                                \/* file descriptor of the database file *\/$/;"	m	struct:__anon32
fd	tchdb.h	/^  int fd;                                \/* file descriptor of the database file *\/$/;"	m	struct:__anon46
fdb	tcadb.h	/^  TCFDB *fdb;                            \/* fixed-length databae object *\/$/;"	m	struct:__anon4
fdb	tcfmttest.c	/^  TCFDB *fdb;$/;"	m	struct:__anon36	file:
fdb	tcfmttest.c	/^  TCFDB *fdb;$/;"	m	struct:__anon37	file:
fdb	tcfmttest.c	/^  TCFDB *fdb;$/;"	m	struct:__anon38	file:
fdb	tcfmttest.c	/^  TCFDB *fdb;$/;"	m	struct:__anon39	file:
fdb	tcfmttest.c	/^  TCFDB *fdb;$/;"	m	struct:__anon40	file:
first	tcbdb.h	/^  uint64_t first;                        \/* ID number of the first leaf *\/$/;"	m	struct:__anon18
first	tcutil.h	/^  TCMAPREC *first;                       \/* pointer to the first element *\/$/;"	m	struct:__anon84
flags	tcfdb.h	/^  uint8_t flags;                         \/* additional flags *\/$/;"	m	struct:__anon32
flags	tchdb.h	/^  uint8_t flags;                         \/* additional flags *\/$/;"	m	struct:__anon46
foreach	tcadb.h	/^  bool (*foreach)(void *, TCITER, void *);$/;"	m	struct:__anon6
fpow	tchdb.h	/^  uint8_t fpow;                          \/* power of free block pool number *\/$/;"	m	struct:__anon46
frec	tchdb.h	/^  uint64_t frec;                         \/* offset of the first record *\/$/;"	m	struct:__anon46
fsiz	tcfdb.h	/^  uint64_t fsiz;                         \/* size of the database file *\/$/;"	m	struct:__anon32
fsiz	tchdb.h	/^  uint64_t fsiz;                         \/* size of the database file *\/$/;"	m	struct:__anon46
ftsnum	tctdb.h	/^  int ftsnum;                            \/* number of full-text search units *\/$/;"	m	struct:__anon67
ftsunits	tctdb.h	/^  void *ftsunits;                        \/* full-text search units *\/$/;"	m	struct:__anon67
fwmkeys	tcadb.h	/^  TCLIST *(*fwmkeys)(void *, const void *, int, int);$/;"	m	struct:__anon6
g_dbgfd	tcamttest.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tcbmgr.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tcbmttest.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tcbtest.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tcfmgr.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tcfmttest.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tcftest.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tchmgr.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tchmttest.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tchtest.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tctmgr.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tctmttest.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_dbgfd	tcttest.c	/^int g_dbgfd;                             \/\/ debugging output$/;"	v
g_progname	bros/maptest.cc	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcamgr.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcamttest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcatest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcbmgr.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcbmttest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcbtest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcfmgr.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcfmttest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcftest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tchmgr.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tchmttest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tchtest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tctmgr.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tctmttest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcttest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcucodec.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcumttest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_progname	tcutest.c	/^const char *g_progname;                  \/\/ program name$/;"	v
g_randseed	tcamttest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tcatest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tcbmttest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tcbtest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tcfmttest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tcftest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tchmttest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tchtest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tctmttest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tcttest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tcumttest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_randseed	tcutest.c	/^unsigned int g_randseed;                 \/\/ random seed$/;"	v
g_scriptname	tcawmgr.c	/^const char *g_scriptname;                \/\/ program name$/;"	v
g_skeleton	tcatest.c	/^ADBSKEL g_skeleton;                      \/\/ skeleton database$/;"	v
get	tcadb.h	/^  void *(*get)(void *, const void *, int, int *);$/;"	m	struct:__anon6
ggldh	bros/maptest.cc	/^typedef google::dense_hash_map<string, string, stringhash> ggldh;$/;"	t	file:
gglsh	bros/maptest.cc	/^typedef google::sparse_hash_map<string, string, stringhash> gglsh;$/;"	t	file:
hash	tchdb.c	/^  uint8_t hash;                          \/\/ second hash value$/;"	m	struct:__anon41	file:
hash	tctdb.c	/^  uint16_t hash;                         \/\/ hash value for counting sort$/;"	m	struct:__anon59	file:
hash	tctdb.c	/^  uint16_t hash;                         \/\/ hash value for counting sort$/;"	m	struct:__anon60	file:
hash	tcutil.h	/^  uint32_t hash;                         \/* hash value *\/$/;"	m	struct:__anon92
hdb	tcadb.h	/^  TCHDB *hdb;                            \/* hash database object *\/$/;"	m	struct:__anon4
hdb	tcbdb.h	/^  TCHDB *hdb;                            \/* internal database object *\/$/;"	m	struct:__anon18
hdb	tchmttest.c	/^  TCHDB *hdb;$/;"	m	struct:__anon50	file:
hdb	tchmttest.c	/^  TCHDB *hdb;$/;"	m	struct:__anon51	file:
hdb	tchmttest.c	/^  TCHDB *hdb;$/;"	m	struct:__anon52	file:
hdb	tchmttest.c	/^  TCHDB *hdb;$/;"	m	struct:__anon53	file:
hdb	tchmttest.c	/^  TCHDB *hdb;$/;"	m	struct:__anon54	file:
hdb	tchmttest.c	/^  TCHDB *hdb;$/;"	m	struct:__anon55	file:
hdb	tctdb.h	/^  TCHDB *hdb;                            \/* internal database object *\/$/;"	m	struct:__anon62
heir	tcbdb.c	/^  uint64_t heir;                         \/\/ ID of the child before the first index$/;"	m	struct:__anon15	file:
hint	tctdb.h	/^  TCXSTR *hint;                          \/* hint string *\/$/;"	m	struct:__anon68
hist	tcbdb.h	/^  uint64_t *hist;                        \/* history array of visited nodes *\/$/;"	m	struct:__anon18
hleaf	tcbdb.h	/^  volatile uint64_t hleaf;               \/* ID number of the leaf referred by the history *\/$/;"	m	struct:__anon18
hnum	tcbdb.h	/^  int hnum;                              \/* number of element of the history array *\/$/;"	m	struct:__anon18
htmltotext	lab/wgettsv	/^def htmltotext(str)$/;"	f
i	tcutil.h	/^typedef union { int32_t i; int64_t l; double d; void *p; TCCMP f; } tcgeneric_t;$/;"	m	union:__anon99
iccmax	tctdb.h	/^  int64_t iccmax;                        \/* maximum size of the inverted cache *\/$/;"	m	struct:__anon62
iccsync	tctdb.h	/^  double iccsync;                        \/* synchronization ratio of the inverted cache *\/$/;"	m	struct:__anon62
id	tcamttest.c	/^  int id;$/;"	m	struct:__anon7	file:
id	tcamttest.c	/^  int id;$/;"	m	struct:__anon8	file:
id	tcamttest.c	/^  int id;$/;"	m	struct:__anon9	file:
id	tcbdb.c	/^  uint64_t id;                           \/\/ ID number of the leaf$/;"	m	struct:__anon13	file:
id	tcbdb.c	/^  uint64_t id;                           \/\/ ID number of the node$/;"	m	struct:__anon15	file:
id	tcbdb.h	/^  uint64_t id;                           \/* ID number of the leaf *\/$/;"	m	struct:__anon22
id	tcbmttest.c	/^  int id;$/;"	m	struct:__anon24	file:
id	tcbmttest.c	/^  int id;$/;"	m	struct:__anon25	file:
id	tcbmttest.c	/^  int id;$/;"	m	struct:__anon26	file:
id	tcbmttest.c	/^  int id;$/;"	m	struct:__anon27	file:
id	tcbmttest.c	/^  int id;$/;"	m	struct:__anon28	file:
id	tcbmttest.c	/^  int id;$/;"	m	struct:__anon29	file:
id	tcfmttest.c	/^  int id;$/;"	m	struct:__anon36	file:
id	tcfmttest.c	/^  int id;$/;"	m	struct:__anon37	file:
id	tcfmttest.c	/^  int id;$/;"	m	struct:__anon38	file:
id	tcfmttest.c	/^  int id;$/;"	m	struct:__anon39	file:
id	tcfmttest.c	/^  int id;$/;"	m	struct:__anon40	file:
id	tchmttest.c	/^  int id;$/;"	m	struct:__anon50	file:
id	tchmttest.c	/^  int id;$/;"	m	struct:__anon51	file:
id	tchmttest.c	/^  int id;$/;"	m	struct:__anon52	file:
id	tchmttest.c	/^  int id;$/;"	m	struct:__anon53	file:
id	tchmttest.c	/^  int id;$/;"	m	struct:__anon54	file:
id	tchmttest.c	/^  int id;$/;"	m	struct:__anon55	file:
id	tctmttest.c	/^  int id;$/;"	m	struct:__anon73	file:
id	tctmttest.c	/^  int id;$/;"	m	struct:__anon74	file:
id	tctmttest.c	/^  int id;$/;"	m	struct:__anon75	file:
id	tctmttest.c	/^  int id;$/;"	m	struct:__anon76	file:
id	tctmttest.c	/^  int id;$/;"	m	struct:__anon77	file:
id	tcumttest.c	/^  int id;$/;"	m	struct:__anon78	file:
id	tcumttest.c	/^  int id;$/;"	m	struct:__anon79	file:
idx	tcutil.h	/^  int idx;                               \/* bit index *\/$/;"	m	struct:__anon96
idxs	tcbdb.c	/^  TCPTRLIST *idxs;                       \/\/ list of indices$/;"	m	struct:__anon15	file:
idxs	tctdb.h	/^  TDBIDX *idxs;                          \/* column indices *\/$/;"	m	struct:__anon62
if	myconf.h	422;"	d
imtx	tcutil.h	/^  void *imtx;                            \/* mutex for iterator *\/$/;"	m	struct:__anon86
inode	tcfdb.h	/^  uint64_t inode;                        \/* inode number *\/$/;"	m	struct:__anon32
inode	tchdb.h	/^  uint64_t inode;                        \/* inode number *\/$/;"	m	struct:__anon46
intcompar	tcutest.c	/^static int intcompar(const void *ap, const void *bp){$/;"	f	file:
inum	tctdb.h	/^  int inum;                              \/* number of column indices *\/$/;"	m	struct:__anon62
iprintf	bros/maptest.cc	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tcamttest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tcatest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tcbmttest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tcbtest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tcfmttest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tcftest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tchmttest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tchtest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tctmttest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tcttest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tcumttest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iprintf	tcutest.c	/^static void iprintf(const char *format, ...){$/;"	f	file:
iputchar	tcamttest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tcatest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tcbmttest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tcbtest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tcfmttest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tcftest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tchmttest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tchtest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tctmttest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tcttest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tcumttest.c	/^static void iputchar(int c){$/;"	f	file:
iputchar	tcutest.c	/^static void iputchar(int c){$/;"	f	file:
iter	tcadb.c	/^  int iter;                              \/\/ index of the iterator$/;"	m	struct:__anon2	file:
iter	tcfdb.h	/^  uint64_t iter;                         \/* ID number of the iterator *\/$/;"	m	struct:__anon32
iter	tchdb.h	/^  uint64_t iter;                         \/* offset of the iterator *\/$/;"	m	struct:__anon46
iter	tcutil.h	/^  int iter;                              \/* index of maps for the iterator *\/$/;"	m	struct:__anon86
iterfunc	tcatest.c	/^static bool iterfunc(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
iterfunc	tcbmttest.c	/^static bool iterfunc(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
iterfunc	tcbtest.c	/^static bool iterfunc(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
iterfunc	tcfmttest.c	/^static bool iterfunc(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
iterfunc	tcftest.c	/^static bool iterfunc(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
iterfunc	tchmttest.c	/^static bool iterfunc(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
iterfunc	tchtest.c	/^static bool iterfunc(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
iterfunc	tcttest.c	/^static bool iterfunc(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
iterfunc	tcutest.c	/^static bool iterfunc(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
iterinit	tcadb.h	/^  bool (*iterinit)(void *);$/;"	m	struct:__anon6
iternext	tcadb.h	/^  void *(*iternext)(void *, int *);$/;"	m	struct:__anon6
kbuf	tcawmgr.c	/^  const char *kbuf;                      \/\/ key buffer$/;"	m	struct:__anon10	file:
kbuf	tchdb.c	/^  const char *kbuf;                      \/\/ pointer to the key$/;"	m	struct:__anon41	file:
kbuf	tctdb.c	/^  const char *kbuf;                      \/\/ pointer to the primary key$/;"	m	struct:__anon57	file:
kidx	tcbdb.h	/^  int32_t kidx;                          \/* number of the key *\/$/;"	m	struct:__anon22
ksiz	tcawmgr.c	/^  int ksiz;                              \/\/ key size$/;"	m	struct:__anon10	file:
ksiz	tcbdb.c	/^  int ksiz;                              \/\/ size of the key region$/;"	m	struct:__anon12	file:
ksiz	tcbdb.c	/^  int ksiz;                              \/\/ size of the key region$/;"	m	struct:__anon14	file:
ksiz	tchdb.c	/^  uint32_t ksiz;                         \/\/ size of the key$/;"	m	struct:__anon41	file:
ksiz	tctdb.c	/^  int ksiz;                              \/\/ size of the primary key$/;"	m	struct:__anon57	file:
ksiz	tcutil.h	/^  int32_t ksiz;                          \/* size of the region of the key *\/$/;"	m	struct:_TCMAPREC
ksiz	tcutil.h	/^  int32_t ksiz;                          \/* size of the region of the key *\/$/;"	m	struct:_TCTREEREC
l	tcutil.h	/^typedef union { int32_t i; int64_t l; double d; void *p; TCCMP f; } tcgeneric_t;$/;"	m	union:__anon99
last	tcbdb.h	/^  uint64_t last;                         \/* ID number of the last leaf *\/$/;"	m	struct:__anon18
last	tcutil.h	/^  TCMAPREC *last;                        \/* pointer to the last element *\/$/;"	m	struct:__anon84
lcnum	tcbdb.h	/^  uint32_t lcnum;                        \/* maximum number of cached leaves *\/$/;"	m	struct:__anon18
lcnum	tctdb.h	/^  int32_t lcnum;                         \/* max number of cached leaves *\/$/;"	m	struct:__anon62
leafc	tcbdb.h	/^  TCMAP *leafc;                          \/* cache for leaves *\/$/;"	m	struct:__anon18
left	tchdb.c	/^  uint64_t left;                         \/\/ offset of the left child record$/;"	m	struct:__anon41	file:
left	tcutil.h	/^  struct _TCMAPREC *left;                \/* pointer to the left child *\/$/;"	m	struct:_TCMAPREC	typeref:struct:_TCMAPREC::_TCMAPREC
left	tcutil.h	/^  struct _TCTREEREC *left;               \/* pointer to the left child *\/$/;"	m	struct:_TCTREEREC	typeref:struct:_TCTREEREC::_TCTREEREC
limid	tcfdb.h	/^  uint64_t limid;                        \/* limit ID number *\/$/;"	m	struct:__anon32
limsiz	tcfdb.h	/^  uint64_t limsiz;                       \/* limit size of the file *\/$/;"	m	struct:__anon32
lleaf	tcbdb.h	/^  volatile uint64_t lleaf;               \/* ID number of the last visited leaf *\/$/;"	m	struct:__anon18
lmemb	tcbdb.h	/^  uint32_t lmemb;                        \/* number of members in each leaf *\/$/;"	m	struct:__anon18
lnum	tcbdb.h	/^  uint64_t lnum;                         \/* number of leaves *\/$/;"	m	struct:__anon18
lschk	tcbdb.h	/^  uint32_t lschk;                        \/* counter for leaf size checking *\/$/;"	m	struct:__anon18
lsmax	tcbdb.h	/^  uint32_t lsmax;                        \/* maximum size of each leaf *\/$/;"	m	struct:__anon18
magic	tchdb.c	/^  uint8_t magic;                         \/\/ magic number$/;"	m	struct:__anon41	file:
main	bros/bdbtest.c	/^int main(int argc, char **argv){$/;"	f
main	bros/cdbtest.c	/^int main(int argc, char **argv){$/;"	f
main	bros/cmpsqltctest.c	/^int main(int argc, char **argv){$/;"	f
main	bros/gdbmtest.c	/^int main(int argc, char **argv){$/;"	f
main	bros/maptest.cc	/^int main(int argc, char **argv){$/;"	f
main	bros/ndbmtest.c	/^int main(int argc, char **argv){$/;"	f
main	bros/qdbmtest.c	/^int main(int argc, char **argv){$/;"	f
main	bros/sdbmtest.c	/^int main(int argc, char **argv){$/;"	f
main	bros/sqltest.c	/^int main(int argc, char **argv){$/;"	f
main	bros/tctest.c	/^int main(int argc, char **argv){$/;"	f
main	bros/tdbtest.c	/^int main(int argc, char **argv){$/;"	f
main	example/tcadbex.c	/^int main(int argc, char **argv){$/;"	f
main	example/tcbdbex.c	/^int main(int argc, char **argv){$/;"	f
main	example/tcfdbex.c	/^int main(int argc, char **argv){$/;"	f
main	example/tchdbex.c	/^int main(int argc, char **argv){$/;"	f
main	example/tctchat.c	/^int main(int argc, char **argv){$/;"	f
main	example/tctdbex.c	/^int main(int argc, char **argv){$/;"	f
main	example/tctsearch.c	/^int main(int argc, char **argv){$/;"	f
main	example/tcutilex.c	/^int main(int argc, char **argv){$/;"	f
main	lab/wgettsv	/^def main$/;"	f
main	tcamgr.c	/^int main(int argc, char **argv){$/;"	f
main	tcamttest.c	/^int main(int argc, char **argv){$/;"	f
main	tcatest.c	/^int main(int argc, char **argv){$/;"	f
main	tcawmgr.c	/^int main(int argc, char **argv){$/;"	f
main	tcbmgr.c	/^int main(int argc, char **argv){$/;"	f
main	tcbmttest.c	/^int main(int argc, char **argv){$/;"	f
main	tcbtest.c	/^int main(int argc, char **argv){$/;"	f
main	tcfmgr.c	/^int main(int argc, char **argv){$/;"	f
main	tcfmttest.c	/^int main(int argc, char **argv){$/;"	f
main	tcftest.c	/^int main(int argc, char **argv){$/;"	f
main	tchmgr.c	/^int main(int argc, char **argv){$/;"	f
main	tchmttest.c	/^int main(int argc, char **argv){$/;"	f
main	tchtest.c	/^int main(int argc, char **argv){$/;"	f
main	tctmgr.c	/^int main(int argc, char **argv){$/;"	f
main	tctmttest.c	/^int main(int argc, char **argv){$/;"	f
main	tcttest.c	/^int main(int argc, char **argv){$/;"	f
main	tcucodec.c	/^int main(int argc, char **argv){$/;"	f
main	tcumttest.c	/^int main(int argc, char **argv){$/;"	f
main	tcutest.c	/^int main(int argc, char **argv){$/;"	f
map	tcbmttest.c	/^  TCMAP *map;$/;"	m	struct:__anon27	file:
map	tcfdb.h	/^  char *map;                             \/* pointer to the mapped memory *\/$/;"	m	struct:__anon32
map	tcfmttest.c	/^  TCMAP *map;$/;"	m	struct:__anon39	file:
map	tchdb.h	/^  char *map;                             \/* pointer to the mapped memory *\/$/;"	m	struct:__anon46
map	tchmttest.c	/^  TCMAP *map;$/;"	m	struct:__anon53	file:
mapbdbproc	tcamgr.c	/^static bool mapbdbproc(void *map, const char *kbuf, int ksiz, const char *vbuf, int vsiz,$/;"	f	file:
maps	tcutil.h	/^  TCMAP **maps;                          \/* internal map objects *\/$/;"	m	struct:__anon86
max	tcfdb.h	/^  uint64_t max;                          \/* maximum ID number *\/$/;"	m	struct:__anon32
max	tctdb.h	/^  int max;                               \/* max number of retrieval *\/$/;"	m	struct:__anon68
md5_INCLUDED	md5.h	51;"	d
md5_append	md5.c	/^md5_append(md5_state_t *pms, const md5_byte_t *data, int nbytes)$/;"	f
md5_append	md5.h	68;"	d
md5_byte_t	md5.h	/^typedef unsigned char md5_byte_t; \/* 8-bit byte *\/$/;"	t
md5_finish	md5.c	/^md5_finish(md5_state_t *pms, md5_byte_t digest[16])$/;"	f
md5_finish	md5.h	69;"	d
md5_init	md5.c	/^md5_init(md5_state_t *pms)$/;"	f
md5_init	md5.h	67;"	d
md5_process	md5.c	/^md5_process(md5_state_t *pms, const md5_byte_t *data \/*[64]*\/)$/;"	f	file:
md5_state_s	md5.h	/^typedef struct md5_state_s {$/;"	s
md5_state_t	md5.h	/^} md5_state_t;$/;"	t	typeref:struct:md5_state_s
md5_word_t	md5.h	/^typedef unsigned int md5_word_t; \/* 32-bit word *\/$/;"	t
mdb	tcadb.h	/^  TCMDB *mdb;                            \/* on-memory hash database object *\/$/;"	m	struct:__anon4
mdb	tcumttest.c	/^  TCMDB *mdb;$/;"	m	struct:__anon78	file:
mdb	tcumttest.c	/^  TCMDB *mdb;$/;"	m	struct:__anon79	file:
min	tcfdb.h	/^  uint64_t min;                          \/* minimum ID number *\/$/;"	m	struct:__anon32
misc	tcadb.h	/^  TCLIST *(*misc)(void *, const char *, const TCLIST *);$/;"	m	struct:__anon6
mmtx	tcbdb.h	/^  void *mmtx;                            \/* mutex for method *\/$/;"	m	struct:__anon18
mmtx	tcfdb.h	/^  void *mmtx;                            \/* mutex for method *\/$/;"	m	struct:__anon32
mmtx	tchdb.h	/^  void *mmtx;                            \/* mutex for method *\/$/;"	m	struct:__anon46
mmtx	tctdb.h	/^  void *mmtx;                            \/* mutex for method *\/$/;"	m	struct:__anon62
mmtx	tcutil.h	/^  void *mmtx;                            \/* mutex for method *\/$/;"	m	struct:__anon87
mmtxs	tcutil.h	/^  void **mmtxs;                          \/* mutexes for method *\/$/;"	m	struct:__anon86
mprint	tcbmttest.c	/^static void mprint(TCBDB *bdb){$/;"	f	file:
mprint	tcbtest.c	/^static void mprint(TCBDB *bdb){$/;"	f	file:
mprint	tcfmttest.c	/^static void mprint(TCFDB *fdb){$/;"	f	file:
mprint	tcftest.c	/^static void mprint(TCFDB *fdb){$/;"	f	file:
mprint	tchmttest.c	/^static void mprint(TCHDB *hdb){$/;"	f	file:
mprint	tchtest.c	/^static void mprint(TCHDB *hdb){$/;"	f	file:
msiz	tchdb.h	/^  uint64_t msiz;                         \/* size of the mapped memory *\/$/;"	m	struct:__anon46
msiz	tcutil.h	/^  uint64_t msiz;                         \/* total size of records *\/$/;"	m	struct:__anon84
msiz	tcutil.h	/^  uint64_t msiz;                         \/* total size of records *\/$/;"	m	struct:__anon85
mtime	tcfdb.h	/^  time_t mtime;                          \/* modification time *\/$/;"	m	struct:__anon32
mtime	tchdb.h	/^  time_t mtime;                          \/* modification time *\/$/;"	m	struct:__anon46
mutex	tcutil.h	/^  void *mutex;                           \/* mutex for operations *\/$/;"	m	struct:__anon89
mycmpfunc	tcbmgr.c	/^static int mycmpfunc(const char *aptr, int asiz, const char *bptr, int bsiz, void *op){$/;"	f	file:
mygetline	tcbmgr.c	/^static char *mygetline(FILE *ifp){$/;"	f	file:
mygetline	tcfmgr.c	/^static char *mygetline(FILE *ifp){$/;"	f	file:
mygetline	tchmgr.c	/^static char *mygetline(FILE *ifp){$/;"	f	file:
mygetline	tctmgr.c	/^static char *mygetline(FILE *ifp){$/;"	f	file:
myrand	bros/bdbtest.c	/^int myrand(void){$/;"	f
myrand	bros/cmpsqltctest.c	/^static int myrand(void){$/;"	f	file:
myrand	bros/qdbmtest.c	/^int myrand(void){$/;"	f
myrand	bros/sqltest.c	/^int myrand(void){$/;"	f
myrand	bros/tctest.c	/^int myrand(void){$/;"	f
myrand	tcatest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tcbmttest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tcbtest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tcfmttest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tcftest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tchmttest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tchtest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tctmttest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tcttest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tcumttest.c	/^static int myrand(int range){$/;"	f	file:
myrand	tcutest.c	/^static int myrand(int range){$/;"	f	file:
myrandnd	tcbmttest.c	/^static int myrandnd(int range){$/;"	f	file:
myrandnd	tcfmttest.c	/^static int myrandnd(int range){$/;"	f	file:
myrandnd	tchmttest.c	/^static int myrandnd(int range){$/;"	f	file:
myrandnd	tctmttest.c	/^static int myrandnd(int range){$/;"	f	file:
myrandnd	tcumttest.c	/^static int myrandnd(int range){$/;"	f	file:
name	tctdb.h	/^  char *name;                            \/* column name *\/$/;"	m	struct:__anon61
name	tctdb.h	/^  char *name;                            \/* column name *\/$/;"	m	struct:__anon67
nan	myconf.h	274;"	d
nanl	myconf.h	275;"	d
nc	tcbmttest.c	/^  bool nc;$/;"	m	struct:__anon27	file:
nc	tcbmttest.c	/^  bool nc;$/;"	m	struct:__anon28	file:
nc	tcfmttest.c	/^  bool nc;$/;"	m	struct:__anon39	file:
nc	tcfmttest.c	/^  bool nc;$/;"	m	struct:__anon40	file:
nc	tchmttest.c	/^  bool nc;$/;"	m	struct:__anon53	file:
nc	tchmttest.c	/^  bool nc;$/;"	m	struct:__anon54	file:
nc	tcumttest.c	/^  bool nc;$/;"	m	struct:__anon79	file:
ncnum	tcbdb.h	/^  uint32_t ncnum;                        \/* maximum number of cached nodes *\/$/;"	m	struct:__anon18
ncnum	tctdb.h	/^  int32_t ncnum;                         \/* max number of cached nodes *\/$/;"	m	struct:__anon62
ndb	tcadb.h	/^  TCNDB *ndb;                            \/* on-memory tree database object *\/$/;"	m	struct:__anon4
ndb	tcumttest.c	/^  TCNDB *ndb;$/;"	m	struct:__anon78	file:
ndb	tcumttest.c	/^  TCNDB *ndb;$/;"	m	struct:__anon79	file:
next	tcbdb.c	/^  uint64_t next;                         \/\/ ID number of the next leaf$/;"	m	struct:__anon13	file:
next	tcutil.h	/^  struct _TCMAPREC *next;                \/* pointer to the next element *\/$/;"	m	struct:_TCMAPREC	typeref:struct:_TCMAPREC::_TCMAPREC
nmemb	tcbdb.h	/^  uint32_t nmemb;                        \/* number of members in each node *\/$/;"	m	struct:__anon18
nnum	tcbdb.h	/^  uint64_t nnum;                         \/* number of nodes *\/$/;"	m	struct:__anon18
nnum	tcutil.h	/^  int nnum;                              \/* number of the node array *\/$/;"	m	struct:__anon93
nodec	tcbdb.h	/^  TCMAP *nodec;                          \/* cache for nodes *\/$/;"	m	struct:__anon18
nodes	tcutil.h	/^  TCCHIDXNODE *nodes;                    \/* node array *\/$/;"	m	struct:__anon93
noidx	tctdb.h	/^  bool noidx;                            \/* no index flag *\/$/;"	m	struct:__anon67
nsiz	tctdb.h	/^  int nsiz;                              \/* size of the column name *\/$/;"	m	struct:__anon67
num	tcadb.c	/^  int num;                               \/\/ number of inner databases$/;"	m	struct:__anon2	file:
num	tcawmgr.c	/^  int num;                               \/\/ number per page$/;"	m	struct:__anon10	file:
num	tcutil.h	/^  int num;                               \/* number of used elements *\/$/;"	m	struct:__anon83
num	tcutil.h	/^  int num;                               \/* number of used elements *\/$/;"	m	struct:__anon89
num	tcutil.h	/^  int num;                               \/* number of used elements *\/$/;"	m	struct:__anon95
off	tchdb.c	/^  uint64_t off;                          \/\/ offset of the block$/;"	m	struct:__anon42	file:
off	tchdb.c	/^  uint64_t off;                          \/\/ offset of the record$/;"	m	struct:__anon41	file:
off	tctdb.c	/^  int32_t off;                           \/\/ offset of the token$/;"	m	struct:__anon59	file:
off	tctdb.c	/^  int32_t off;                           \/\/ offset of the token$/;"	m	struct:__anon60	file:
omode	tcadb.h	/^  int omode;                             \/* open mode *\/$/;"	m	struct:__anon4
omode	tcfdb.h	/^  uint32_t omode;                        \/* open mode *\/$/;"	m	struct:__anon32
omode	tchdb.h	/^  uint32_t omode;                        \/* open mode *\/$/;"	m	struct:__anon46
oname	tctdb.h	/^  char *oname;                           \/* column name for ordering *\/$/;"	m	struct:__anon68
op	tcadb.c	/^  void *op;                              \/\/ opaque object for the mapping function$/;"	m	struct:__anon3	file:
op	tcbdb.c	/^  void *op;                              \/\/ opaque pointer$/;"	m	struct:__anon17	file:
op	tcfdb.c	/^  void *op;                              \/\/ opaque pointer$/;"	m	struct:__anon31	file:
op	tchdb.c	/^  void *op;                              \/\/ opaque pointer$/;"	m	struct:__anon45	file:
op	tctdb.h	/^  int op;                                \/* operation type *\/$/;"	m	struct:__anon67
opaque	tcbdb.h	/^  char *opaque;                          \/* opaque buffer *\/$/;"	m	struct:__anon18
open	tcadb.h	/^  bool (*open)(void *, const char *);$/;"	m	struct:__anon6
open	tcbdb.h	/^  bool open;                             \/* whether the internal database is opened *\/$/;"	m	struct:__anon18
open	tctdb.h	/^  bool open;                             \/* whether the internal database is opened *\/$/;"	m	struct:__anon62
operator ()	bros/maptest.cc	/^  size_t operator()(const string& str) const {$/;"	f	struct:stringhash
opq	tcadb.h	/^  void *opq;                             \/* opaque pointer *\/$/;"	m	struct:__anon6
optimize	tcadb.h	/^  bool (*optimize)(void *, const char *);$/;"	m	struct:__anon6
opts	tcbdb.h	/^  uint8_t opts;                          \/* options *\/$/;"	m	struct:__anon18
opts	tchdb.h	/^  uint8_t opts;                          \/* options *\/$/;"	m	struct:__anon46
opts	tctdb.h	/^  uint8_t opts;                          \/* options *\/$/;"	m	struct:__anon62
otype	tctdb.h	/^  int otype;                             \/* type of order *\/$/;"	m	struct:__anon68
out	tcadb.h	/^  bool (*out)(void *, const void *, int);$/;"	m	struct:__anon6
p	tcutil.h	/^typedef union { int32_t i; int64_t l; double d; void *p; TCCMP f; } tcgeneric_t;$/;"	m	union:__anon99
page	tcawmgr.c	/^  int page;                              \/\/ number of the page$/;"	m	struct:__anon10	file:
path	tcadb.c	/^  char *path;                            \/\/ path of the base directory$/;"	m	struct:__anon2	file:
path	tcadb.h	/^  const char *(*path)(void *);$/;"	m	struct:__anon6
path	tcfdb.h	/^  char *path;                            \/* path of the database file *\/$/;"	m	struct:__anon32
path	tchdb.h	/^  char *path;                            \/* path of the database file *\/$/;"	m	struct:__anon46
pdprocfunc	tcbtest.c	/^static void *pdprocfunc(const void *vbuf, int vsiz, int *sp, void *op){$/;"	f	file:
pdprocfunc	tcftest.c	/^static void *pdprocfunc(const void *vbuf, int vsiz, int *sp, void *op){$/;"	f	file:
pdprocfunc	tchtest.c	/^static void *pdprocfunc(const void *vbuf, int vsiz, int *sp, void *op){$/;"	f	file:
pdprocfunc	tcttest.c	/^static void *pdprocfunc(const void *vbuf, int vsiz, int *sp, void *op){$/;"	f	file:
pdprocfunc	tcutest.c	/^static void *pdprocfunc(const void *vbuf, int vsiz, int *sp, void *op){$/;"	f	file:
pdprocfunccmp	tcatest.c	/^static void *pdprocfunccmp(const void *vbuf, int vsiz, int *sp, void *op){$/;"	f	file:
pid	tcbdb.c	/^  uint64_t pid;                          \/\/ ID number of the referring page$/;"	m	struct:__anon14	file:
pkbuf	tctdb.c	/^  const char *pkbuf;                     \/\/ primary key string$/;"	m	struct:__anon59	file:
pkid	tctdb.c	/^  int64_t pkid;                          \/\/ primery key number$/;"	m	struct:__anon60	file:
pksiz	tctdb.c	/^  int32_t pksiz;                         \/\/ size of the primary key$/;"	m	struct:__anon59	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prev	tcbdb.c	/^  uint64_t prev;                         \/\/ ID number of the previous leaf$/;"	m	struct:__anon13	file:
prev	tcutil.h	/^  struct _TCMAPREC *prev;                \/* pointer to the previous element *\/$/;"	m	struct:_TCMAPREC	typeref:struct:_TCMAPREC::_TCMAPREC
printdata	tcamgr.c	/^static int printdata(const char *ptr, int size, bool px, int sep){$/;"	f	file:
printdata	tcbmgr.c	/^static int printdata(const char *ptr, int size, bool px){$/;"	f	file:
printdata	tcfmgr.c	/^static int printdata(const char *ptr, int size, bool px){$/;"	f	file:
printdata	tchmgr.c	/^static int printdata(const char *ptr, int size, bool px){$/;"	f	file:
printdata	tctmgr.c	/^static int printdata(const char *ptr, int size, bool px){$/;"	f	file:
printerr	tcamgr.c	/^static void printerr(TCADB *adb){$/;"	f	file:
printerr	tcbmgr.c	/^static void printerr(TCBDB *bdb){$/;"	f	file:
printerr	tcfmgr.c	/^static void printerr(TCFDB *fdb){$/;"	f	file:
printerr	tchmgr.c	/^static void printerr(TCHDB *hdb){$/;"	f	file:
printerr	tctmgr.c	/^static void printerr(TCTDB *tdb){$/;"	f	file:
proc	example/tctchat.c	/^static void proc(TCTMPL *tmpl, TCMPOOL *mpool){$/;"	f	file:
proc	example/tctsearch.c	/^static void proc(TCTMPL *tmpl, TCMPOOL *mpool){$/;"	f	file:
proc	lab/wgettsv	/^def proc(seeds, hist, filters, max, lim, wait)$/;"	f
proc	tcadb.c	/^  ADBMAPPROC proc;                       \/\/ mapping function$/;"	m	struct:__anon3	file:
proc	tcbdb.c	/^  TCPDPROC proc;                         \/\/ function pointer$/;"	m	struct:__anon17	file:
proc	tcfdb.c	/^  TCPDPROC proc;                         \/\/ function pointer$/;"	m	struct:__anon31	file:
proc	tchdb.c	/^  TCPDPROC proc;                         \/\/ function pointer$/;"	m	struct:__anon45	file:
procbase	tcucodec.c	/^static int procbase(const char *ibuf, int isiz, bool dec){$/;"	f	file:
procbzip	tcucodec.c	/^static int procbzip(const char *ibuf, int isiz, bool dec){$/;"	f	file:
proccipher	tcucodec.c	/^static int proccipher(const char *ibuf, int isiz, const char *key){$/;"	f	file:
proccombo	tcumttest.c	/^static int proccombo(int tnum, int rnum, int bnum, bool tr, bool rnd){$/;"	f	file:
proccompare	tcatest.c	/^static int proccompare(const char *name, int tnum, int rnum){$/;"	f	file:
procconf	tcucodec.c	/^static int procconf(int mode){$/;"	f	file:
proccreate	tcamgr.c	/^static int proccreate(const char *name){$/;"	f	file:
proccreate	tcbmgr.c	/^static int proccreate(const char *path, int lmemb, int nmemb,$/;"	f	file:
proccreate	tcfmgr.c	/^static int proccreate(const char *path, int width, int64_t limsiz){$/;"	f	file:
proccreate	tchmgr.c	/^static int proccreate(const char *path, int bnum, int apow, int fpow, int opts){$/;"	f	file:
proccreate	tctmgr.c	/^static int proccreate(const char *path, int bnum, int apow, int fpow, int opts){$/;"	f	file:
proccstr	tcucodec.c	/^static int proccstr(const char *ibuf, int isiz, bool dec, bool js){$/;"	f	file:
procdate	tcucodec.c	/^static int procdate(const char *str, int jl, bool wf, bool rf){$/;"	f	file:
procget	tcamgr.c	/^static int procget(const char *name, const char *kbuf, int ksiz, int sep, bool px, bool pz){$/;"	f	file:
procget	tcbmgr.c	/^static int procget(const char *path, const char *kbuf, int ksiz, TCCMP cmp, int omode,$/;"	f	file:
procget	tcfmgr.c	/^static int procget(const char *path, const char *kbuf, int ksiz, int omode, bool px, bool pz){$/;"	f	file:
procget	tchmgr.c	/^static int procget(const char *path, const char *kbuf, int ksiz, int omode, bool px, bool pz){$/;"	f	file:
procget	tctmgr.c	/^static int procget(const char *path, const char *pkbuf, int pksiz, int omode, bool px, bool pz){$/;"	f	file:
procggldh	bros/maptest.cc	/^static int procggldh(int rnum, bool rd){$/;"	f	file:
procgglsh	bros/maptest.cc	/^static int procgglsh(int rnum, bool rd){$/;"	f	file:
prochash	tcucodec.c	/^static int prochash(const char *ibuf, int isiz, bool crc, int ch){$/;"	f	file:
prochex	tcucodec.c	/^static int prochex(const char *ibuf, int isiz, bool dec){$/;"	f	file:
procimporttsv	tcbmgr.c	/^static int procimporttsv(const char *path, const char *file, int omode, bool sc){$/;"	f	file:
procimporttsv	tcfmgr.c	/^static int procimporttsv(const char *path, const char *file, int omode, bool sc){$/;"	f	file:
procimporttsv	tchmgr.c	/^static int procimporttsv(const char *path, const char *file, int omode, bool sc){$/;"	f	file:
procimporttsv	tctmgr.c	/^static int procimporttsv(const char *path, const char *file, int omode, bool sc){$/;"	f	file:
procinform	tcamgr.c	/^static int procinform(const char *name){$/;"	f	file:
procinform	tcbmgr.c	/^static int procinform(const char *path, int omode){$/;"	f	file:
procinform	tcfmgr.c	/^static int procinform(const char *path, int omode){$/;"	f	file:
procinform	tchmgr.c	/^static int procinform(const char *path, int omode){$/;"	f	file:
procinform	tctmgr.c	/^static int procinform(const char *path, int omode){$/;"	f	file:
proclist	tcamgr.c	/^static int proclist(const char *name, int sep, int max, bool pv, bool px, const char *fmstr){$/;"	f	file:
proclist	tcbmgr.c	/^static int proclist(const char *path, TCCMP cmp, int omode, int max, bool pv, bool px, bool bk,$/;"	f	file:
proclist	tcfmgr.c	/^static int proclist(const char *path, int omode, int max, bool pv, bool px,$/;"	f	file:
proclist	tchmgr.c	/^static int proclist(const char *path, int omode, int max, bool pv, bool px, const char *fmstr){$/;"	f	file:
proclist	tctmgr.c	/^static int proclist(const char *path, int omode, int max, bool pv, bool px, const char *fmstr){$/;"	f	file:
proclist	tcutest.c	/^static int proclist(int rnum, int anum, bool rd){$/;"	f	file:
procmap	tcamgr.c	/^static int procmap(const char *name, const char *dest, const char *fmstr){$/;"	f	file:
procmap	tcutest.c	/^static int procmap(int rnum, int bnum, bool rd, bool tr, bool rnd, int dmode){$/;"	f	file:
procmdb	tcutest.c	/^static int procmdb(int rnum, int bnum, bool rd, bool tr, bool rnd, int dmode){$/;"	f	file:
procmime	tcucodec.c	/^static int procmime(const char *ibuf, int isiz, bool dec, const char *ename, bool qb, bool on,$/;"	f	file:
procmisc	tcamgr.c	/^static int procmisc(const char *name, const char *func, const TCLIST *args, int sep, bool px){$/;"	f	file:
procmisc	tcatest.c	/^static int procmisc(const char *name, int rnum){$/;"	f	file:
procmisc	tcbtest.c	/^static int procmisc(const char *path, int rnum, bool mt, int opts, int omode){$/;"	f	file:
procmisc	tcftest.c	/^static int procmisc(const char *path, int rnum, bool mt, int omode){$/;"	f	file:
procmisc	tchtest.c	/^static int procmisc(const char *path, int rnum, bool mt, int opts, int omode){$/;"	f	file:
procmisc	tcttest.c	/^static int procmisc(const char *path, int rnum, bool mt, int opts, int omode){$/;"	f	file:
procmisc	tcutest.c	/^static int procmisc(int rnum){$/;"	f	file:
procndb	tcutest.c	/^static int procndb(int rnum, bool rd, bool tr, bool rnd, int dmode){$/;"	f	file:
procoptimize	tcamgr.c	/^static int procoptimize(const char *name, const char *params){$/;"	f	file:
procoptimize	tcbmgr.c	/^static int procoptimize(const char *path, int lmemb, int nmemb,$/;"	f	file:
procoptimize	tcfmgr.c	/^static int procoptimize(const char *path, int width, int64_t limsiz, int omode){$/;"	f	file:
procoptimize	tchmgr.c	/^static int procoptimize(const char *path, int bnum, int apow, int fpow, int opts, int omode,$/;"	f	file:
procoptimize	tctmgr.c	/^static int procoptimize(const char *path, int bnum, int apow, int fpow, int opts, int omode,$/;"	f	file:
procout	tcamgr.c	/^static int procout(const char *name, const char *kbuf, int ksiz){$/;"	f	file:
procout	tcbmgr.c	/^static int procout(const char *path, const char *kbuf, int ksiz, TCCMP cmp, int omode){$/;"	f	file:
procout	tcfmgr.c	/^static int procout(const char *path, const char *kbuf, int ksiz, int omode){$/;"	f	file:
procout	tchmgr.c	/^static int procout(const char *path, const char *kbuf, int ksiz, int omode){$/;"	f	file:
procout	tctmgr.c	/^static int procout(const char *path, const char *pkbuf, int pksiz, int omode){$/;"	f	file:
procpack	tcucodec.c	/^static int procpack(const char *ibuf, int isiz, bool dec, bool bwt){$/;"	f	file:
procput	tcamgr.c	/^static int procput(const char *name, const char *kbuf, int ksiz, const char *vbuf, int vsiz,$/;"	f	file:
procput	tcbmgr.c	/^static int procput(const char *path, const char *kbuf, int ksiz, const char *vbuf, int vsiz,$/;"	f	file:
procput	tcfmgr.c	/^static int procput(const char *path, const char *kbuf, int ksiz, const char *vbuf, int vsiz,$/;"	f	file:
procput	tchmgr.c	/^static int procput(const char *path, const char *kbuf, int ksiz, const char *vbuf, int vsiz,$/;"	f	file:
procput	tctmgr.c	/^static int procput(const char *path, const char *pkbuf, int pksiz, TCMAP *cols,$/;"	f	file:
procqueue	tcbtest.c	/^static int procqueue(const char *path, int rnum, int lmemb, int nmemb, int bnum,$/;"	f	file:
procquote	tcucodec.c	/^static int procquote(const char *ibuf, int isiz, bool dec){$/;"	f	file:
procrace	tcbmttest.c	/^static int procrace(const char *path, int tnum, int rnum, int lmemb, int nmemb,$/;"	f	file:
procrace	tchmttest.c	/^static int procrace(const char *path, int tnum, int rnum, int bnum, int apow, int fpow,$/;"	f	file:
procrcat	tcatest.c	/^static int procrcat(const char *name, int rnum){$/;"	f	file:
procrcat	tcbtest.c	/^static int procrcat(const char *path, int rnum,$/;"	f	file:
procrcat	tcftest.c	/^static int procrcat(const char *path, int rnum, int width, int64_t limsiz,$/;"	f	file:
procrcat	tchtest.c	/^static int procrcat(const char *path, int rnum, int bnum, int apow, int fpow,$/;"	f	file:
procrcat	tcttest.c	/^static int procrcat(const char *path, int rnum, int bnum, int apow, int fpow,$/;"	f	file:
procread	tcamttest.c	/^static int procread(const char *name, int tnum){$/;"	f	file:
procread	tcatest.c	/^static int procread(const char *name){$/;"	f	file:
procread	tcbmttest.c	/^static int procread(const char *path, int tnum, int xmsiz, int dfunit, int omode,$/;"	f	file:
procread	tcbtest.c	/^static int procread(const char *path, bool mt, TCCMP cmp, int lcnum, int ncnum,$/;"	f	file:
procread	tcfmttest.c	/^static int procread(const char *path, int tnum, int omode, bool wb, bool rnd){$/;"	f	file:
procread	tcftest.c	/^static int procread(const char *path, bool mt, int omode, bool wb, bool rnd){$/;"	f	file:
procread	tchmttest.c	/^static int procread(const char *path, int tnum, int rcnum, int xmsiz, int dfunit, int omode,$/;"	f	file:
procread	tchtest.c	/^static int procread(const char *path, bool mt, int rcnum, int xmsiz, int dfunit, int omode,$/;"	f	file:
procread	tctmttest.c	/^static int procread(const char *path, int tnum, int rcnum, int lcnum, int ncnum,$/;"	f	file:
procread	tcttest.c	/^static int procread(const char *path, bool mt, int rcnum, int lcnum, int ncnum,$/;"	f	file:
procremove	tcamttest.c	/^static int procremove(const char *name, int tnum){$/;"	f	file:
procremove	tcatest.c	/^static int procremove(const char *name){$/;"	f	file:
procremove	tcbmttest.c	/^static int procremove(const char *path, int tnum, int xmsiz, int dfunit, int omode, bool rnd){$/;"	f	file:
procremove	tcbtest.c	/^static int procremove(const char *path, bool mt, TCCMP cmp, int lcnum, int ncnum,$/;"	f	file:
procremove	tcfmttest.c	/^static int procremove(const char *path, int tnum, int omode, bool rnd){$/;"	f	file:
procremove	tcftest.c	/^static int procremove(const char *path, bool mt, int omode, bool rnd){$/;"	f	file:
procremove	tchmttest.c	/^static int procremove(const char *path, int tnum, int rcnum, int xmsiz, int dfunit, int omode,$/;"	f	file:
procremove	tchtest.c	/^static int procremove(const char *path, bool mt, int rcnum, int xmsiz, int dfunit, int omode,$/;"	f	file:
procremove	tctmttest.c	/^static int procremove(const char *path, int tnum, int rcnum, int lcnum, int ncnum,$/;"	f	file:
procremove	tcttest.c	/^static int procremove(const char *path, bool mt, int rcnum, int lcnum, int ncnum,$/;"	f	file:
procsearch	tctmgr.c	/^static int procsearch(const char *path, TCLIST *conds, const char *oname, const char *otype,$/;"	f	file:
procsetindex	tctmgr.c	/^static int procsetindex(const char *path, const char *name, int omode, int type){$/;"	f	file:
procstlmap	bros/maptest.cc	/^static int procstlmap(int rnum, bool rd){$/;"	f	file:
procstlmmap	bros/maptest.cc	/^static int procstlmmap(int rnum, bool rd){$/;"	f	file:
procstlset	bros/maptest.cc	/^static int procstlset(int rnum, bool rd){$/;"	f	file:
proctcbs	tcucodec.c	/^static int proctcbs(const char *ibuf, int isiz, bool dec){$/;"	f	file:
proctcmap	bros/maptest.cc	/^static int proctcmap(int rnum, bool rd){$/;"	f	file:
proctctree	bros/maptest.cc	/^static int proctctree(int rnum, bool rd){$/;"	f	file:
proctmpl	tcucodec.c	/^static int proctmpl(const char *ibuf, int isiz, TCMAP *vars){$/;"	f	file:
proctree	tcutest.c	/^static int proctree(int rnum, bool rd, bool tr, bool rnd, int dmode){$/;"	f	file:
proctrhash	bros/maptest.cc	/^static int proctrhash(int rnum, bool rd){$/;"	f	file:
proctypical	tcbmttest.c	/^static int proctypical(const char *path, int tnum, int rnum, int lmemb, int nmemb,$/;"	f	file:
proctypical	tcfmttest.c	/^static int proctypical(const char *path, int tnum, int rnum, int width, int64_t limsiz,$/;"	f	file:
proctypical	tchmttest.c	/^static int proctypical(const char *path, int tnum, int rnum, int bnum, int apow, int fpow,$/;"	f	file:
proctypical	tctmttest.c	/^static int proctypical(const char *path, int tnum, int rnum, int bnum, int apow, int fpow,$/;"	f	file:
proctypical	tcumttest.c	/^static int proctypical(int tnum, int rnum, int bnum, bool tr, bool nc, int rratio){$/;"	f	file:
procucs	tcucodec.c	/^static int procucs(const char *ibuf, int isiz, bool dec, bool un, const char *kw){$/;"	f	file:
procurl	tcucodec.c	/^static int procurl(const char *ibuf, int isiz, bool dec, bool br, const char *base){$/;"	f	file:
procversion	tcamgr.c	/^static int procversion(void){$/;"	f	file:
procversion	tcbmgr.c	/^static int procversion(void){$/;"	f	file:
procversion	tcfmgr.c	/^static int procversion(void){$/;"	f	file:
procversion	tchmgr.c	/^static int procversion(void){$/;"	f	file:
procversion	tctmgr.c	/^static int procversion(void){$/;"	f	file:
procwicked	tcatest.c	/^static int procwicked(const char *name, int rnum){$/;"	f	file:
procwicked	tcbmttest.c	/^static int procwicked(const char *path, int tnum, int rnum, int opts, int omode, bool nc){$/;"	f	file:
procwicked	tcbtest.c	/^static int procwicked(const char *path, int rnum, bool mt, int opts, int omode){$/;"	f	file:
procwicked	tcfmttest.c	/^static int procwicked(const char *path, int tnum, int rnum, int omode, bool nc){$/;"	f	file:
procwicked	tcftest.c	/^static int procwicked(const char *path, int rnum, bool mt, int omode){$/;"	f	file:
procwicked	tchmttest.c	/^static int procwicked(const char *path, int tnum, int rnum, int opts, int omode, bool nc){$/;"	f	file:
procwicked	tchtest.c	/^static int procwicked(const char *path, int rnum, bool mt, int opts, int omode){$/;"	f	file:
procwicked	tctmttest.c	/^static int procwicked(const char *path, int tnum, int rnum, int opts, int omode){$/;"	f	file:
procwicked	tcttest.c	/^static int procwicked(const char *path, int rnum, bool mt, int opts, int omode){$/;"	f	file:
procwicked	tcutest.c	/^static int procwicked(int rnum){$/;"	f	file:
procwrite	tcamttest.c	/^static int procwrite(const char *name, int tnum, int rnum){$/;"	f	file:
procwrite	tcatest.c	/^static int procwrite(const char *name, int rnum){$/;"	f	file:
procwrite	tcbmttest.c	/^static int procwrite(const char *path, int tnum, int rnum, int lmemb, int nmemb,$/;"	f	file:
procwrite	tcbtest.c	/^static int procwrite(const char *path, int rnum, int lmemb, int nmemb, int bnum,$/;"	f	file:
procwrite	tcfmttest.c	/^static int procwrite(const char *path, int tnum, int rnum, int width, int64_t limsiz,$/;"	f	file:
procwrite	tcftest.c	/^static int procwrite(const char *path, int rnum, int width, int64_t limsiz,$/;"	f	file:
procwrite	tchmttest.c	/^static int procwrite(const char *path, int tnum, int rnum, int bnum, int apow, int fpow,$/;"	f	file:
procwrite	tchtest.c	/^static int procwrite(const char *path, int rnum, int bnum, int apow, int fpow,$/;"	f	file:
procwrite	tctmttest.c	/^static int procwrite(const char *path, int tnum, int rnum, int bnum, int apow, int fpow,$/;"	f	file:
procwrite	tcttest.c	/^static int procwrite(const char *path, int rnum, int bnum, int apow, int fpow,$/;"	f	file:
procxml	tcucodec.c	/^static int procxml(const char *ibuf, int isiz, bool dec, bool br){$/;"	f	file:
procxstr	tcutest.c	/^static int procxstr(int rnum){$/;"	f	file:
proczlib	tcucodec.c	/^static int proczlib(const char *ibuf, int isiz, bool dec, bool gz){$/;"	f	file:
progname	bros/bdbtest.c	/^const char *progname;                    \/* program name *\/$/;"	v
progname	bros/cdbtest.c	/^const char *progname;                    \/* program name *\/$/;"	v
progname	bros/gdbmtest.c	/^const char *progname;                    \/* program name *\/$/;"	v
progname	bros/ndbmtest.c	/^const char *progname;                    \/* program name *\/$/;"	v
progname	bros/qdbmtest.c	/^const char *progname;                    \/* program name *\/$/;"	v
progname	bros/sdbmtest.c	/^const char *progname;                    \/* program name *\/$/;"	v
progname	bros/sqltest.c	/^const char *progname;                    \/* program name *\/$/;"	v
progname	bros/tctest.c	/^const char *progname;                    \/* program name *\/$/;"	v
progname	bros/tdbtest.c	/^const char *progname;                    \/* program name *\/$/;"	v
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psiz	tchdb.c	/^  uint16_t psiz;                         \/\/ size of the padding$/;"	m	struct:__anon41	file:
pthread_create	myconf.h	397;"	d
pthread_detach	myconf.h	400;"	d
pthread_getspecific	myconf.h	395;"	d
pthread_join	myconf.h	399;"	d
pthread_key_create	myconf.h	392;"	d
pthread_key_delete	myconf.h	393;"	d
pthread_key_t	myconf.h	391;"	d
pthread_mutex_destroy	myconf.h	378;"	d
pthread_mutex_init	myconf.h	377;"	d
pthread_mutex_lock	myconf.h	379;"	d
pthread_mutex_t	myconf.h	374;"	d
pthread_mutex_unlock	myconf.h	380;"	d
pthread_mutexattr_destroy	myconf.h	371;"	d
pthread_mutexattr_init	myconf.h	370;"	d
pthread_mutexattr_settype	myconf.h	372;"	d
pthread_mutexattr_t	myconf.h	367;"	d
pthread_once	myconf.h	365;"	d
pthread_once_t	myconf.h	362;"	d
pthread_rwlock_destroy	myconf.h	386;"	d
pthread_rwlock_init	myconf.h	385;"	d
pthread_rwlock_rdlock	myconf.h	387;"	d
pthread_rwlock_t	myconf.h	382;"	d
pthread_rwlock_unlock	myconf.h	389;"	d
pthread_rwlock_wrlock	myconf.h	388;"	d
pthread_setspecific	myconf.h	394;"	d
pthread_t	myconf.h	360;"	d
ptr	tcutil.h	/^  char *ptr;                             \/* pointer to the region *\/$/;"	m	struct:__anon81
ptr	tcutil.h	/^  char *ptr;                             \/* pointer to the region *\/$/;"	m	struct:__anon82
ptr	tcutil.h	/^  void *ptr;                             \/* pointer *\/$/;"	m	struct:__anon88
put	tcadb.h	/^  bool (*put)(void *, const void *, int, const void *, int);$/;"	m	struct:__anon6
putcat	tcadb.h	/^  bool (*putcat)(void *, const void *, int, const void *, int);$/;"	m	struct:__anon6
putkeep	tcadb.h	/^  bool (*putkeep)(void *, const void *, int, const void *, int);$/;"	m	struct:__anon6
putproc	tcadb.h	/^  bool (*putproc)(void *, const void *, int, const void *, int, TCPDPROC, void *);$/;"	m	struct:__anon6
rbopaque	tcbdb.h	/^  char *rbopaque;                        \/* opaque for rollback *\/$/;"	m	struct:__anon18
rcnum	tchdb.h	/^  uint32_t rcnum;                        \/* maximum number of cached records *\/$/;"	m	struct:__anon46
readparameters	tcawmgr.c	/^static void readparameters(TCMAP *params){$/;"	f	file:
recc	tchdb.h	/^  TCMDB *recc;                           \/* cache for records *\/$/;"	m	struct:__anon46
recs	tcadb.c	/^  TCLIST *recs;                          \/\/ cached records$/;"	m	struct:__anon3	file:
recs	tcbdb.c	/^  TCPTRLIST *recs;                       \/\/ list of records$/;"	m	struct:__anon13	file:
regex	tctdb.h	/^  void *regex;                           \/* regular expression object *\/$/;"	m	struct:__anon67
rest	tcbdb.c	/^  TCLIST *rest;                          \/\/ list of value objects$/;"	m	struct:__anon12	file:
right	tchdb.c	/^  uint64_t right;                        \/\/ offset of the right child record$/;"	m	struct:__anon41	file:
right	tcutil.h	/^  struct _TCMAPREC *right;               \/* pointer to the right child *\/$/;"	m	struct:_TCMAPREC	typeref:struct:_TCMAPREC::_TCMAPREC
right	tcutil.h	/^  struct _TCTREEREC *right;              \/* pointer to the right child *\/$/;"	m	struct:_TCTREEREC	typeref:struct:_TCTREEREC::_TCTREEREC
rmtxs	tcfdb.h	/^  void *rmtxs;                           \/* mutexes for records *\/$/;"	m	struct:__anon32
rmtxs	tchdb.h	/^  void *rmtxs;                           \/* mutexes for records *\/$/;"	m	struct:__anon46
rnd	tcbmttest.c	/^  bool rnd;$/;"	m	struct:__anon24	file:
rnd	tcbmttest.c	/^  bool rnd;$/;"	m	struct:__anon25	file:
rnd	tcbmttest.c	/^  bool rnd;$/;"	m	struct:__anon26	file:
rnd	tcfmttest.c	/^  bool rnd;$/;"	m	struct:__anon36	file:
rnd	tcfmttest.c	/^  bool rnd;$/;"	m	struct:__anon37	file:
rnd	tcfmttest.c	/^  bool rnd;$/;"	m	struct:__anon38	file:
rnd	tchmttest.c	/^  bool rnd;$/;"	m	struct:__anon50	file:
rnd	tchmttest.c	/^  bool rnd;$/;"	m	struct:__anon51	file:
rnd	tchmttest.c	/^  bool rnd;$/;"	m	struct:__anon52	file:
rnd	tctmttest.c	/^  bool rnd;$/;"	m	struct:__anon73	file:
rnd	tctmttest.c	/^  bool rnd;$/;"	m	struct:__anon74	file:
rnd	tctmttest.c	/^  bool rnd;$/;"	m	struct:__anon75	file:
rnd	tcumttest.c	/^  bool rnd;$/;"	m	struct:__anon78	file:
rnum	tcadb.h	/^  uint64_t (*rnum)(void *);$/;"	m	struct:__anon6
rnum	tcamttest.c	/^  int rnum;$/;"	m	struct:__anon7	file:
rnum	tcamttest.c	/^  int rnum;$/;"	m	struct:__anon8	file:
rnum	tcamttest.c	/^  int rnum;$/;"	m	struct:__anon9	file:
rnum	tcbdb.h	/^  uint64_t rnum;                         \/* number of records *\/$/;"	m	struct:__anon18
rnum	tcbmttest.c	/^  int rnum;$/;"	m	struct:__anon24	file:
rnum	tcbmttest.c	/^  int rnum;$/;"	m	struct:__anon25	file:
rnum	tcbmttest.c	/^  int rnum;$/;"	m	struct:__anon26	file:
rnum	tcbmttest.c	/^  int rnum;$/;"	m	struct:__anon27	file:
rnum	tcbmttest.c	/^  int rnum;$/;"	m	struct:__anon28	file:
rnum	tcbmttest.c	/^  int rnum;$/;"	m	struct:__anon29	file:
rnum	tcfdb.h	/^  uint64_t rnum;                         \/* number of the records *\/$/;"	m	struct:__anon32
rnum	tcfmttest.c	/^  int rnum;$/;"	m	struct:__anon36	file:
rnum	tcfmttest.c	/^  int rnum;$/;"	m	struct:__anon37	file:
rnum	tcfmttest.c	/^  int rnum;$/;"	m	struct:__anon38	file:
rnum	tcfmttest.c	/^  int rnum;$/;"	m	struct:__anon39	file:
rnum	tcfmttest.c	/^  int rnum;$/;"	m	struct:__anon40	file:
rnum	tchdb.h	/^  uint64_t rnum;                         \/* number of the records *\/$/;"	m	struct:__anon46
rnum	tchmttest.c	/^  int rnum;$/;"	m	struct:__anon50	file:
rnum	tchmttest.c	/^  int rnum;$/;"	m	struct:__anon51	file:
rnum	tchmttest.c	/^  int rnum;$/;"	m	struct:__anon52	file:
rnum	tchmttest.c	/^  int rnum;$/;"	m	struct:__anon53	file:
rnum	tchmttest.c	/^  int rnum;$/;"	m	struct:__anon54	file:
rnum	tchmttest.c	/^  int rnum;$/;"	m	struct:__anon55	file:
rnum	tctmttest.c	/^  int rnum;$/;"	m	struct:__anon73	file:
rnum	tctmttest.c	/^  int rnum;$/;"	m	struct:__anon74	file:
rnum	tctmttest.c	/^  int rnum;$/;"	m	struct:__anon75	file:
rnum	tctmttest.c	/^  int rnum;$/;"	m	struct:__anon76	file:
rnum	tctmttest.c	/^  int rnum;$/;"	m	struct:__anon77	file:
rnum	tcumttest.c	/^  int rnum;$/;"	m	struct:__anon78	file:
rnum	tcumttest.c	/^  int rnum;$/;"	m	struct:__anon79	file:
rnum	tcutil.h	/^  uint64_t rnum;                         \/* number of records *\/$/;"	m	struct:__anon84
rnum	tcutil.h	/^  uint64_t rnum;                         \/* number of records *\/$/;"	m	struct:__anon85
root	tcbdb.h	/^  uint64_t root;                         \/* ID number of the root page *\/$/;"	m	struct:__anon18
root	tcutil.h	/^  TCTREEREC *root;                       \/* pointer to the root element *\/$/;"	m	struct:__anon85
rpath	tcfdb.h	/^  char *rpath;                           \/* real path for locking *\/$/;"	m	struct:__anon32
rpath	tchdb.h	/^  char *rpath;                           \/* real path for locking *\/$/;"	m	struct:__anon46
rratio	tcbmttest.c	/^  int rratio;$/;"	m	struct:__anon28	file:
rratio	tcfmttest.c	/^  int rratio;$/;"	m	struct:__anon40	file:
rratio	tchmttest.c	/^  int rratio;$/;"	m	struct:__anon54	file:
rratio	tctmttest.c	/^  int rratio;$/;"	m	struct:__anon77	file:
rratio	tcumttest.c	/^  int rratio;$/;"	m	struct:__anon79	file:
rsiz	tcadb.c	/^  int64_t rsiz;                          \/\/ total size of cached records$/;"	m	struct:__anon3	file:
rsiz	tcfdb.h	/^  int rsiz;                              \/* size of each record *\/$/;"	m	struct:__anon32
rsiz	tchdb.c	/^  uint32_t rsiz;                         \/\/ size of the block$/;"	m	struct:__anon42	file:
rsiz	tchdb.c	/^  uint32_t rsiz;                         \/\/ size of the whole record$/;"	m	struct:__anon41	file:
runbase	tcucodec.c	/^static int runbase(int argc, char **argv){$/;"	f	file:
runbtread	bros/bdbtest.c	/^int runbtread(int argc, char **argv){$/;"	f
runbtread	bros/qdbmtest.c	/^int runbtread(int argc, char **argv){$/;"	f
runbtread	bros/tctest.c	/^int runbtread(int argc, char **argv){$/;"	f
runbtwrite	bros/bdbtest.c	/^int runbtwrite(int argc, char **argv){$/;"	f
runbtwrite	bros/qdbmtest.c	/^int runbtwrite(int argc, char **argv){$/;"	f
runbtwrite	bros/tctest.c	/^int runbtwrite(int argc, char **argv){$/;"	f
runbzip	tcucodec.c	/^static int runbzip(int argc, char **argv){$/;"	f	file:
runcipher	tcucodec.c	/^static int runcipher(int argc, char **argv){$/;"	f	file:
runcombo	tcumttest.c	/^static int runcombo(int argc, char **argv){$/;"	f	file:
runcompare	tcatest.c	/^static int runcompare(int argc, char **argv){$/;"	f	file:
runconf	tcucodec.c	/^static int runconf(int argc, char **argv){$/;"	f	file:
runcreate	tcamgr.c	/^static int runcreate(int argc, char **argv){$/;"	f	file:
runcreate	tcbmgr.c	/^static int runcreate(int argc, char **argv){$/;"	f	file:
runcreate	tcfmgr.c	/^static int runcreate(int argc, char **argv){$/;"	f	file:
runcreate	tchmgr.c	/^static int runcreate(int argc, char **argv){$/;"	f	file:
runcreate	tctmgr.c	/^static int runcreate(int argc, char **argv){$/;"	f	file:
runcstr	tcucodec.c	/^static int runcstr(int argc, char **argv){$/;"	f	file:
rundate	tcucodec.c	/^static int rundate(int argc, char **argv){$/;"	f	file:
runflread	bros/tctest.c	/^int runflread(int argc, char **argv){$/;"	f
runflwrite	bros/tctest.c	/^int runflwrite(int argc, char **argv){$/;"	f
runget	tcamgr.c	/^static int runget(int argc, char **argv){$/;"	f	file:
runget	tcbmgr.c	/^static int runget(int argc, char **argv){$/;"	f	file:
runget	tcfmgr.c	/^static int runget(int argc, char **argv){$/;"	f	file:
runget	tchmgr.c	/^static int runget(int argc, char **argv){$/;"	f	file:
runget	tctmgr.c	/^static int runget(int argc, char **argv){$/;"	f	file:
runggldh	bros/maptest.cc	/^static int runggldh(int argc, char **argv){$/;"	f	file:
rungglsh	bros/maptest.cc	/^static int rungglsh(int argc, char **argv){$/;"	f	file:
runhash	tcucodec.c	/^static int runhash(int argc, char **argv){$/;"	f	file:
runhex	tcucodec.c	/^static int runhex(int argc, char **argv){$/;"	f	file:
runimporttsv	tcbmgr.c	/^static int runimporttsv(int argc, char **argv){$/;"	f	file:
runimporttsv	tcfmgr.c	/^static int runimporttsv(int argc, char **argv){$/;"	f	file:
runimporttsv	tchmgr.c	/^static int runimporttsv(int argc, char **argv){$/;"	f	file:
runimporttsv	tctmgr.c	/^static int runimporttsv(int argc, char **argv){$/;"	f	file:
runinform	tcamgr.c	/^static int runinform(int argc, char **argv){$/;"	f	file:
runinform	tcbmgr.c	/^static int runinform(int argc, char **argv){$/;"	f	file:
runinform	tcfmgr.c	/^static int runinform(int argc, char **argv){$/;"	f	file:
runinform	tchmgr.c	/^static int runinform(int argc, char **argv){$/;"	f	file:
runinform	tctmgr.c	/^static int runinform(int argc, char **argv){$/;"	f	file:
runit	tchdb.h	/^  uint32_t runit;                        \/* record reading unit *\/$/;"	m	struct:__anon46
runlist	tcamgr.c	/^static int runlist(int argc, char **argv){$/;"	f	file:
runlist	tcbmgr.c	/^static int runlist(int argc, char **argv){$/;"	f	file:
runlist	tcfmgr.c	/^static int runlist(int argc, char **argv){$/;"	f	file:
runlist	tchmgr.c	/^static int runlist(int argc, char **argv){$/;"	f	file:
runlist	tctmgr.c	/^static int runlist(int argc, char **argv){$/;"	f	file:
runlist	tcutest.c	/^static int runlist(int argc, char **argv){$/;"	f	file:
runmap	tcamgr.c	/^static int runmap(int argc, char **argv){$/;"	f	file:
runmap	tcutest.c	/^static int runmap(int argc, char **argv){$/;"	f	file:
runmdb	tcutest.c	/^static int runmdb(int argc, char **argv){$/;"	f	file:
runmime	tcucodec.c	/^static int runmime(int argc, char **argv){$/;"	f	file:
runmisc	tcamgr.c	/^static int runmisc(int argc, char **argv){$/;"	f	file:
runmisc	tcatest.c	/^static int runmisc(int argc, char **argv){$/;"	f	file:
runmisc	tcbtest.c	/^static int runmisc(int argc, char **argv){$/;"	f	file:
runmisc	tcftest.c	/^static int runmisc(int argc, char **argv){$/;"	f	file:
runmisc	tchtest.c	/^static int runmisc(int argc, char **argv){$/;"	f	file:
runmisc	tcttest.c	/^static int runmisc(int argc, char **argv){$/;"	f	file:
runmisc	tcutest.c	/^static int runmisc(int argc, char **argv){$/;"	f	file:
runndb	tcutest.c	/^static int runndb(int argc, char **argv){$/;"	f	file:
runoptimize	tcamgr.c	/^static int runoptimize(int argc, char **argv){$/;"	f	file:
runoptimize	tcbmgr.c	/^static int runoptimize(int argc, char **argv){$/;"	f	file:
runoptimize	tcfmgr.c	/^static int runoptimize(int argc, char **argv){$/;"	f	file:
runoptimize	tchmgr.c	/^static int runoptimize(int argc, char **argv){$/;"	f	file:
runoptimize	tctmgr.c	/^static int runoptimize(int argc, char **argv){$/;"	f	file:
runout	tcamgr.c	/^static int runout(int argc, char **argv){$/;"	f	file:
runout	tcbmgr.c	/^static int runout(int argc, char **argv){$/;"	f	file:
runout	tcfmgr.c	/^static int runout(int argc, char **argv){$/;"	f	file:
runout	tchmgr.c	/^static int runout(int argc, char **argv){$/;"	f	file:
runout	tctmgr.c	/^static int runout(int argc, char **argv){$/;"	f	file:
runpack	tcucodec.c	/^static int runpack(int argc, char **argv){$/;"	f	file:
runput	tcamgr.c	/^static int runput(int argc, char **argv){$/;"	f	file:
runput	tcbmgr.c	/^static int runput(int argc, char **argv){$/;"	f	file:
runput	tcfmgr.c	/^static int runput(int argc, char **argv){$/;"	f	file:
runput	tchmgr.c	/^static int runput(int argc, char **argv){$/;"	f	file:
runput	tctmgr.c	/^static int runput(int argc, char **argv){$/;"	f	file:
runqueue	tcbtest.c	/^static int runqueue(int argc, char **argv){$/;"	f	file:
runquote	tcucodec.c	/^static int runquote(int argc, char **argv){$/;"	f	file:
runrace	tcbmttest.c	/^static int runrace(int argc, char **argv){$/;"	f	file:
runrace	tchmttest.c	/^static int runrace(int argc, char **argv){$/;"	f	file:
runrcat	tcatest.c	/^static int runrcat(int argc, char **argv){$/;"	f	file:
runrcat	tcbtest.c	/^static int runrcat(int argc, char **argv){$/;"	f	file:
runrcat	tcftest.c	/^static int runrcat(int argc, char **argv){$/;"	f	file:
runrcat	tchtest.c	/^static int runrcat(int argc, char **argv){$/;"	f	file:
runrcat	tcttest.c	/^static int runrcat(int argc, char **argv){$/;"	f	file:
runread	bros/bdbtest.c	/^int runread(int argc, char **argv){$/;"	f
runread	bros/cdbtest.c	/^int runread(int argc, char **argv){$/;"	f
runread	bros/gdbmtest.c	/^int runread(int argc, char **argv){$/;"	f
runread	bros/ndbmtest.c	/^int runread(int argc, char **argv){$/;"	f
runread	bros/qdbmtest.c	/^int runread(int argc, char **argv){$/;"	f
runread	bros/sdbmtest.c	/^int runread(int argc, char **argv){$/;"	f
runread	bros/sqltest.c	/^int runread(int argc, char **argv){$/;"	f
runread	bros/tctest.c	/^int runread(int argc, char **argv){$/;"	f
runread	bros/tdbtest.c	/^int runread(int argc, char **argv){$/;"	f
runread	tcamttest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runread	tcatest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runread	tcbmttest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runread	tcbtest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runread	tcfmttest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runread	tcftest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runread	tchmttest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runread	tchtest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runread	tctmttest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runread	tcttest.c	/^static int runread(int argc, char **argv){$/;"	f	file:
runremove	tcamttest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runremove	tcatest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runremove	tcbmttest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runremove	tcbtest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runremove	tcfmttest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runremove	tcftest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runremove	tchmttest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runremove	tchtest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runremove	tctmttest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runremove	tcttest.c	/^static int runremove(int argc, char **argv){$/;"	f	file:
runsearch	tctmgr.c	/^static int runsearch(int argc, char **argv){$/;"	f	file:
runsetindex	tctmgr.c	/^static int runsetindex(int argc, char **argv){$/;"	f	file:
runstlmap	bros/maptest.cc	/^static int runstlmap(int argc, char **argv){$/;"	f	file:
runstlmmap	bros/maptest.cc	/^static int runstlmmap(int argc, char **argv){$/;"	f	file:
runstlset	bros/maptest.cc	/^static int runstlset(int argc, char **argv){$/;"	f	file:
runtblread	bros/sqltest.c	/^int runtblread(int argc, char **argv){$/;"	f
runtblread	bros/tctest.c	/^int runtblread(int argc, char **argv){$/;"	f
runtblwrite	bros/sqltest.c	/^int runtblwrite(int argc, char **argv){$/;"	f
runtblwrite	bros/tctest.c	/^int runtblwrite(int argc, char **argv){$/;"	f
runtcbs	tcucodec.c	/^static int runtcbs(int argc, char **argv){$/;"	f	file:
runtcmap	bros/maptest.cc	/^static int runtcmap(int argc, char **argv){$/;"	f	file:
runtctree	bros/maptest.cc	/^static int runtctree(int argc, char **argv){$/;"	f	file:
runtmpl	tcucodec.c	/^static int runtmpl(int argc, char **argv){$/;"	f	file:
runtree	tcutest.c	/^static int runtree(int argc, char **argv){$/;"	f	file:
runtrhash	bros/maptest.cc	/^static int runtrhash(int argc, char **argv){$/;"	f	file:
runtypical	tcbmttest.c	/^static int runtypical(int argc, char **argv){$/;"	f	file:
runtypical	tcfmttest.c	/^static int runtypical(int argc, char **argv){$/;"	f	file:
runtypical	tchmttest.c	/^static int runtypical(int argc, char **argv){$/;"	f	file:
runtypical	tctmttest.c	/^static int runtypical(int argc, char **argv){$/;"	f	file:
runtypical	tcumttest.c	/^static int runtypical(int argc, char **argv){$/;"	f	file:
runucs	tcucodec.c	/^static int runucs(int argc, char **argv){$/;"	f	file:
runurl	tcucodec.c	/^static int runurl(int argc, char **argv){$/;"	f	file:
runversion	tcamgr.c	/^static int runversion(int argc, char **argv){$/;"	f	file:
runversion	tcbmgr.c	/^static int runversion(int argc, char **argv){$/;"	f	file:
runversion	tcfmgr.c	/^static int runversion(int argc, char **argv){$/;"	f	file:
runversion	tchmgr.c	/^static int runversion(int argc, char **argv){$/;"	f	file:
runversion	tctmgr.c	/^static int runversion(int argc, char **argv){$/;"	f	file:
runwicked	tcatest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwicked	tcbmttest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwicked	tcbtest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwicked	tcfmttest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwicked	tcftest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwicked	tchmttest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwicked	tchtest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwicked	tctmttest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwicked	tcttest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwicked	tcutest.c	/^static int runwicked(int argc, char **argv){$/;"	f	file:
runwrite	bros/bdbtest.c	/^int runwrite(int argc, char **argv){$/;"	f
runwrite	bros/cdbtest.c	/^int runwrite(int argc, char **argv){$/;"	f
runwrite	bros/gdbmtest.c	/^int runwrite(int argc, char **argv){$/;"	f
runwrite	bros/ndbmtest.c	/^int runwrite(int argc, char **argv){$/;"	f
runwrite	bros/qdbmtest.c	/^int runwrite(int argc, char **argv){$/;"	f
runwrite	bros/sdbmtest.c	/^int runwrite(int argc, char **argv){$/;"	f
runwrite	bros/sqltest.c	/^int runwrite(int argc, char **argv){$/;"	f
runwrite	bros/tctest.c	/^int runwrite(int argc, char **argv){$/;"	f
runwrite	bros/tdbtest.c	/^int runwrite(int argc, char **argv){$/;"	f
runwrite	tcamttest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runwrite	tcatest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runwrite	tcbmttest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runwrite	tcbtest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runwrite	tcfmttest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runwrite	tcftest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runwrite	tchmttest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runwrite	tchtest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runwrite	tctmttest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runwrite	tcttest.c	/^static int runwrite(int argc, char **argv){$/;"	f	file:
runxml	tcucodec.c	/^static int runxml(int argc, char **argv){$/;"	f	file:
runxstr	tcutest.c	/^static int runxstr(int argc, char **argv){$/;"	f	file:
runzlib	tcucodec.c	/^static int runzlib(int argc, char **argv){$/;"	f	file:
sched_yield	myconf.h	401;"	d
sched_yield	myconf.h	433;"	d
sepstrtochr	tcamgr.c	/^static int sepstrtochr(const char *str){$/;"	f	file:
seq	tctdb.c	/^  uint16_t seq;                          \/\/ sequence number$/;"	m	struct:__anon59	file:
seq	tctdb.c	/^  uint16_t seq;                          \/\/ sequence number$/;"	m	struct:__anon60	file:
seq	tcutil.h	/^  uint32_t seq;                          \/* sequential number *\/$/;"	m	struct:__anon92
sethtmlcomform	tcawmgr.c	/^static void sethtmlcomform(PARAMS *params, TCXSTR *obuf, TCADB *db){$/;"	f	file:
sethtmlfooter	tcawmgr.c	/^static void sethtmlfooter(PARAMS *params, TCXSTR *obuf, TCADB *db){$/;"	f	file:
sethtmlheader	tcawmgr.c	/^static void sethtmlheader(PARAMS *params, TCXSTR *obuf, TCADB *db){$/;"	f	file:
sethtmlrecval	tcawmgr.c	/^static void sethtmlrecval(const char *kbuf, int ksiz, TCXSTR *obuf, TCADB *db){$/;"	f	file:
setskeltran	tcamgr.c	/^static void setskeltran(ADBSKEL *skel){$/;"	f	file:
setskeltran	tcamttest.c	/^static void setskeltran(ADBSKEL *skel){$/;"	f	file:
setskeltran	tcatest.c	/^static void setskeltran(ADBSKEL *skel){$/;"	f	file:
showprgr	bros/bdbtest.c	/^int showprgr;                            \/* whether to show progression *\/$/;"	v
showprgr	bros/cdbtest.c	/^int showprgr;                            \/* whether to show progression *\/$/;"	v
showprgr	bros/gdbmtest.c	/^int showprgr;                            \/* whether to show progression *\/$/;"	v
showprgr	bros/ndbmtest.c	/^int showprgr;                            \/* whether to show progression *\/$/;"	v
showprgr	bros/qdbmtest.c	/^int showprgr;                            \/* whether to show progression *\/$/;"	v
showprgr	bros/sdbmtest.c	/^int showprgr;                            \/* whether to show progression *\/$/;"	v
showprgr	bros/sqltest.c	/^int showprgr;                            \/* whether to show progression *\/$/;"	v
showprgr	bros/tctest.c	/^int showprgr;                            \/* whether to show progression *\/$/;"	v
showprgr	bros/tdbtest.c	/^int showprgr;                            \/* whether to show progression *\/$/;"	v
sign	tctdb.c	/^  bool sign;                             \/\/ positive sign$/;"	m	struct:__anon58	file:
sign	tctdb.h	/^  bool sign;                             \/* positive sign *\/$/;"	m	struct:__anon67
size	tcadb.h	/^  uint64_t (*size)(void *);$/;"	m	struct:__anon6
size	tcbdb.c	/^  int size;                              \/\/ predicted size of serialized buffer$/;"	m	struct:__anon13	file:
size	tcutil.h	/^  int size;                              \/* size of the effective region *\/$/;"	m	struct:__anon82
size	tcutil.h	/^  int size;                              \/* size of the region *\/$/;"	m	struct:__anon81
size	tcutil.h	/^  int size;                              \/* size of used region *\/$/;"	m	struct:__anon96
skel	tcadb.h	/^  void *skel;                            \/* skeleton database *\/$/;"	m	struct:__anon4
skip	tctdb.h	/^  int skip;                              \/* skipping number of retrieval *\/$/;"	m	struct:__anon68
sp	tcutil.h	/^  uint8_t *sp;                           \/* start pointer *\/$/;"	m	struct:__anon96
start	tcutil.h	/^  int start;                             \/* start index of used elements *\/$/;"	m	struct:__anon83
start	tcutil.h	/^  int start;                             \/* start index of used elements *\/$/;"	m	struct:__anon95
stlmap	bros/maptest.cc	/^typedef map<string, string> stlmap;$/;"	t	file:
stlmmap	bros/maptest.cc	/^typedef multimap<string, string> stlmmap;$/;"	t	file:
stlset	bros/maptest.cc	/^typedef set<string> stlset;$/;"	t	file:
stringhash	bros/maptest.cc	/^struct stringhash {                      \/\/ hash function for string$/;"	s	file:
strip	man/htmltoman	/^function strip(text){$/;"	f
strtozsv	tcamgr.c	/^static char *strtozsv(const char *str, int sep, int *sp){$/;"	f	file:
sync	tcadb.h	/^  bool (*sync)(void *);$/;"	m	struct:__anon6
sysprint	tcamttest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tcatest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tcbmttest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tcbtest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tcfmttest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tcftest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tchmttest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tchtest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tctmttest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tcttest.c	/^static void sysprint(void){$/;"	f	file:
sysprint	tcutest.c	/^static void sysprint(void){$/;"	f	file:
tcadbadddouble	tcadb.c	/^double tcadbadddouble(TCADB *adb, const void *kbuf, int ksiz, double num){$/;"	f
tcadbaddint	tcadb.c	/^int tcadbaddint(TCADB *adb, const void *kbuf, int ksiz, int num){$/;"	f
tcadbclose	tcadb.c	/^bool tcadbclose(TCADB *adb){$/;"	f
tcadbcopy	tcadb.c	/^bool tcadbcopy(TCADB *adb, const char *path){$/;"	f
tcadbdel	tcadb.c	/^void tcadbdel(TCADB *adb){$/;"	f
tcadbforeach	tcadb.c	/^bool tcadbforeach(TCADB *adb, TCITER iter, void *op){$/;"	f
tcadbfwmkeys	tcadb.c	/^TCLIST *tcadbfwmkeys(TCADB *adb, const void *pbuf, int psiz, int max){$/;"	f
tcadbfwmkeys2	tcadb.c	/^TCLIST *tcadbfwmkeys2(TCADB *adb, const char *pstr, int max){$/;"	f
tcadbget	tcadb.c	/^void *tcadbget(TCADB *adb, const void *kbuf, int ksiz, int *sp){$/;"	f
tcadbget2	tcadb.c	/^char *tcadbget2(TCADB *adb, const char *kstr){$/;"	f
tcadbiterinit	tcadb.c	/^bool tcadbiterinit(TCADB *adb){$/;"	f
tcadbiternext	tcadb.c	/^void *tcadbiternext(TCADB *adb, int *sp){$/;"	f
tcadbiternext2	tcadb.c	/^char *tcadbiternext2(TCADB *adb){$/;"	f
tcadbmapbdb	tcadb.c	/^bool tcadbmapbdb(TCADB *adb, TCLIST *keys, TCBDB *bdb, ADBMAPPROC proc, void *op, int64_t csiz){$/;"	f
tcadbmapbdbdump	tcadb.c	/^static bool tcadbmapbdbdump(ADBMAPBDB *map){$/;"	f	file:
tcadbmapbdbemit	tcadb.c	/^bool tcadbmapbdbemit(void *map, const char *kbuf, int ksiz, const char *vbuf, int vsiz){$/;"	f
tcadbmapbdbiter	tcadb.c	/^static bool tcadbmapbdbiter(const void *kbuf, int ksiz, const void *vbuf, int vsiz, void *op){$/;"	f	file:
tcadbmapreccmpdecimal	tcadb.c	/^static int tcadbmapreccmpdecimal(const TCLISTDATUM *a, const TCLISTDATUM *b){$/;"	f	file:
tcadbmapreccmpint32	tcadb.c	/^static int tcadbmapreccmpint32(const TCLISTDATUM *a, const TCLISTDATUM *b){$/;"	f	file:
tcadbmapreccmpint64	tcadb.c	/^static int tcadbmapreccmpint64(const TCLISTDATUM *a, const TCLISTDATUM *b){$/;"	f	file:
tcadbmapreccmplexical	tcadb.c	/^static int tcadbmapreccmplexical(const TCLISTDATUM *a, const TCLISTDATUM *b){$/;"	f	file:
tcadbmisc	tcadb.c	/^TCLIST *tcadbmisc(TCADB *adb, const char *name, const TCLIST *args){$/;"	f
tcadbmuladddouble	tcadb.c	/^static double tcadbmuladddouble(ADBMUL *mul, const void *kbuf, int ksiz, double num){$/;"	f	file:
tcadbmuladdint	tcadb.c	/^static int tcadbmuladdint(ADBMUL *mul, const void *kbuf, int ksiz, int num){$/;"	f	file:
tcadbmulclose	tcadb.c	/^static bool tcadbmulclose(ADBMUL *mul){$/;"	f	file:
tcadbmulcopy	tcadb.c	/^static bool tcadbmulcopy(ADBMUL *mul, const char *path){$/;"	f	file:
tcadbmuldel	tcadb.c	/^static void tcadbmuldel(ADBMUL *mul){$/;"	f	file:
tcadbmulforeach	tcadb.c	/^static bool tcadbmulforeach(ADBMUL *mul, TCITER iter, void *op){$/;"	f	file:
tcadbmulfwmkeys	tcadb.c	/^static TCLIST *tcadbmulfwmkeys(ADBMUL *mul, const void *pbuf, int psiz, int max){$/;"	f	file:
tcadbmulget	tcadb.c	/^static void *tcadbmulget(ADBMUL *mul, const void *kbuf, int ksiz, int *sp){$/;"	f	file:
tcadbmulidx	tcadb.c	/^static int tcadbmulidx(ADBMUL *mul, const void *kbuf, int ksiz){$/;"	f	file:
tcadbmuliterinit	tcadb.c	/^static bool tcadbmuliterinit(ADBMUL *mul){$/;"	f	file:
tcadbmuliternext	tcadb.c	/^static void *tcadbmuliternext(ADBMUL *mul, int *sp){$/;"	f	file:
tcadbmulmisc	tcadb.c	/^static TCLIST *tcadbmulmisc(ADBMUL *mul, const char *name, const TCLIST *args){$/;"	f	file:
tcadbmulnew	tcadb.c	/^static ADBMUL *tcadbmulnew(int num){$/;"	f	file:
tcadbmulopen	tcadb.c	/^static bool tcadbmulopen(ADBMUL *mul, const char *name){$/;"	f	file:
tcadbmuloptimize	tcadb.c	/^static bool tcadbmuloptimize(ADBMUL *mul, const char *params){$/;"	f	file:
tcadbmulout	tcadb.c	/^static bool tcadbmulout(ADBMUL *mul, const void *kbuf, int ksiz){$/;"	f	file:
tcadbmulpath	tcadb.c	/^static const char *tcadbmulpath(ADBMUL *mul){$/;"	f	file:
tcadbmulput	tcadb.c	/^static bool tcadbmulput(ADBMUL *mul, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f	file:
tcadbmulputcat	tcadb.c	/^static bool tcadbmulputcat(ADBMUL *mul, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f	file:
tcadbmulputkeep	tcadb.c	/^static bool tcadbmulputkeep(ADBMUL *mul, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f	file:
tcadbmulputproc	tcadb.c	/^static bool tcadbmulputproc(ADBMUL *mul, const void *kbuf, int ksiz, const void *vbuf, int vsiz,$/;"	f	file:
tcadbmulrnum	tcadb.c	/^static uint64_t tcadbmulrnum(ADBMUL *mul){$/;"	f	file:
tcadbmulsize	tcadb.c	/^static uint64_t tcadbmulsize(ADBMUL *mul){$/;"	f	file:
tcadbmulsync	tcadb.c	/^static bool tcadbmulsync(ADBMUL *mul){$/;"	f	file:
tcadbmultranabort	tcadb.c	/^static bool tcadbmultranabort(ADBMUL *mul){$/;"	f	file:
tcadbmultranbegin	tcadb.c	/^static bool tcadbmultranbegin(ADBMUL *mul){$/;"	f	file:
tcadbmultrancommit	tcadb.c	/^static bool tcadbmultrancommit(ADBMUL *mul){$/;"	f	file:
tcadbmulvanish	tcadb.c	/^static bool tcadbmulvanish(ADBMUL *mul){$/;"	f	file:
tcadbmulvsiz	tcadb.c	/^static int tcadbmulvsiz(ADBMUL *mul, const void *kbuf, int ksiz){$/;"	f	file:
tcadbnew	tcadb.c	/^TCADB *tcadbnew(void){$/;"	f
tcadbomode	tcadb.c	/^int tcadbomode(TCADB *adb){$/;"	f
tcadbopen	tcadb.c	/^bool tcadbopen(TCADB *adb, const char *name){$/;"	f
tcadboptimize	tcadb.c	/^bool tcadboptimize(TCADB *adb, const char *params){$/;"	f
tcadbout	tcadb.c	/^bool tcadbout(TCADB *adb, const void *kbuf, int ksiz){$/;"	f
tcadbout2	tcadb.c	/^bool tcadbout2(TCADB *adb, const char *kstr){$/;"	f
tcadbpath	tcadb.c	/^const char *tcadbpath(TCADB *adb){$/;"	f
tcadbput	tcadb.c	/^bool tcadbput(TCADB *adb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcadbput2	tcadb.c	/^bool tcadbput2(TCADB *adb, const char *kstr, const char *vstr){$/;"	f
tcadbputcat	tcadb.c	/^bool tcadbputcat(TCADB *adb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcadbputcat2	tcadb.c	/^bool tcadbputcat2(TCADB *adb, const char *kstr, const char *vstr){$/;"	f
tcadbputkeep	tcadb.c	/^bool tcadbputkeep(TCADB *adb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcadbputkeep2	tcadb.c	/^bool tcadbputkeep2(TCADB *adb, const char *kstr, const char *vstr){$/;"	f
tcadbputproc	tcadb.c	/^bool tcadbputproc(TCADB *adb, const void *kbuf, int ksiz, const void *vbuf, int vsiz,$/;"	f
tcadbreveal	tcadb.c	/^void *tcadbreveal(TCADB *adb){$/;"	f
tcadbrnum	tcadb.c	/^uint64_t tcadbrnum(TCADB *adb){$/;"	f
tcadbsetskel	tcadb.c	/^bool tcadbsetskel(TCADB *adb, ADBSKEL *skel){$/;"	f
tcadbsetskelmulti	tcadb.c	/^bool tcadbsetskelmulti(TCADB *adb, int num){$/;"	f
tcadbsize	tcadb.c	/^uint64_t tcadbsize(TCADB *adb){$/;"	f
tcadbsync	tcadb.c	/^bool tcadbsync(TCADB *adb){$/;"	f
tcadbtdbqrygetout	tcadb.c	/^static int tcadbtdbqrygetout(const void *pkbuf, int pksiz, TCMAP *cols, void *op){$/;"	f	file:
tcadbtranabort	tcadb.c	/^bool tcadbtranabort(TCADB *adb){$/;"	f
tcadbtranbegin	tcadb.c	/^bool tcadbtranbegin(TCADB *adb){$/;"	f
tcadbtrancommit	tcadb.c	/^bool tcadbtrancommit(TCADB *adb){$/;"	f
tcadbvanish	tcadb.c	/^bool tcadbvanish(TCADB *adb){$/;"	f
tcadbvsiz	tcadb.c	/^int tcadbvsiz(TCADB *adb, const void *kbuf, int ksiz){$/;"	f
tcadbvsiz2	tcadb.c	/^int tcadbvsiz2(TCADB *adb, const char *kstr){$/;"	f
tcarccipher	tcutil.c	/^void tcarccipher(const void *ptr, int size, const void *kbuf, int ksiz, void *obuf){$/;"	f
tcatof	tcutil.c	/^double tcatof(const char *str){$/;"	f
tcatoi	tcutil.c	/^int64_t tcatoi(const char *str){$/;"	f
tcatoih	tcutil.c	/^int64_t tcatoih(const char *str){$/;"	f
tcatoix	tcutil.c	/^int64_t tcatoix(const char *str){$/;"	f
tcbasedecode	tcutil.c	/^char *tcbasedecode(const char *str, int *sp){$/;"	f
tcbaseencode	tcutil.c	/^char *tcbaseencode(const char *ptr, int size){$/;"	f
tcbdbadddouble	tcbdb.c	/^double tcbdbadddouble(TCBDB *bdb, const void *kbuf, int ksiz, double num){$/;"	f
tcbdbaddint	tcbdb.c	/^int tcbdbaddint(TCBDB *bdb, const void *kbuf, int ksiz, int num){$/;"	f
tcbdbalign	tcbdb.c	/^uint32_t tcbdbalign(TCBDB *bdb){$/;"	f
tcbdbbnum	tcbdb.c	/^uint64_t tcbdbbnum(TCBDB *bdb){$/;"	f
tcbdbbnumused	tcbdb.c	/^uint64_t tcbdbbnumused(TCBDB *bdb){$/;"	f
tcbdbcacheadjust	tcbdb.c	/^static bool tcbdbcacheadjust(TCBDB *bdb){$/;"	f	file:
tcbdbcacheclear	tcbdb.c	/^bool tcbdbcacheclear(TCBDB *bdb){$/;"	f
tcbdbcachepurge	tcbdb.c	/^static void tcbdbcachepurge(TCBDB *bdb){$/;"	f	file:
tcbdbclear	tcbdb.c	/^static void tcbdbclear(TCBDB *bdb){$/;"	f	file:
tcbdbclose	tcbdb.c	/^bool tcbdbclose(TCBDB *bdb){$/;"	f
tcbdbcloseimpl	tcbdb.c	/^static bool tcbdbcloseimpl(TCBDB *bdb){$/;"	f	file:
tcbdbcmpdecimal	tcutil.h	4171;"	d
tcbdbcmpfunc	tcbdb.c	/^TCCMP tcbdbcmpfunc(TCBDB *bdb){$/;"	f
tcbdbcmpint32	tcutil.h	4172;"	d
tcbdbcmpint64	tcutil.h	4173;"	d
tcbdbcmplexical	tcutil.h	4170;"	d
tcbdbcmpop	tcbdb.c	/^void *tcbdbcmpop(TCBDB *bdb){$/;"	f
tcbdbcopy	tcbdb.c	/^bool tcbdbcopy(TCBDB *bdb, const char *path){$/;"	f
tcbdbcuradjust	tcbdb.c	/^static bool tcbdbcuradjust(BDBCUR *cur, bool forward){$/;"	f	file:
tcbdbcurdel	tcbdb.c	/^void tcbdbcurdel(BDBCUR *cur){$/;"	f
tcbdbcurfirst	tcbdb.c	/^bool tcbdbcurfirst(BDBCUR *cur){$/;"	f
tcbdbcurfirstimpl	tcbdb.c	/^static bool tcbdbcurfirstimpl(BDBCUR *cur){$/;"	f	file:
tcbdbcurjump	tcbdb.c	/^bool tcbdbcurjump(BDBCUR *cur, const void *kbuf, int ksiz){$/;"	f
tcbdbcurjump2	tcbdb.c	/^bool tcbdbcurjump2(BDBCUR *cur, const char *kstr){$/;"	f
tcbdbcurjumpback	tcbdb.c	/^bool tcbdbcurjumpback(BDBCUR *cur, const void *kbuf, int ksiz){$/;"	f
tcbdbcurjumpback2	tcbdb.c	/^bool tcbdbcurjumpback2(BDBCUR *cur, const char *kstr){$/;"	f
tcbdbcurjumpimpl	tcbdb.c	/^static bool tcbdbcurjumpimpl(BDBCUR *cur, const char *kbuf, int ksiz, bool forward){$/;"	f	file:
tcbdbcurkey	tcbdb.c	/^void *tcbdbcurkey(BDBCUR *cur, int *sp){$/;"	f
tcbdbcurkey2	tcbdb.c	/^char *tcbdbcurkey2(BDBCUR *cur){$/;"	f
tcbdbcurkey3	tcbdb.c	/^const void *tcbdbcurkey3(BDBCUR *cur, int *sp){$/;"	f
tcbdbcurlast	tcbdb.c	/^bool tcbdbcurlast(BDBCUR *cur){$/;"	f
tcbdbcurlastimpl	tcbdb.c	/^static bool tcbdbcurlastimpl(BDBCUR *cur){$/;"	f	file:
tcbdbcurnew	tcbdb.c	/^BDBCUR *tcbdbcurnew(TCBDB *bdb){$/;"	f
tcbdbcurnext	tcbdb.c	/^bool tcbdbcurnext(BDBCUR *cur){$/;"	f
tcbdbcurnextimpl	tcbdb.c	/^static bool tcbdbcurnextimpl(BDBCUR *cur){$/;"	f	file:
tcbdbcurout	tcbdb.c	/^bool tcbdbcurout(BDBCUR *cur){$/;"	f
tcbdbcuroutimpl	tcbdb.c	/^static bool tcbdbcuroutimpl(BDBCUR *cur){$/;"	f	file:
tcbdbcurprev	tcbdb.c	/^bool tcbdbcurprev(BDBCUR *cur){$/;"	f
tcbdbcurprevimpl	tcbdb.c	/^static bool tcbdbcurprevimpl(BDBCUR *cur){$/;"	f	file:
tcbdbcurput	tcbdb.c	/^bool tcbdbcurput(BDBCUR *cur, const void *vbuf, int vsiz, int cpmode){$/;"	f
tcbdbcurput2	tcbdb.c	/^bool tcbdbcurput2(BDBCUR *cur, const char *vstr, int cpmode){$/;"	f
tcbdbcurputimpl	tcbdb.c	/^static bool tcbdbcurputimpl(BDBCUR *cur, const char *vbuf, int vsiz, int cpmode){$/;"	f	file:
tcbdbcurrec	tcbdb.c	/^bool tcbdbcurrec(BDBCUR *cur, TCXSTR *kxstr, TCXSTR *vxstr){$/;"	f
tcbdbcurrecimpl	tcbdb.c	/^static bool tcbdbcurrecimpl(BDBCUR *cur, const char **kbp, int *ksp, const char **vbp, int *vsp){$/;"	f	file:
tcbdbcurval	tcbdb.c	/^void *tcbdbcurval(BDBCUR *cur, int *sp){$/;"	f
tcbdbcurval2	tcbdb.c	/^char *tcbdbcurval2(BDBCUR *cur){$/;"	f
tcbdbcurval3	tcbdb.c	/^const void *tcbdbcurval3(BDBCUR *cur, int *sp){$/;"	f
tcbdbdbgfd	tcbdb.c	/^int tcbdbdbgfd(TCBDB *bdb){$/;"	f
tcbdbdefrag	tcbdb.c	/^bool tcbdbdefrag(TCBDB *bdb, int64_t step){$/;"	f
tcbdbdel	tcbdb.c	/^void tcbdbdel(TCBDB *bdb){$/;"	f
tcbdbdfunit	tcbdb.c	/^uint32_t tcbdbdfunit(TCBDB *bdb){$/;"	f
tcbdbdumpmeta	tcbdb.c	/^static void tcbdbdumpmeta(TCBDB *bdb){$/;"	f	file:
tcbdbecode	tcbdb.c	/^int tcbdbecode(TCBDB *bdb){$/;"	f
tcbdberrmsg	tcbdb.c	/^const char *tcbdberrmsg(int ecode){$/;"	f
tcbdbfbpmax	tcbdb.c	/^uint32_t tcbdbfbpmax(TCBDB *bdb){$/;"	f
tcbdbflags	tcbdb.c	/^uint8_t tcbdbflags(TCBDB *bdb){$/;"	f
tcbdbforeach	tcbdb.c	/^bool tcbdbforeach(TCBDB *bdb, TCITER iter, void *op){$/;"	f
tcbdbforeachimpl	tcbdb.c	/^static bool tcbdbforeachimpl(TCBDB *bdb, TCITER iter, void *op){$/;"	f	file:
tcbdbfsiz	tcbdb.c	/^uint64_t tcbdbfsiz(TCBDB *bdb){$/;"	f
tcbdbfwmkeys	tcbdb.c	/^TCLIST *tcbdbfwmkeys(TCBDB *bdb, const void *pbuf, int psiz, int max){$/;"	f
tcbdbfwmkeys2	tcbdb.c	/^TCLIST *tcbdbfwmkeys2(TCBDB *bdb, const char *pstr, int max){$/;"	f
tcbdbget	tcbdb.c	/^void *tcbdbget(TCBDB *bdb, const void *kbuf, int ksiz, int *sp){$/;"	f
tcbdbget2	tcbdb.c	/^char *tcbdbget2(TCBDB *bdb, const char *kstr){$/;"	f
tcbdbget3	tcbdb.c	/^const void *tcbdbget3(TCBDB *bdb, const void *kbuf, int ksiz, int *sp){$/;"	f
tcbdbget4	tcbdb.c	/^TCLIST *tcbdbget4(TCBDB *bdb, const void *kbuf, int ksiz){$/;"	f
tcbdbgethistleaf	tcbdb.c	/^static BDBLEAF *tcbdbgethistleaf(TCBDB *bdb, const char *kbuf, int ksiz, uint64_t id){$/;"	f	file:
tcbdbgetimpl	tcbdb.c	/^static const char *tcbdbgetimpl(TCBDB *bdb, const char *kbuf, int ksiz, int *sp){$/;"	f	file:
tcbdbgetlist	tcbdb.c	/^static TCLIST *tcbdbgetlist(TCBDB *bdb, const char *kbuf, int ksiz){$/;"	f	file:
tcbdbgetnum	tcbdb.c	/^static int tcbdbgetnum(TCBDB *bdb, const char *kbuf, int ksiz){$/;"	f	file:
tcbdbhasmutex	tcbdb.c	/^bool tcbdbhasmutex(TCBDB *bdb){$/;"	f
tcbdbinode	tcbdb.c	/^uint64_t tcbdbinode(TCBDB *bdb){$/;"	f
tcbdbleafaddrec	tcbdb.c	/^static bool tcbdbleafaddrec(TCBDB *bdb, BDBLEAF *leaf, int dmode,$/;"	f	file:
tcbdbleafcacheout	tcbdb.c	/^static bool tcbdbleafcacheout(TCBDB *bdb, BDBLEAF *leaf){$/;"	f	file:
tcbdbleafcheck	tcbdb.c	/^static bool tcbdbleafcheck(TCBDB *bdb, uint64_t id){$/;"	f	file:
tcbdbleafdivide	tcbdb.c	/^static BDBLEAF *tcbdbleafdivide(TCBDB *bdb, BDBLEAF *leaf){$/;"	f	file:
tcbdbleafkill	tcbdb.c	/^static bool tcbdbleafkill(TCBDB *bdb, BDBLEAF *leaf){$/;"	f	file:
tcbdbleafload	tcbdb.c	/^static BDBLEAF *tcbdbleafload(TCBDB *bdb, uint64_t id){$/;"	f	file:
tcbdbleafnew	tcbdb.c	/^static BDBLEAF *tcbdbleafnew(TCBDB *bdb, uint64_t prev, uint64_t next){$/;"	f	file:
tcbdbleafsave	tcbdb.c	/^static bool tcbdbleafsave(TCBDB *bdb, BDBLEAF *leaf){$/;"	f	file:
tcbdblmemb	tcbdb.c	/^uint32_t tcbdblmemb(TCBDB *bdb){$/;"	f
tcbdblnum	tcbdb.c	/^uint64_t tcbdblnum(TCBDB *bdb){$/;"	f
tcbdbloadmeta	tcbdb.c	/^static void tcbdbloadmeta(TCBDB *bdb){$/;"	f	file:
tcbdblockcache	tcbdb.c	/^static bool tcbdblockcache(TCBDB *bdb){$/;"	f	file:
tcbdblockmethod	tcbdb.c	/^static bool tcbdblockmethod(TCBDB *bdb, bool wr){$/;"	f	file:
tcbdbmemsync	tcbdb.c	/^bool tcbdbmemsync(TCBDB *bdb, bool phys){$/;"	f
tcbdbmtime	tcbdb.c	/^time_t tcbdbmtime(TCBDB *bdb){$/;"	f
tcbdbnew	tcbdb.c	/^TCBDB *tcbdbnew(void){$/;"	f
tcbdbnmemb	tcbdb.c	/^uint32_t tcbdbnmemb(TCBDB *bdb){$/;"	f
tcbdbnnum	tcbdb.c	/^uint64_t tcbdbnnum(TCBDB *bdb){$/;"	f
tcbdbnodeaddidx	tcbdb.c	/^static void tcbdbnodeaddidx(TCBDB *bdb, BDBNODE *node, bool order, uint64_t pid,$/;"	f	file:
tcbdbnodecacheout	tcbdb.c	/^static bool tcbdbnodecacheout(TCBDB *bdb, BDBNODE *node){$/;"	f	file:
tcbdbnodeload	tcbdb.c	/^static BDBNODE *tcbdbnodeload(TCBDB *bdb, uint64_t id){$/;"	f	file:
tcbdbnodenew	tcbdb.c	/^static BDBNODE *tcbdbnodenew(TCBDB *bdb, uint64_t heir){$/;"	f	file:
tcbdbnodesave	tcbdb.c	/^static bool tcbdbnodesave(TCBDB *bdb, BDBNODE *node){$/;"	f	file:
tcbdbnodesubidx	tcbdb.c	/^static bool tcbdbnodesubidx(TCBDB *bdb, BDBNODE *node, uint64_t pid){$/;"	f	file:
tcbdbopaque	tcbdb.c	/^char *tcbdbopaque(TCBDB *bdb){$/;"	f
tcbdbopen	tcbdb.c	/^bool tcbdbopen(TCBDB *bdb, const char *path, int omode){$/;"	f
tcbdbopenimpl	tcbdb.c	/^static bool tcbdbopenimpl(TCBDB *bdb, const char *path, int omode){$/;"	f	file:
tcbdboptimize	tcbdb.c	/^bool tcbdboptimize(TCBDB *bdb, int32_t lmemb, int32_t nmemb,$/;"	f
tcbdboptimizeimpl	tcbdb.c	/^static bool tcbdboptimizeimpl(TCBDB *bdb, int32_t lmemb, int32_t nmemb,$/;"	f	file:
tcbdbopts	tcbdb.c	/^uint8_t tcbdbopts(TCBDB *bdb){$/;"	f
tcbdbout	tcbdb.c	/^bool tcbdbout(TCBDB *bdb, const void *kbuf, int ksiz){$/;"	f
tcbdbout2	tcbdb.c	/^bool tcbdbout2(TCBDB *bdb, const char *kstr){$/;"	f
tcbdbout3	tcbdb.c	/^bool tcbdbout3(TCBDB *bdb, const void *kbuf, int ksiz){$/;"	f
tcbdboutimpl	tcbdb.c	/^static bool tcbdboutimpl(TCBDB *bdb, const char *kbuf, int ksiz){$/;"	f	file:
tcbdboutlist	tcbdb.c	/^static bool tcbdboutlist(TCBDB *bdb, const char *kbuf, int ksiz){$/;"	f	file:
tcbdbpath	tcbdb.c	/^const char *tcbdbpath(TCBDB *bdb){$/;"	f
tcbdbprintleaf	tcbdb.c	/^void tcbdbprintleaf(TCBDB *bdb, BDBLEAF *leaf){$/;"	f
tcbdbprintmeta	tcbdb.c	/^void tcbdbprintmeta(TCBDB *bdb){$/;"	f
tcbdbprintnode	tcbdb.c	/^void tcbdbprintnode(TCBDB *bdb, BDBNODE *node){$/;"	f
tcbdbput	tcbdb.c	/^bool tcbdbput(TCBDB *bdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcbdbput2	tcbdb.c	/^bool tcbdbput2(TCBDB *bdb, const char *kstr, const char *vstr){$/;"	f
tcbdbputcat	tcbdb.c	/^bool tcbdbputcat(TCBDB *bdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcbdbputcat2	tcbdb.c	/^bool tcbdbputcat2(TCBDB *bdb, const char *kstr, const char *vstr){$/;"	f
tcbdbputdup	tcbdb.c	/^bool tcbdbputdup(TCBDB *bdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcbdbputdup2	tcbdb.c	/^bool tcbdbputdup2(TCBDB *bdb, const char *kstr, const char *vstr){$/;"	f
tcbdbputdup3	tcbdb.c	/^bool tcbdbputdup3(TCBDB *bdb, const void *kbuf, int ksiz, const TCLIST *vals){$/;"	f
tcbdbputdupback	tcbdb.c	/^bool tcbdbputdupback(TCBDB *bdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcbdbputdupback2	tcbdb.c	/^bool tcbdbputdupback2(TCBDB *bdb, const char *kstr, const char *vstr){$/;"	f
tcbdbputimpl	tcbdb.c	/^static bool tcbdbputimpl(TCBDB *bdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz,$/;"	f	file:
tcbdbputkeep	tcbdb.c	/^bool tcbdbputkeep(TCBDB *bdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcbdbputkeep2	tcbdb.c	/^bool tcbdbputkeep2(TCBDB *bdb, const char *kstr, const char *vstr){$/;"	f
tcbdbputproc	tcbdb.c	/^bool tcbdbputproc(TCBDB *bdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz,$/;"	f
tcbdbrange	tcbdb.c	/^TCLIST *tcbdbrange(TCBDB *bdb, const void *bkbuf, int bksiz, bool binc,$/;"	f
tcbdbrange2	tcbdb.c	/^TCLIST *tcbdbrange2(TCBDB *bdb, const char *bkstr, bool binc,$/;"	f
tcbdbrange3	tcutil.h	4169;"	d
tcbdbrangefwm	tcbdb.c	/^static bool tcbdbrangefwm(TCBDB *bdb, const char *pbuf, int psiz, int max, TCLIST *keys){$/;"	f	file:
tcbdbrangeimpl	tcbdb.c	/^static bool tcbdbrangeimpl(TCBDB *bdb, const char *bkbuf, int bksiz, bool binc,$/;"	f	file:
tcbdbremoverec	tcbdb.c	/^static void tcbdbremoverec(TCBDB *bdb, BDBLEAF *leaf, BDBREC *rec, int ri){$/;"	f	file:
tcbdbrnum	tcbdb.c	/^uint64_t tcbdbrnum(TCBDB *bdb){$/;"	f
tcbdbsearchleaf	tcbdb.c	/^static uint64_t tcbdbsearchleaf(TCBDB *bdb, const char *kbuf, int ksiz){$/;"	f	file:
tcbdbsearchrec	tcbdb.c	/^static BDBREC *tcbdbsearchrec(TCBDB *bdb, BDBLEAF *leaf, const char *kbuf, int ksiz, int *ip){$/;"	f	file:
tcbdbsetcache	tcbdb.c	/^bool tcbdbsetcache(TCBDB *bdb, int32_t lcnum, int32_t ncnum){$/;"	f
tcbdbsetcapnum	tcbdb.c	/^bool tcbdbsetcapnum(TCBDB *bdb, uint64_t capnum){$/;"	f
tcbdbsetcmpfunc	tcbdb.c	/^bool tcbdbsetcmpfunc(TCBDB *bdb, TCCMP cmp, void *cmpop){$/;"	f
tcbdbsetcodecfunc	tcbdb.c	/^bool tcbdbsetcodecfunc(TCBDB *bdb, TCCODEC enc, void *encop, TCCODEC dec, void *decop){$/;"	f
tcbdbsetdbgfd	tcbdb.c	/^void tcbdbsetdbgfd(TCBDB *bdb, int fd){$/;"	f
tcbdbsetdfunit	tcbdb.c	/^bool tcbdbsetdfunit(TCBDB *bdb, int32_t dfunit){$/;"	f
tcbdbsetecode	tcbdb.c	/^void tcbdbsetecode(TCBDB *bdb, int ecode, const char *filename, int line, const char *func){$/;"	f
tcbdbsetlsmax	tcbdb.c	/^bool tcbdbsetlsmax(TCBDB *bdb, uint32_t lsmax){$/;"	f
tcbdbsetmutex	tcbdb.c	/^bool tcbdbsetmutex(TCBDB *bdb){$/;"	f
tcbdbsetxmsiz	tcbdb.c	/^bool tcbdbsetxmsiz(TCBDB *bdb, int64_t xmsiz){$/;"	f
tcbdbsync	tcbdb.c	/^bool tcbdbsync(TCBDB *bdb){$/;"	f
tcbdbtranabort	tcbdb.c	/^bool tcbdbtranabort(TCBDB *bdb){$/;"	f
tcbdbtranbegin	tcbdb.c	/^bool tcbdbtranbegin(TCBDB *bdb){$/;"	f
tcbdbtrancommit	tcbdb.c	/^bool tcbdbtrancommit(TCBDB *bdb){$/;"	f
tcbdbtune	tcbdb.c	/^bool tcbdbtune(TCBDB *bdb, int32_t lmemb, int32_t nmemb,$/;"	f
tcbdbunlockcache	tcbdb.c	/^static bool tcbdbunlockcache(TCBDB *bdb){$/;"	f	file:
tcbdbunlockmethod	tcbdb.c	/^static bool tcbdbunlockmethod(TCBDB *bdb){$/;"	f	file:
tcbdbvanish	tcbdb.c	/^bool tcbdbvanish(TCBDB *bdb){$/;"	f
tcbdbvanishimpl	tcbdb.c	/^static bool tcbdbvanishimpl(TCBDB *bdb){$/;"	f	file:
tcbdbvnum	tcbdb.c	/^int tcbdbvnum(TCBDB *bdb, const void *kbuf, int ksiz){$/;"	f
tcbdbvnum2	tcbdb.c	/^int tcbdbvnum2(TCBDB *bdb, const char *kstr){$/;"	f
tcbdbvsiz	tcbdb.c	/^int tcbdbvsiz(TCBDB *bdb, const void *kbuf, int ksiz){$/;"	f
tcbdbvsiz2	tcbdb.c	/^int tcbdbvsiz2(TCBDB *bdb, const char *kstr){$/;"	f
tcberdecode	tcutil.c	/^unsigned int *tcberdecode(const char *ptr, int size, int *np){$/;"	f
tcberencode	tcutil.c	/^char *tcberencode(const unsigned int *ary, int anum, int *sp){$/;"	f
tcbsdecode	tcutil.c	/^char *tcbsdecode(const char *ptr, int size, int *sp){$/;"	f
tcbsencode	tcutil.c	/^char *tcbsencode(const char *ptr, int size, int *sp){$/;"	f
tcbwtdecode	tcutil.c	/^char *tcbwtdecode(const char *ptr, int size, int idx){$/;"	f
tcbwtencode	tcutil.c	/^char *tcbwtencode(const char *ptr, int size, int *idxp){$/;"	f
tcbwtsearchrec	tcutil.c	/^static int tcbwtsearchrec(TCBWTREC *array, int anum, int tchr){$/;"	f	file:
tcbwtsortchrcount	tcutil.c	/^static void tcbwtsortchrcount(unsigned char *str, int len){$/;"	f	file:
tcbwtsortchrinsert	tcutil.c	/^static void tcbwtsortchrinsert(unsigned char *str, int len){$/;"	f	file:
tcbwtsortreccount	tcutil.c	/^static void tcbwtsortreccount(TCBWTREC *array, int anum){$/;"	f	file:
tcbwtsortrecinsert	tcutil.c	/^static void tcbwtsortrecinsert(TCBWTREC *array, int anum){$/;"	f	file:
tcbwtsortstrcount	tcutil.c	/^static void tcbwtsortstrcount(const char **arrays, int anum, int len, int level){$/;"	f	file:
tcbwtsortstrheap	tcutil.c	/^static void tcbwtsortstrheap(const char **arrays, int anum, int len, int skip){$/;"	f	file:
tcbwtsortstrinsert	tcutil.c	/^static void tcbwtsortstrinsert(const char **arrays, int anum, int len, int skip){$/;"	f	file:
tcbzipdecode	tcutil.c	/^char *tcbzipdecode(const char *ptr, int size, int *sp){$/;"	f
tcbzipencode	tcutil.c	/^char *tcbzipencode(const char *ptr, int size, int *sp){$/;"	f
tccalendar	tcutil.c	/^void tccalendar(int64_t t, int jl, int *yearp, int *monp, int *dayp,$/;"	f
tccalloc	tcutil.c	/^void *tccalloc(size_t nmemb, size_t size){$/;"	f
tcchidxcmp	tcutil.c	/^static int tcchidxcmp(const void *a, const void *b){$/;"	f	file:
tcchidxdel	tcutil.c	/^void tcchidxdel(TCCHIDX *chidx){$/;"	f
tcchidxhash	tcutil.c	/^int tcchidxhash(TCCHIDX *chidx, const void *ptr, int size){$/;"	f
tcchidxnew	tcutil.c	/^TCCHIDX *tcchidxnew(int range){$/;"	f
tccmpdecimal	tcutil.c	/^int tccmpdecimal(const char *aptr, int asiz, const char *bptr, int bsiz, void *op){$/;"	f
tccmpint32	tcutil.c	/^int tccmpint32(const char *aptr, int asiz, const char *bptr, int bsiz, void *op){$/;"	f
tccmpint64	tcutil.c	/^int tccmpint64(const char *aptr, int asiz, const char *bptr, int bsiz, void *op){$/;"	f
tccmplexical	tcutil.c	/^int tccmplexical(const char *aptr, int asiz, const char *bptr, int bsiz, void *op){$/;"	f
tccopyfile	tcutil.c	/^bool tccopyfile(const char *src, const char *dest){$/;"	f
tccstrescape	tcutil.c	/^char *tccstrescape(const char *str){$/;"	f
tccstrunescape	tcutil.c	/^char *tccstrunescape(const char *str){$/;"	f
tcdatestrhttp	tcutil.c	/^void tcdatestrhttp(int64_t t, int jl, char *buf){$/;"	f
tcdatestrwww	tcutil.c	/^void tcdatestrwww(int64_t t, int jl, char *buf){$/;"	f
tcdayofweek	tcutil.c	/^int tcdayofweek(int year, int mon, int day){$/;"	f
tcdeflate	tcutil.c	/^char *tcdeflate(const char *ptr, int size, int *sp){$/;"	f
tcdrand	tcutil.c	/^double tcdrand(void){$/;"	f
tcdrandnd	tcutil.c	/^double tcdrandnd(double avg, double sd){$/;"	f
tcerrmsg	tcutil.c	/^const char *tcerrmsg(int ecode){$/;"	f
tcfatalfunc	tcutil.c	/^void (*tcfatalfunc)(const char *message) = NULL;$/;"	v
tcfbpsortbyoff	tchdb.c	/^static void tcfbpsortbyoff(HDBFB *fbpool, int fbpnum){$/;"	f	file:
tcfbpsortbyrsiz	tchdb.c	/^static void tcfbpsortbyrsiz(HDBFB *fbpool, int fbpnum){$/;"	f	file:
tcfdbadddouble	tcfdb.c	/^double tcfdbadddouble(TCFDB *fdb, int64_t id, double num){$/;"	f
tcfdbaddint	tcfdb.c	/^int tcfdbaddint(TCFDB *fdb, int64_t id, int num){$/;"	f
tcfdbclear	tcfdb.c	/^static void tcfdbclear(TCFDB *fdb){$/;"	f	file:
tcfdbclose	tcfdb.c	/^bool tcfdbclose(TCFDB *fdb){$/;"	f
tcfdbcloseimpl	tcfdb.c	/^static bool tcfdbcloseimpl(TCFDB *fdb){$/;"	f	file:
tcfdbcopy	tcfdb.c	/^bool tcfdbcopy(TCFDB *fdb, const char *path){$/;"	f
tcfdbcopyimpl	tcfdb.c	/^static bool tcfdbcopyimpl(TCFDB *fdb, const char *path){$/;"	f	file:
tcfdbdbgfd	tcfdb.c	/^int tcfdbdbgfd(TCFDB *fdb){$/;"	f
tcfdbdel	tcfdb.c	/^void tcfdbdel(TCFDB *fdb){$/;"	f
tcfdbdumpmeta	tcfdb.c	/^static void tcfdbdumpmeta(TCFDB *fdb, char *hbuf){$/;"	f	file:
tcfdbecode	tcfdb.c	/^int tcfdbecode(TCFDB *fdb){$/;"	f
tcfdberrmsg	tcfdb.c	/^const char *tcfdberrmsg(int ecode){$/;"	f
tcfdbflags	tcfdb.c	/^uint8_t tcfdbflags(TCFDB *fdb){$/;"	f
tcfdbforeach	tcfdb.c	/^bool tcfdbforeach(TCFDB *fdb, TCITER iter, void *op){$/;"	f
tcfdbforeachimpl	tcfdb.c	/^static bool tcfdbforeachimpl(TCFDB *fdb, TCITER iter, void *op){$/;"	f	file:
tcfdbfsiz	tcfdb.c	/^uint64_t tcfdbfsiz(TCFDB *fdb){$/;"	f
tcfdbget	tcfdb.c	/^void *tcfdbget(TCFDB *fdb, int64_t id, int *sp){$/;"	f
tcfdbget2	tcfdb.c	/^void *tcfdbget2(TCFDB *fdb, const void *kbuf, int ksiz, int *sp){$/;"	f
tcfdbget3	tcfdb.c	/^char *tcfdbget3(TCFDB *fdb, const char *kstr){$/;"	f
tcfdbget4	tcfdb.c	/^int tcfdbget4(TCFDB *fdb, int64_t id, void *vbuf, int max){$/;"	f
tcfdbgetimpl	tcfdb.c	/^static const void *tcfdbgetimpl(TCFDB *fdb, int64_t id, int *sp){$/;"	f	file:
tcfdbhasmutex	tcfdb.c	/^bool tcfdbhasmutex(TCFDB *fdb){$/;"	f
tcfdbinode	tcfdb.c	/^uint64_t tcfdbinode(TCFDB *fdb){$/;"	f
tcfdbiterinit	tcfdb.c	/^bool tcfdbiterinit(TCFDB *fdb){$/;"	f
tcfdbiterinit2	tcfdb.c	/^bool tcfdbiterinit2(TCFDB *fdb, int64_t id){$/;"	f
tcfdbiterinit3	tcfdb.c	/^bool tcfdbiterinit3(TCFDB *fdb, const void *kbuf, int ksiz){$/;"	f
tcfdbiterinit4	tcfdb.c	/^bool tcfdbiterinit4(TCFDB *fdb, const char *kstr){$/;"	f
tcfdbiterinitimpl	tcfdb.c	/^static bool tcfdbiterinitimpl(TCFDB *fdb){$/;"	f	file:
tcfdbiterjumpimpl	tcfdb.c	/^static bool tcfdbiterjumpimpl(TCFDB *fdb, int64_t id){$/;"	f	file:
tcfdbiternext	tcfdb.c	/^uint64_t tcfdbiternext(TCFDB *fdb){$/;"	f
tcfdbiternext2	tcfdb.c	/^void *tcfdbiternext2(TCFDB *fdb, int *sp){$/;"	f
tcfdbiternext3	tcfdb.c	/^char *tcfdbiternext3(TCFDB *fdb){$/;"	f
tcfdbiternextimpl	tcfdb.c	/^static uint64_t tcfdbiternextimpl(TCFDB *fdb){$/;"	f	file:
tcfdbkeytoid	tcfdb.c	/^int64_t tcfdbkeytoid(const char *kbuf, int ksiz){$/;"	f
tcfdblimid	tcfdb.c	/^uint64_t tcfdblimid(TCFDB *fdb){$/;"	f
tcfdblimsiz	tcfdb.c	/^uint64_t tcfdblimsiz(TCFDB *fdb){$/;"	f
tcfdbloadmeta	tcfdb.c	/^static void tcfdbloadmeta(TCFDB *fdb, const char *hbuf){$/;"	f	file:
tcfdblockallrecords	tcfdb.c	/^static bool tcfdblockallrecords(TCFDB *fdb, bool wr){$/;"	f	file:
tcfdblockattr	tcfdb.c	/^static bool tcfdblockattr(TCFDB *fdb){$/;"	f	file:
tcfdblockmethod	tcfdb.c	/^static bool tcfdblockmethod(TCFDB *fdb, bool wr){$/;"	f	file:
tcfdblockrecord	tcfdb.c	/^static bool tcfdblockrecord(TCFDB *fdb, bool wr, uint64_t id){$/;"	f	file:
tcfdblockwal	tcfdb.c	/^static bool tcfdblockwal(TCFDB *fdb){$/;"	f	file:
tcfdbmax	tcfdb.c	/^uint64_t tcfdbmax(TCFDB *fdb){$/;"	f
tcfdbmemsync	tcfdb.c	/^bool tcfdbmemsync(TCFDB *fdb, bool phys){$/;"	f
tcfdbmin	tcfdb.c	/^uint64_t tcfdbmin(TCFDB *fdb){$/;"	f
tcfdbmtime	tcfdb.c	/^time_t tcfdbmtime(TCFDB *fdb){$/;"	f
tcfdbnew	tcfdb.c	/^TCFDB *tcfdbnew(void){$/;"	f
tcfdbnextid	tcfdb.c	/^static int64_t tcfdbnextid(TCFDB *fdb, int64_t id){$/;"	f	file:
tcfdbomode	tcfdb.c	/^int tcfdbomode(TCFDB *fdb){$/;"	f
tcfdbopaque	tcfdb.c	/^char *tcfdbopaque(TCFDB *fdb){$/;"	f
tcfdbopen	tcfdb.c	/^bool tcfdbopen(TCFDB *fdb, const char *path, int omode){$/;"	f
tcfdbopenimpl	tcfdb.c	/^static bool tcfdbopenimpl(TCFDB *fdb, const char *path, int omode){$/;"	f	file:
tcfdboptimize	tcfdb.c	/^bool tcfdboptimize(TCFDB *fdb, int32_t width, int64_t limsiz){$/;"	f
tcfdboptimizeimpl	tcfdb.c	/^static bool tcfdboptimizeimpl(TCFDB *fdb, int32_t width, int64_t limsiz){$/;"	f	file:
tcfdbout	tcfdb.c	/^bool tcfdbout(TCFDB *fdb, int64_t id){$/;"	f
tcfdbout2	tcfdb.c	/^bool tcfdbout2(TCFDB *fdb, const void *kbuf, int ksiz){$/;"	f
tcfdbout3	tcfdb.c	/^bool tcfdbout3(TCFDB *fdb, const char *kstr){$/;"	f
tcfdboutimpl	tcfdb.c	/^static bool tcfdboutimpl(TCFDB *fdb, int64_t id){$/;"	f	file:
tcfdbpath	tcfdb.c	/^const char *tcfdbpath(TCFDB *fdb){$/;"	f
tcfdbprevid	tcfdb.c	/^static int64_t tcfdbprevid(TCFDB *fdb, int64_t id){$/;"	f	file:
tcfdbprintmeta	tcfdb.c	/^void tcfdbprintmeta(TCFDB *fdb){$/;"	f
tcfdbput	tcfdb.c	/^bool tcfdbput(TCFDB *fdb, int64_t id, const void *vbuf, int vsiz){$/;"	f
tcfdbput2	tcfdb.c	/^bool tcfdbput2(TCFDB *fdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcfdbput3	tcfdb.c	/^bool tcfdbput3(TCFDB *fdb, const char *kstr, const void *vstr){$/;"	f
tcfdbputcat	tcfdb.c	/^bool tcfdbputcat(TCFDB *fdb, int64_t id, const void *vbuf, int vsiz){$/;"	f
tcfdbputcat2	tcfdb.c	/^bool tcfdbputcat2(TCFDB *fdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcfdbputcat3	tcfdb.c	/^bool tcfdbputcat3(TCFDB *fdb, const char *kstr, const void *vstr){$/;"	f
tcfdbputimpl	tcfdb.c	/^static bool tcfdbputimpl(TCFDB *fdb, int64_t id, const void *vbuf, int vsiz, int dmode){$/;"	f	file:
tcfdbputkeep	tcfdb.c	/^bool tcfdbputkeep(TCFDB *fdb, int64_t id, const void *vbuf, int vsiz){$/;"	f
tcfdbputkeep2	tcfdb.c	/^bool tcfdbputkeep2(TCFDB *fdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcfdbputkeep3	tcfdb.c	/^bool tcfdbputkeep3(TCFDB *fdb, const char *kstr, const void *vstr){$/;"	f
tcfdbputproc	tcfdb.c	/^bool tcfdbputproc(TCFDB *fdb, int64_t id, const void *vbuf, int vsiz, TCPDPROC proc, void *op){$/;"	f
tcfdbrange	tcfdb.c	/^uint64_t *tcfdbrange(TCFDB *fdb, int64_t lower, int64_t upper, int max, int *np){$/;"	f
tcfdbrange2	tcfdb.c	/^TCLIST *tcfdbrange2(TCFDB *fdb, const void *lbuf, int lsiz, const void *ubuf, int usiz, int max){$/;"	f
tcfdbrange3	tcfdb.c	/^TCLIST *tcfdbrange3(TCFDB *fdb, const char *lstr, const char *ustr, int max){$/;"	f
tcfdbrange4	tcfdb.c	/^TCLIST *tcfdbrange4(TCFDB *fdb, const void *ibuf, int isiz, int max){$/;"	f
tcfdbrange5	tcfdb.c	/^TCLIST *tcfdbrange5(TCFDB *fdb, const void *istr, int max){$/;"	f
tcfdbrangeimpl	tcfdb.c	/^static uint64_t *tcfdbrangeimpl(TCFDB *fdb, int64_t lower, int64_t upper, int max, int *np){$/;"	f	file:
tcfdbrnum	tcfdb.c	/^uint64_t tcfdbrnum(TCFDB *fdb){$/;"	f
tcfdbsetdbgfd	tcfdb.c	/^void tcfdbsetdbgfd(TCFDB *fdb, int fd){$/;"	f
tcfdbsetecode	tcfdb.c	/^void tcfdbsetecode(TCFDB *fdb, int ecode, const char *filename, int line, const char *func){$/;"	f
tcfdbsetflag	tcfdb.c	/^static void tcfdbsetflag(TCFDB *fdb, int flag, bool sign){$/;"	f	file:
tcfdbsetmutex	tcfdb.c	/^bool tcfdbsetmutex(TCFDB *fdb){$/;"	f
tcfdbsync	tcfdb.c	/^bool tcfdbsync(TCFDB *fdb){$/;"	f
tcfdbtranabort	tcfdb.c	/^bool tcfdbtranabort(TCFDB *fdb){$/;"	f
tcfdbtranbegin	tcfdb.c	/^bool tcfdbtranbegin(TCFDB *fdb){$/;"	f
tcfdbtrancommit	tcfdb.c	/^bool tcfdbtrancommit(TCFDB *fdb){$/;"	f
tcfdbtune	tcfdb.c	/^bool tcfdbtune(TCFDB *fdb, int32_t width, int64_t limsiz){$/;"	f
tcfdbtype	tcfdb.c	/^uint8_t tcfdbtype(TCFDB *fdb){$/;"	f
tcfdbunlockallrecords	tcfdb.c	/^static bool tcfdbunlockallrecords(TCFDB *fdb){$/;"	f	file:
tcfdbunlockattr	tcfdb.c	/^static bool tcfdbunlockattr(TCFDB *fdb){$/;"	f	file:
tcfdbunlockmethod	tcfdb.c	/^static bool tcfdbunlockmethod(TCFDB *fdb){$/;"	f	file:
tcfdbunlockrecord	tcfdb.c	/^static bool tcfdbunlockrecord(TCFDB *fdb, uint64_t id){$/;"	f	file:
tcfdbunlockwal	tcfdb.c	/^static bool tcfdbunlockwal(TCFDB *fdb){$/;"	f	file:
tcfdbvanish	tcfdb.c	/^bool tcfdbvanish(TCFDB *fdb){$/;"	f
tcfdbvanishimpl	tcfdb.c	/^static bool tcfdbvanishimpl(TCFDB *fdb){$/;"	f	file:
tcfdbvsiz	tcfdb.c	/^int tcfdbvsiz(TCFDB *fdb, int64_t id){$/;"	f
tcfdbvsiz2	tcfdb.c	/^int tcfdbvsiz2(TCFDB *fdb, const void *kbuf, int ksiz){$/;"	f
tcfdbvsiz3	tcfdb.c	/^int tcfdbvsiz3(TCFDB *fdb, const char *kstr){$/;"	f
tcfdbwalinit	tcfdb.c	/^static bool tcfdbwalinit(TCFDB *fdb){$/;"	f	file:
tcfdbwalremove	tcfdb.c	/^static bool tcfdbwalremove(TCFDB *fdb, const char *path){$/;"	f	file:
tcfdbwalrestore	tcfdb.c	/^static int tcfdbwalrestore(TCFDB *fdb, const char *path){$/;"	f	file:
tcfdbwalwrite	tcfdb.c	/^static bool tcfdbwalwrite(TCFDB *fdb, uint64_t off, int64_t size){$/;"	f	file:
tcfdbwidth	tcfdb.c	/^uint32_t tcfdbwidth(TCFDB *fdb){$/;"	f
tcfree	tcutil.c	/^void tcfree(void *ptr){$/;"	f
tcgammadecode	tcutil.c	/^static int tcgammadecode(const char *ptr, int size, char *obuf){$/;"	f	file:
tcgammaencode	tcutil.c	/^static int tcgammaencode(const char *ptr, int size, char *obuf){$/;"	f	file:
tcgeneric_t	tcutil.h	/^typedef union { int32_t i; int64_t l; double d; void *p; TCCMP f; } tcgeneric_t;$/;"	t	typeref:union:__anon99
tcgetcrc	tcutil.c	/^unsigned int tcgetcrc(const char *ptr, int size){$/;"	f
tcgetprime	tchdb.c	/^static uint64_t tcgetprime(uint64_t num){$/;"	f	file:
tcglobaldestroy	tcutil.c	/^static void tcglobaldestroy(void){$/;"	f	file:
tcglobalinit	tcutil.c	/^static void tcglobalinit(void){$/;"	f	file:
tcglobalmemorypool	tcutil.c	/^TCMPOOL *tcglobalmemorypool = NULL;$/;"	v
tcglobalmutex	tcutil.c	/^static pthread_rwlock_t tcglobalmutex;$/;"	v	file:
tcglobalmutexlock	tcutil.c	/^bool tcglobalmutexlock(void){$/;"	f
tcglobalmutexlockshared	tcutil.c	/^bool tcglobalmutexlockshared(void){$/;"	f
tcglobalmutexunlock	tcutil.c	/^bool tcglobalmutexunlock(void){$/;"	f
tcglobalonce	tcutil.c	/^static pthread_once_t tcglobalonce = PTHREAD_ONCE_INIT;$/;"	v	file:
tcglobpat	tcutil.c	/^TCLIST *tcglobpat(const char *pattern){$/;"	f
tcgzipdecode	tcutil.c	/^char *tcgzipdecode(const char *ptr, int size, int *sp){$/;"	f
tcgzipencode	tcutil.c	/^char *tcgzipencode(const char *ptr, int size, int *sp){$/;"	f
tchdbadddouble	tchdb.c	/^double tchdbadddouble(TCHDB *hdb, const void *kbuf, int ksiz, double num){$/;"	f
tchdbaddint	tchdb.c	/^int tchdbaddint(TCHDB *hdb, const void *kbuf, int ksiz, int num){$/;"	f
tchdbalign	tchdb.c	/^uint32_t tchdbalign(TCHDB *hdb){$/;"	f
tchdbbidx	tchdb.c	/^static uint64_t tchdbbidx(TCHDB *hdb, const char *kbuf, int ksiz, uint8_t *hp){$/;"	f	file:
tchdbbnum	tchdb.c	/^uint64_t tchdbbnum(TCHDB *hdb){$/;"	f
tchdbbnumused	tchdb.c	/^uint64_t tchdbbnumused(TCHDB *hdb){$/;"	f
tchdbcacheadjust	tchdb.c	/^static void tchdbcacheadjust(TCHDB *hdb){$/;"	f	file:
tchdbcacheclear	tchdb.c	/^bool tchdbcacheclear(TCHDB *hdb){$/;"	f
tchdbclear	tchdb.c	/^static void tchdbclear(TCHDB *hdb){$/;"	f	file:
tchdbclose	tchdb.c	/^bool tchdbclose(TCHDB *hdb){$/;"	f
tchdbcloseimpl	tchdb.c	/^static bool tchdbcloseimpl(TCHDB *hdb){$/;"	f	file:
tchdbcodecfunc	tchdb.c	/^void tchdbcodecfunc(TCHDB *hdb, TCCODEC *ep, void **eop, TCCODEC *dp, void **dop){$/;"	f
tchdbcopy	tchdb.c	/^bool tchdbcopy(TCHDB *hdb, const char *path){$/;"	f
tchdbcopyimpl	tchdb.c	/^static bool tchdbcopyimpl(TCHDB *hdb, const char *path){$/;"	f	file:
tchdbdbgfd	tchdb.c	/^int tchdbdbgfd(TCHDB *hdb){$/;"	f
tchdbdefrag	tchdb.c	/^bool tchdbdefrag(TCHDB *hdb, int64_t step){$/;"	f
tchdbdefragimpl	tchdb.c	/^static bool tchdbdefragimpl(TCHDB *hdb, int64_t step){$/;"	f	file:
tchdbdel	tchdb.c	/^void tchdbdel(TCHDB *hdb){$/;"	f
tchdbdfunit	tchdb.c	/^uint32_t tchdbdfunit(TCHDB *hdb){$/;"	f
tchdbdrpappend	tchdb.c	/^static void tchdbdrpappend(TCHDB *hdb, const char *kbuf, int ksiz, const char *vbuf, int vsiz,$/;"	f	file:
tchdbdumpmeta	tchdb.c	/^static void tchdbdumpmeta(TCHDB *hdb, char *hbuf){$/;"	f	file:
tchdbecode	tchdb.c	/^int tchdbecode(TCHDB *hdb){$/;"	f
tchdberrmsg	tchdb.c	/^const char *tchdberrmsg(int ecode){$/;"	f
tchdbfbpinsert	tchdb.c	/^static void tchdbfbpinsert(TCHDB *hdb, uint64_t off, uint32_t rsiz){$/;"	f	file:
tchdbfbpmax	tchdb.c	/^uint32_t tchdbfbpmax(TCHDB *hdb){$/;"	f
tchdbfbpmerge	tchdb.c	/^static void tchdbfbpmerge(TCHDB *hdb){$/;"	f	file:
tchdbfbpsearch	tchdb.c	/^static bool tchdbfbpsearch(TCHDB *hdb, TCHREC *rec){$/;"	f	file:
tchdbfbpsplice	tchdb.c	/^static bool tchdbfbpsplice(TCHDB *hdb, TCHREC *rec, uint32_t nsiz){$/;"	f	file:
tchdbfbptrim	tchdb.c	/^static void tchdbfbptrim(TCHDB *hdb, uint64_t base, uint64_t next, uint64_t off, uint32_t rsiz){$/;"	f	file:
tchdbflags	tchdb.c	/^uint8_t tchdbflags(TCHDB *hdb){$/;"	f
tchdbflushdrp	tchdb.c	/^static bool tchdbflushdrp(TCHDB *hdb){$/;"	f	file:
tchdbforeach	tchdb.c	/^bool tchdbforeach(TCHDB *hdb, TCITER iter, void *op){$/;"	f
tchdbforeachimpl	tchdb.c	/^static bool tchdbforeachimpl(TCHDB *hdb, TCITER iter, void *op){$/;"	f	file:
tchdbfsiz	tchdb.c	/^uint64_t tchdbfsiz(TCHDB *hdb){$/;"	f
tchdbfwmkeys	tchdb.c	/^TCLIST *tchdbfwmkeys(TCHDB *hdb, const void *pbuf, int psiz, int max){$/;"	f
tchdbfwmkeys2	tchdb.c	/^TCLIST *tchdbfwmkeys2(TCHDB *hdb, const char *pstr, int max){$/;"	f
tchdbget	tchdb.c	/^void *tchdbget(TCHDB *hdb, const void *kbuf, int ksiz, int *sp){$/;"	f
tchdbget2	tchdb.c	/^char *tchdbget2(TCHDB *hdb, const char *kstr){$/;"	f
tchdbget3	tchdb.c	/^int tchdbget3(TCHDB *hdb, const void *kbuf, int ksiz, void *vbuf, int max){$/;"	f
tchdbgetbucket	tchdb.c	/^static off_t tchdbgetbucket(TCHDB *hdb, uint64_t bidx){$/;"	f	file:
tchdbgetimpl	tchdb.c	/^static char *tchdbgetimpl(TCHDB *hdb, const char *kbuf, int ksiz, uint64_t bidx, uint8_t hash,$/;"	f	file:
tchdbgetintobuf	tchdb.c	/^static int tchdbgetintobuf(TCHDB *hdb, const char *kbuf, int ksiz, uint64_t bidx, uint8_t hash,$/;"	f	file:
tchdbgetnext	tchdb.c	/^void *tchdbgetnext(TCHDB *hdb, const void *kbuf, int ksiz, int *sp){$/;"	f
tchdbgetnext2	tchdb.c	/^char *tchdbgetnext2(TCHDB *hdb, const char *kstr){$/;"	f
tchdbgetnext3	tchdb.c	/^char *tchdbgetnext3(TCHDB *hdb, const char *kbuf, int ksiz, int *sp, const char **vbp, int *vsp){$/;"	f
tchdbgetnextimpl	tchdb.c	/^static char *tchdbgetnextimpl(TCHDB *hdb, const char *kbuf, int ksiz, int *sp,$/;"	f	file:
tchdbhasmutex	tchdb.c	/^bool tchdbhasmutex(TCHDB *hdb){$/;"	f
tchdbinode	tchdb.c	/^uint64_t tchdbinode(TCHDB *hdb){$/;"	f
tchdbiterinit	tchdb.c	/^bool tchdbiterinit(TCHDB *hdb){$/;"	f
tchdbiterinit2	tchdb.c	/^bool tchdbiterinit2(TCHDB *hdb, const void *kbuf, int ksiz){$/;"	f
tchdbiterinit3	tchdb.c	/^bool tchdbiterinit3(TCHDB *hdb, const char *kstr){$/;"	f
tchdbiterinitimpl	tchdb.c	/^static bool tchdbiterinitimpl(TCHDB *hdb){$/;"	f	file:
tchdbiterjumpimpl	tchdb.c	/^static bool tchdbiterjumpimpl(TCHDB *hdb, const char *kbuf, int ksiz){$/;"	f	file:
tchdbiternext	tchdb.c	/^void *tchdbiternext(TCHDB *hdb, int *sp){$/;"	f
tchdbiternext2	tchdb.c	/^char *tchdbiternext2(TCHDB *hdb){$/;"	f
tchdbiternext3	tchdb.c	/^bool tchdbiternext3(TCHDB *hdb, TCXSTR *kxstr, TCXSTR *vxstr){$/;"	f
tchdbiternextimpl	tchdb.c	/^static char *tchdbiternextimpl(TCHDB *hdb, int *sp){$/;"	f	file:
tchdbiternextintoxstr	tchdb.c	/^static bool tchdbiternextintoxstr(TCHDB *hdb, TCXSTR *kxstr, TCXSTR *vxstr){$/;"	f	file:
tchdbloadfbp	tchdb.c	/^static bool tchdbloadfbp(TCHDB *hdb){$/;"	f	file:
tchdbloadmeta	tchdb.c	/^static void tchdbloadmeta(TCHDB *hdb, const char *hbuf){$/;"	f	file:
tchdblockallrecords	tchdb.c	/^static bool tchdblockallrecords(TCHDB *hdb, bool wr){$/;"	f	file:
tchdblockdb	tchdb.c	/^static bool tchdblockdb(TCHDB *hdb){$/;"	f	file:
tchdblockmethod	tchdb.c	/^static bool tchdblockmethod(TCHDB *hdb, bool wr){$/;"	f	file:
tchdblockrecord	tchdb.c	/^static bool tchdblockrecord(TCHDB *hdb, uint8_t bidx, bool wr){$/;"	f	file:
tchdblockwal	tchdb.c	/^static bool tchdblockwal(TCHDB *hdb){$/;"	f	file:
tchdbmemsync	tchdb.c	/^bool tchdbmemsync(TCHDB *hdb, bool phys){$/;"	f
tchdbmtime	tchdb.c	/^time_t tchdbmtime(TCHDB *hdb){$/;"	f
tchdbnew	tchdb.c	/^TCHDB *tchdbnew(void){$/;"	f
tchdbomode	tchdb.c	/^int tchdbomode(TCHDB *hdb){$/;"	f
tchdbopaque	tchdb.c	/^char *tchdbopaque(TCHDB *hdb){$/;"	f
tchdbopen	tchdb.c	/^bool tchdbopen(TCHDB *hdb, const char *path, int omode){$/;"	f
tchdbopenimpl	tchdb.c	/^static bool tchdbopenimpl(TCHDB *hdb, const char *path, int omode){$/;"	f	file:
tchdboptimize	tchdb.c	/^bool tchdboptimize(TCHDB *hdb, int64_t bnum, int8_t apow, int8_t fpow, uint8_t opts){$/;"	f
tchdboptimizeimpl	tchdb.c	/^static bool tchdboptimizeimpl(TCHDB *hdb, int64_t bnum, int8_t apow, int8_t fpow, uint8_t opts){$/;"	f	file:
tchdbopts	tchdb.c	/^uint8_t tchdbopts(TCHDB *hdb){$/;"	f
tchdbout	tchdb.c	/^bool tchdbout(TCHDB *hdb, const void *kbuf, int ksiz){$/;"	f
tchdbout2	tchdb.c	/^bool tchdbout2(TCHDB *hdb, const char *kstr){$/;"	f
tchdboutimpl	tchdb.c	/^static bool tchdboutimpl(TCHDB *hdb, const char *kbuf, int ksiz, uint64_t bidx, uint8_t hash){$/;"	f	file:
tchdbpadsize	tchdb.c	/^static int32_t tchdbpadsize(TCHDB *hdb, uint64_t off){$/;"	f	file:
tchdbpath	tchdb.c	/^const char *tchdbpath(TCHDB *hdb){$/;"	f
tchdbprintmeta	tchdb.c	/^void tchdbprintmeta(TCHDB *hdb){$/;"	f
tchdbprintrec	tchdb.c	/^void tchdbprintrec(TCHDB *hdb, TCHREC *rec){$/;"	f
tchdbput	tchdb.c	/^bool tchdbput(TCHDB *hdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tchdbput2	tchdb.c	/^bool tchdbput2(TCHDB *hdb, const char *kstr, const char *vstr){$/;"	f
tchdbputasync	tchdb.c	/^bool tchdbputasync(TCHDB *hdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tchdbputasync2	tchdb.c	/^bool tchdbputasync2(TCHDB *hdb, const char *kstr, const char *vstr){$/;"	f
tchdbputasyncimpl	tchdb.c	/^static bool tchdbputasyncimpl(TCHDB *hdb, const char *kbuf, int ksiz, uint64_t bidx,$/;"	f	file:
tchdbputcat	tchdb.c	/^bool tchdbputcat(TCHDB *hdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tchdbputcat2	tchdb.c	/^bool tchdbputcat2(TCHDB *hdb, const char *kstr, const char *vstr){$/;"	f
tchdbputimpl	tchdb.c	/^static bool tchdbputimpl(TCHDB *hdb, const char *kbuf, int ksiz, uint64_t bidx, uint8_t hash,$/;"	f	file:
tchdbputkeep	tchdb.c	/^bool tchdbputkeep(TCHDB *hdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tchdbputkeep2	tchdb.c	/^bool tchdbputkeep2(TCHDB *hdb, const char *kstr, const char *vstr){$/;"	f
tchdbputproc	tchdb.c	/^bool tchdbputproc(TCHDB *hdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz,$/;"	f
tchdbreadrec	tchdb.c	/^static bool tchdbreadrec(TCHDB *hdb, TCHREC *rec, char *rbuf){$/;"	f	file:
tchdbreadrecbody	tchdb.c	/^static bool tchdbreadrecbody(TCHDB *hdb, TCHREC *rec){$/;"	f	file:
tchdbremoverec	tchdb.c	/^static bool tchdbremoverec(TCHDB *hdb, TCHREC *rec, char *rbuf, uint64_t bidx, off_t entoff){$/;"	f	file:
tchdbrnum	tchdb.c	/^uint64_t tchdbrnum(TCHDB *hdb){$/;"	f
tchdbsavefbp	tchdb.c	/^static bool tchdbsavefbp(TCHDB *hdb){$/;"	f	file:
tchdbseekread	tchdb.c	/^static bool tchdbseekread(TCHDB *hdb, off_t off, void *buf, size_t size){$/;"	f	file:
tchdbseekreadtry	tchdb.c	/^static bool tchdbseekreadtry(TCHDB *hdb, off_t off, void *buf, size_t size){$/;"	f	file:
tchdbseekwrite	tchdb.c	/^static bool tchdbseekwrite(TCHDB *hdb, off_t off, const void *buf, size_t size){$/;"	f	file:
tchdbsetbucket	tchdb.c	/^static void tchdbsetbucket(TCHDB *hdb, uint64_t bidx, uint64_t off){$/;"	f	file:
tchdbsetcache	tchdb.c	/^bool tchdbsetcache(TCHDB *hdb, int32_t rcnum){$/;"	f
tchdbsetcodecfunc	tchdb.c	/^bool tchdbsetcodecfunc(TCHDB *hdb, TCCODEC enc, void *encop, TCCODEC dec, void *decop){$/;"	f
tchdbsetdbgfd	tchdb.c	/^void tchdbsetdbgfd(TCHDB *hdb, int fd){$/;"	f
tchdbsetdfunit	tchdb.c	/^bool tchdbsetdfunit(TCHDB *hdb, int32_t dfunit){$/;"	f
tchdbsetecode	tchdb.c	/^void tchdbsetecode(TCHDB *hdb, int ecode, const char *filename, int line, const char *func){$/;"	f
tchdbsetflag	tchdb.c	/^static void tchdbsetflag(TCHDB *hdb, int flag, bool sign){$/;"	f	file:
tchdbsetmutex	tchdb.c	/^bool tchdbsetmutex(TCHDB *hdb){$/;"	f
tchdbsettype	tchdb.c	/^void tchdbsettype(TCHDB *hdb, uint8_t type){$/;"	f
tchdbsetxmsiz	tchdb.c	/^bool tchdbsetxmsiz(TCHDB *hdb, int64_t xmsiz){$/;"	f
tchdbshiftrec	tchdb.c	/^static bool tchdbshiftrec(TCHDB *hdb, TCHREC *rec, char *rbuf, off_t destoff){$/;"	f	file:
tchdbsync	tchdb.c	/^bool tchdbsync(TCHDB *hdb){$/;"	f
tchdbtranabort	tchdb.c	/^bool tchdbtranabort(TCHDB *hdb){$/;"	f
tchdbtranbegin	tchdb.c	/^bool tchdbtranbegin(TCHDB *hdb){$/;"	f
tchdbtrancommit	tchdb.c	/^bool tchdbtrancommit(TCHDB *hdb){$/;"	f
tchdbtranvoid	tchdb.c	/^bool tchdbtranvoid(TCHDB *hdb){$/;"	f
tchdbtune	tchdb.c	/^bool tchdbtune(TCHDB *hdb, int64_t bnum, int8_t apow, int8_t fpow, uint8_t opts){$/;"	f
tchdbtype	tchdb.c	/^uint8_t tchdbtype(TCHDB *hdb){$/;"	f
tchdbunlockallrecords	tchdb.c	/^static bool tchdbunlockallrecords(TCHDB *hdb){$/;"	f	file:
tchdbunlockdb	tchdb.c	/^static bool tchdbunlockdb(TCHDB *hdb){$/;"	f	file:
tchdbunlockmethod	tchdb.c	/^static bool tchdbunlockmethod(TCHDB *hdb){$/;"	f	file:
tchdbunlockrecord	tchdb.c	/^static bool tchdbunlockrecord(TCHDB *hdb, uint8_t bidx){$/;"	f	file:
tchdbunlockwal	tchdb.c	/^static bool tchdbunlockwal(TCHDB *hdb){$/;"	f	file:
tchdbvanish	tchdb.c	/^bool tchdbvanish(TCHDB *hdb){$/;"	f
tchdbvanishimpl	tchdb.c	/^static bool tchdbvanishimpl(TCHDB *hdb){$/;"	f	file:
tchdbvsiz	tchdb.c	/^int tchdbvsiz(TCHDB *hdb, const void *kbuf, int ksiz){$/;"	f
tchdbvsiz2	tchdb.c	/^int tchdbvsiz2(TCHDB *hdb, const char *kstr){$/;"	f
tchdbvsizimpl	tchdb.c	/^static int tchdbvsizimpl(TCHDB *hdb, const char *kbuf, int ksiz, uint64_t bidx, uint8_t hash){$/;"	f	file:
tchdbwalinit	tchdb.c	/^static bool tchdbwalinit(TCHDB *hdb){$/;"	f	file:
tchdbwalremove	tchdb.c	/^static bool tchdbwalremove(TCHDB *hdb, const char *path){$/;"	f	file:
tchdbwalrestore	tchdb.c	/^static int tchdbwalrestore(TCHDB *hdb, const char *path){$/;"	f	file:
tchdbwalwrite	tchdb.c	/^static bool tchdbwalwrite(TCHDB *hdb, uint64_t off, int64_t size){$/;"	f	file:
tchdbwritefb	tchdb.c	/^static bool tchdbwritefb(TCHDB *hdb, uint64_t off, uint32_t rsiz){$/;"	f	file:
tchdbwriterec	tchdb.c	/^static bool tchdbwriterec(TCHDB *hdb, TCHREC *rec, uint64_t bidx, off_t entoff){$/;"	f	file:
tchdbxmsiz	tchdb.c	/^uint64_t tchdbxmsiz(TCHDB *hdb){$/;"	f
tchexdecode	tcutil.c	/^char *tchexdecode(const char *str, int *sp){$/;"	f
tchexencode	tcutil.c	/^char *tchexencode(const char *ptr, int size){$/;"	f
tchr	tcutil.c	/^  int tchr;                              \/\/ character code of the last character$/;"	m	struct:__anon80	file:
tcinflate	tcutil.c	/^char *tcinflate(const char *ptr, int size, int *sp){$/;"	f
tcjetlag	tcutil.c	/^int tcjetlag(void){$/;"	f
tcjsonescape	tcutil.c	/^char *tcjsonescape(const char *str){$/;"	f
tcjsonunescape	tcutil.c	/^char *tcjsonunescape(const char *str){$/;"	f
tclistbsearch	tcutil.c	/^int tclistbsearch(const TCLIST *list, const void *ptr, int size){$/;"	f
tclistclear	tcutil.c	/^void tclistclear(TCLIST *list){$/;"	f
tclistdel	tcutil.c	/^void tclistdel(TCLIST *list){$/;"	f
tclistdump	tcutil.c	/^void *tclistdump(const TCLIST *list, int *sp){$/;"	f
tclistdup	tcutil.c	/^TCLIST *tclistdup(const TCLIST *list){$/;"	f
tclistelemcmp	tcutil.c	/^static int tclistelemcmp(const void *a, const void *b){$/;"	f	file:
tclistelemcmpci	tcutil.c	/^static int tclistelemcmpci(const void *a, const void *b){$/;"	f	file:
tclistinsert	tcutil.c	/^void tclistinsert(TCLIST *list, int index, const void *ptr, int size){$/;"	f
tclistinsert2	tcutil.c	/^void tclistinsert2(TCLIST *list, int index, const char *str){$/;"	f
tclistinvert	tcutil.c	/^void tclistinvert(TCLIST *list){$/;"	f
tclistload	tcutil.c	/^TCLIST *tclistload(const void *ptr, int size){$/;"	f
tclistlsearch	tcutil.c	/^int tclistlsearch(const TCLIST *list, const void *ptr, int size){$/;"	f
tclistnew	tcutil.c	/^TCLIST *tclistnew(void){$/;"	f
tclistnew2	tcutil.c	/^TCLIST *tclistnew2(int anum){$/;"	f
tclistnew3	tcutil.c	/^TCLIST *tclistnew3(const char *str, ...){$/;"	f
tclistnum	tcutil.c	/^int tclistnum(const TCLIST *list){$/;"	f
tclistover	tcutil.c	/^void tclistover(TCLIST *list, int index, const void *ptr, int size){$/;"	f
tclistover2	tcutil.c	/^void tclistover2(TCLIST *list, int index, const char *str){$/;"	f
tclistpop	tcutil.c	/^void *tclistpop(TCLIST *list, int *sp){$/;"	f
tclistpop2	tcutil.c	/^char *tclistpop2(TCLIST *list){$/;"	f
tclistprintf	tcutil.c	/^void tclistprintf(TCLIST *list, const char *format, ...){$/;"	f
tclistpush	tcutil.c	/^void tclistpush(TCLIST *list, const void *ptr, int size){$/;"	f
tclistpush2	tcutil.c	/^void tclistpush2(TCLIST *list, const char *str){$/;"	f
tclistpushlist	tcutil.c	/^void tclistpushlist(TCLIST *list, const TCLIST *obj){$/;"	f
tclistpushmalloc	tcutil.c	/^void tclistpushmalloc(TCLIST *list, void *ptr, int size){$/;"	f
tclistpushmap	tcutil.c	/^void tclistpushmap(TCLIST *list, const TCMAP *obj){$/;"	f
tclistremove	tcutil.c	/^void *tclistremove(TCLIST *list, int index, int *sp){$/;"	f
tclistremove2	tcutil.c	/^char *tclistremove2(TCLIST *list, int index){$/;"	f
tclistshift	tcutil.c	/^void *tclistshift(TCLIST *list, int *sp){$/;"	f
tclistshift2	tcutil.c	/^char *tclistshift2(TCLIST *list){$/;"	f
tclistsort	tcutil.c	/^void tclistsort(TCLIST *list){$/;"	f
tclistsortci	tcutil.c	/^void tclistsortci(TCLIST *list){$/;"	f
tclistsortex	tcutil.c	/^void tclistsortex(TCLIST *list, int (*cmp)(const TCLISTDATUM *, const TCLISTDATUM *)){$/;"	f
tclistunshift	tcutil.c	/^void tclistunshift(TCLIST *list, const void *ptr, int size){$/;"	f
tclistunshift2	tcutil.c	/^void tclistunshift2(TCLIST *list, const char *str){$/;"	f
tclistval	tcutil.c	/^const void *tclistval(const TCLIST *list, int index, int *sp){$/;"	f
tclistval2	tcutil.c	/^const char *tclistval2(const TCLIST *list, int index){$/;"	f
tclmax	tcutil.c	/^long tclmax(long a, long b){$/;"	f
tclmin	tcutil.c	/^long tclmin(long a, long b){$/;"	f
tclock	tcutil.c	/^bool tclock(int fd, bool ex, bool nb){$/;"	f
tclog2d	tcutil.c	/^double tclog2d(double num){$/;"	f
tclog2l	tcutil.c	/^long tclog2l(long num){$/;"	f
tclrand	tcutil.c	/^unsigned long tclrand(void){$/;"	f
tcmalloc	tcutil.c	/^void *tcmalloc(size_t size){$/;"	f
tcmapadddouble	tcutil.c	/^double tcmapadddouble(TCMAP *map, const void *kbuf, int ksiz, double num){$/;"	f
tcmapaddint	tcutil.c	/^int tcmapaddint(TCMAP *map, const void *kbuf, int ksiz, int num){$/;"	f
tcmapclear	tcutil.c	/^void tcmapclear(TCMAP *map){$/;"	f
tcmapcutfront	tcutil.c	/^void tcmapcutfront(TCMAP *map, int num){$/;"	f
tcmapdel	tcutil.c	/^void tcmapdel(TCMAP *map){$/;"	f
tcmapdump	tcutil.c	/^void *tcmapdump(const TCMAP *map, int *sp){$/;"	f
tcmapdup	tcutil.c	/^TCMAP *tcmapdup(const TCMAP *map){$/;"	f
tcmapget	tcutil.c	/^const void *tcmapget(const TCMAP *map, const void *kbuf, int ksiz, int *sp){$/;"	f
tcmapget2	tcutil.c	/^const char *tcmapget2(const TCMAP *map, const char *kstr){$/;"	f
tcmapget3	tcutil.c	/^const void *tcmapget3(TCMAP *map, const void *kbuf, int ksiz, int *sp){$/;"	f
tcmapget4	tcutil.c	/^const char *tcmapget4(TCMAP *map, const char *kstr, const char *dstr){$/;"	f
tcmapiterinit	tcutil.c	/^void tcmapiterinit(TCMAP *map){$/;"	f
tcmapiterinit2	tcutil.c	/^void tcmapiterinit2(TCMAP *map, const void *kbuf, int ksiz){$/;"	f
tcmapiterinit3	tcutil.c	/^void tcmapiterinit3(TCMAP *map, const char *kstr){$/;"	f
tcmapiternext	tcutil.c	/^const void *tcmapiternext(TCMAP *map, int *sp){$/;"	f
tcmapiternext2	tcutil.c	/^const char *tcmapiternext2(TCMAP *map){$/;"	f
tcmapiterval	tcutil.c	/^const void *tcmapiterval(const void *kbuf, int *sp){$/;"	f
tcmapiterval2	tcutil.c	/^const char *tcmapiterval2(const char *kstr){$/;"	f
tcmapkeys	tcutil.c	/^TCLIST *tcmapkeys(const TCMAP *map){$/;"	f
tcmapkeys2	tcutil.c	/^const char **tcmapkeys2(const TCMAP *map, int *np){$/;"	f
tcmapload	tcutil.c	/^TCMAP *tcmapload(const void *ptr, int size){$/;"	f
tcmaploadone	tcutil.c	/^void *tcmaploadone(const void *ptr, int size, const void *kbuf, int ksiz, int *sp){$/;"	f
tcmapmove	tcutil.c	/^bool tcmapmove(TCMAP *map, const void *kbuf, int ksiz, bool head){$/;"	f
tcmapmove2	tcutil.c	/^bool tcmapmove2(TCMAP *map, const char *kstr, bool head){$/;"	f
tcmapmsiz	tcutil.c	/^uint64_t tcmapmsiz(const TCMAP *map){$/;"	f
tcmapnew	tcutil.c	/^TCMAP *tcmapnew(void){$/;"	f
tcmapnew2	tcutil.c	/^TCMAP *tcmapnew2(uint32_t bnum){$/;"	f
tcmapnew3	tcutil.c	/^TCMAP *tcmapnew3(const char *str, ...){$/;"	f
tcmapout	tcutil.c	/^bool tcmapout(TCMAP *map, const void *kbuf, int ksiz){$/;"	f
tcmapout2	tcutil.c	/^bool tcmapout2(TCMAP *map, const char *kstr){$/;"	f
tcmapprintf	tcutil.c	/^void tcmapprintf(TCMAP *map, const char *kstr, const char *format, ...){$/;"	f
tcmapput	tcutil.c	/^void tcmapput(TCMAP *map, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcmapput2	tcutil.c	/^void tcmapput2(TCMAP *map, const char *kstr, const char *vstr){$/;"	f
tcmapput3	tcutil.c	/^void tcmapput3(TCMAP *map, const void *kbuf, int ksiz, const char *vbuf, int vsiz){$/;"	f
tcmapput4	tcutil.c	/^void tcmapput4(TCMAP *map, const void *kbuf, int ksiz,$/;"	f
tcmapputcat	tcutil.c	/^void tcmapputcat(TCMAP *map, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcmapputcat2	tcutil.c	/^void tcmapputcat2(TCMAP *map, const char *kstr, const char *vstr){$/;"	f
tcmapputcat3	tcutil.c	/^void tcmapputcat3(TCMAP *map, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcmapputkeep	tcutil.c	/^bool tcmapputkeep(TCMAP *map, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcmapputkeep2	tcutil.c	/^bool tcmapputkeep2(TCMAP *map, const char *kstr, const char *vstr){$/;"	f
tcmapputlist	tcutil.c	/^void tcmapputlist(TCMAP *map, const char *kstr, const TCLIST *obj){$/;"	f
tcmapputmap	tcutil.c	/^void tcmapputmap(TCMAP *map, const char *kstr, const TCMAP *obj){$/;"	f
tcmapputproc	tcutil.c	/^bool tcmapputproc(TCMAP *map, const void *kbuf, int ksiz, const void *vbuf, int vsiz,$/;"	f
tcmaprnum	tcutil.c	/^uint64_t tcmaprnum(const TCMAP *map){$/;"	f
tcmapvals	tcutil.c	/^TCLIST *tcmapvals(const TCMAP *map){$/;"	f
tcmapvals2	tcutil.c	/^const char **tcmapvals2(const TCMAP *map, int *np){$/;"	f
tcmd5hash	tcutil.c	/^void tcmd5hash(const void *ptr, int size, char *buf){$/;"	f
tcmdbadddouble	tcutil.c	/^double tcmdbadddouble(TCMDB *mdb, const void *kbuf, int ksiz, double num){$/;"	f
tcmdbaddint	tcutil.c	/^int tcmdbaddint(TCMDB *mdb, const void *kbuf, int ksiz, int num){$/;"	f
tcmdbcutfront	tcutil.c	/^void tcmdbcutfront(TCMDB *mdb, int num){$/;"	f
tcmdbdel	tcutil.c	/^void tcmdbdel(TCMDB *mdb){$/;"	f
tcmdbforeach	tcutil.c	/^void tcmdbforeach(TCMDB *mdb, TCITER iter, void *op){$/;"	f
tcmdbfwmkeys	tcutil.c	/^TCLIST *tcmdbfwmkeys(TCMDB *mdb, const void *pbuf, int psiz, int max){$/;"	f
tcmdbfwmkeys2	tcutil.c	/^TCLIST *tcmdbfwmkeys2(TCMDB *mdb, const char *pstr, int max){$/;"	f
tcmdbget	tcutil.c	/^void *tcmdbget(TCMDB *mdb, const void *kbuf, int ksiz, int *sp){$/;"	f
tcmdbget2	tcutil.c	/^char *tcmdbget2(TCMDB *mdb, const char *kstr){$/;"	f
tcmdbget3	tcutil.c	/^void *tcmdbget3(TCMDB *mdb, const void *kbuf, int ksiz, int *sp){$/;"	f
tcmdbiterinit	tcutil.c	/^void tcmdbiterinit(TCMDB *mdb){$/;"	f
tcmdbiterinit2	tcutil.c	/^void tcmdbiterinit2(TCMDB *mdb, const void *kbuf, int ksiz){$/;"	f
tcmdbiterinit3	tcutil.c	/^void tcmdbiterinit3(TCMDB *mdb, const char *kstr){$/;"	f
tcmdbiternext	tcutil.c	/^void *tcmdbiternext(TCMDB *mdb, int *sp){$/;"	f
tcmdbiternext2	tcutil.c	/^char *tcmdbiternext2(TCMDB *mdb){$/;"	f
tcmdbmsiz	tcutil.c	/^uint64_t tcmdbmsiz(TCMDB *mdb){$/;"	f
tcmdbnew	tcutil.c	/^TCMDB *tcmdbnew(void){$/;"	f
tcmdbnew2	tcutil.c	/^TCMDB *tcmdbnew2(uint32_t bnum){$/;"	f
tcmdbout	tcutil.c	/^bool tcmdbout(TCMDB *mdb, const void *kbuf, int ksiz){$/;"	f
tcmdbout2	tcutil.c	/^bool tcmdbout2(TCMDB *mdb, const char *kstr){$/;"	f
tcmdbput	tcutil.c	/^void tcmdbput(TCMDB *mdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcmdbput2	tcutil.c	/^void tcmdbput2(TCMDB *mdb, const char *kstr, const char *vstr){$/;"	f
tcmdbput3	tcutil.c	/^void tcmdbput3(TCMDB *mdb, const void *kbuf, int ksiz, const char *vbuf, int vsiz){$/;"	f
tcmdbput4	tcutil.c	/^void tcmdbput4(TCMDB *mdb, const void *kbuf, int ksiz,$/;"	f
tcmdbputcat	tcutil.c	/^void tcmdbputcat(TCMDB *mdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcmdbputcat2	tcutil.c	/^void tcmdbputcat2(TCMDB *mdb, const char *kstr, const char *vstr){$/;"	f
tcmdbputcat3	tcutil.c	/^void tcmdbputcat3(TCMDB *mdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcmdbputkeep	tcutil.c	/^bool tcmdbputkeep(TCMDB *mdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcmdbputkeep2	tcutil.c	/^bool tcmdbputkeep2(TCMDB *mdb, const char *kstr, const char *vstr){$/;"	f
tcmdbputproc	tcutil.c	/^bool tcmdbputproc(TCMDB *mdb, const void *kbuf, int ksiz, const void *vbuf, int vsiz,$/;"	f
tcmdbrnum	tcutil.c	/^uint64_t tcmdbrnum(TCMDB *mdb){$/;"	f
tcmdbvanish	tcutil.c	/^void tcmdbvanish(TCMDB *mdb){$/;"	f
tcmdbvsiz	tcutil.c	/^int tcmdbvsiz(TCMDB *mdb, const void *kbuf, int ksiz){$/;"	f
tcmdbvsiz2	tcutil.c	/^int tcmdbvsiz2(TCMDB *mdb, const char *kstr){$/;"	f
tcmemdup	tcutil.c	/^void *tcmemdup(const void *ptr, size_t size){$/;"	f
tcmimebreak	tcutil.c	/^char *tcmimebreak(const char *ptr, int size, TCMAP *headers, int *sp){$/;"	f
tcmimedecode	tcutil.c	/^char *tcmimedecode(const char *str, char *enp){$/;"	f
tcmimeencode	tcutil.c	/^char *tcmimeencode(const char *str, const char *encname, bool base){$/;"	f
tcmimeparts	tcutil.c	/^TCLIST *tcmimeparts(const char *ptr, int size, const char *boundary){$/;"	f
tcmkgmtime	tcutil.c	/^static time_t tcmkgmtime(struct tm *tm){$/;"	f	file:
tcmpoolclear	tcutil.c	/^void tcmpoolclear(TCMPOOL *mpool, bool exe){$/;"	f
tcmpooldel	tcutil.c	/^void tcmpooldel(TCMPOOL *mpool){$/;"	f
tcmpooldelglobal	tcutil.c	/^static void tcmpooldelglobal(void){$/;"	f	file:
tcmpoolglobal	tcutil.c	/^TCMPOOL *tcmpoolglobal(void){$/;"	f
tcmpoollistnew	tcutil.c	/^TCLIST *tcmpoollistnew(TCMPOOL *mpool){$/;"	f
tcmpoolmalloc	tcutil.c	/^void *tcmpoolmalloc(TCMPOOL *mpool, size_t size){$/;"	f
tcmpoolmapnew	tcutil.c	/^TCMAP *tcmpoolmapnew(TCMPOOL *mpool){$/;"	f
tcmpoolnew	tcutil.c	/^TCMPOOL *tcmpoolnew(void){$/;"	f
tcmpoolpop	tcutil.c	/^void tcmpoolpop(TCMPOOL *mpool, bool exe){$/;"	f
tcmpoolpush	tcutil.c	/^void *tcmpoolpush(TCMPOOL *mpool, void *ptr, void (*del)(void *)){$/;"	f
tcmpoolpushlist	tcutil.c	/^TCLIST *tcmpoolpushlist(TCMPOOL *mpool, TCLIST *list){$/;"	f
tcmpoolpushmap	tcutil.c	/^TCMAP *tcmpoolpushmap(TCMPOOL *mpool, TCMAP *map){$/;"	f
tcmpoolpushptr	tcutil.c	/^void *tcmpoolpushptr(TCMPOOL *mpool, void *ptr){$/;"	f
tcmpoolpushtree	tcutil.c	/^TCTREE *tcmpoolpushtree(TCMPOOL *mpool, TCTREE *tree){$/;"	f
tcmpoolpushxstr	tcutil.c	/^TCXSTR *tcmpoolpushxstr(TCMPOOL *mpool, TCXSTR *xstr){$/;"	f
tcmpooltreenew	tcutil.c	/^TCTREE *tcmpooltreenew(TCMPOOL *mpool){$/;"	f
tcmpoolxstrnew	tcutil.c	/^TCXSTR *tcmpoolxstrnew(TCMPOOL *mpool){$/;"	f
tcmtfdecode	tcutil.c	/^static void tcmtfdecode(char *ptr, int size){$/;"	f	file:
tcmtfencode	tcutil.c	/^static void tcmtfencode(char *ptr, int size){$/;"	f	file:
tcmtftable	tcutil.c	/^const unsigned char tcmtftable[] = {$/;"	v
tcmyfatal	tcutil.c	/^void *tcmyfatal(const char *message){$/;"	f
tcndbadddouble	tcutil.c	/^double tcndbadddouble(TCNDB *ndb, const void *kbuf, int ksiz, double num){$/;"	f
tcndbaddint	tcutil.c	/^int tcndbaddint(TCNDB *ndb, const void *kbuf, int ksiz, int num){$/;"	f
tcndbcutfringe	tcutil.c	/^void tcndbcutfringe(TCNDB *ndb, int num){$/;"	f
tcndbdel	tcutil.c	/^void tcndbdel(TCNDB *ndb){$/;"	f
tcndbforeach	tcutil.c	/^void tcndbforeach(TCNDB *ndb, TCITER iter, void *op){$/;"	f
tcndbfwmkeys	tcutil.c	/^TCLIST *tcndbfwmkeys(TCNDB *ndb, const void *pbuf, int psiz, int max){$/;"	f
tcndbfwmkeys2	tcutil.c	/^TCLIST *tcndbfwmkeys2(TCNDB *ndb, const char *pstr, int max){$/;"	f
tcndbget	tcutil.c	/^void *tcndbget(TCNDB *ndb, const void *kbuf, int ksiz, int *sp){$/;"	f
tcndbget2	tcutil.c	/^char *tcndbget2(TCNDB *ndb, const char *kstr){$/;"	f
tcndbget3	tcutil.c	/^void *tcndbget3(TCNDB *ndb, const void *kbuf, int ksiz, int *sp){$/;"	f
tcndbiterinit	tcutil.c	/^void tcndbiterinit(TCNDB *ndb){$/;"	f
tcndbiterinit2	tcutil.c	/^void tcndbiterinit2(TCNDB *ndb, const void *kbuf, int ksiz){$/;"	f
tcndbiterinit3	tcutil.c	/^void tcndbiterinit3(TCNDB *ndb, const char *kstr){$/;"	f
tcndbiternext	tcutil.c	/^void *tcndbiternext(TCNDB *ndb, int *sp){$/;"	f
tcndbiternext2	tcutil.c	/^char *tcndbiternext2(TCNDB *ndb){$/;"	f
tcndbmsiz	tcutil.c	/^uint64_t tcndbmsiz(TCNDB *ndb){$/;"	f
tcndbnew	tcutil.c	/^TCNDB *tcndbnew(void){$/;"	f
tcndbnew2	tcutil.c	/^TCNDB *tcndbnew2(TCCMP cmp, void *cmpop){$/;"	f
tcndbout	tcutil.c	/^bool tcndbout(TCNDB *ndb, const void *kbuf, int ksiz){$/;"	f
tcndbout2	tcutil.c	/^bool tcndbout2(TCNDB *ndb, const char *kstr){$/;"	f
tcndbput	tcutil.c	/^void tcndbput(TCNDB *ndb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcndbput2	tcutil.c	/^void tcndbput2(TCNDB *ndb, const char *kstr, const char *vstr){$/;"	f
tcndbput3	tcutil.c	/^void tcndbput3(TCNDB *ndb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcndbputcat	tcutil.c	/^void tcndbputcat(TCNDB *ndb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcndbputcat2	tcutil.c	/^void tcndbputcat2(TCNDB *ndb, const char *kstr, const char *vstr){$/;"	f
tcndbputcat3	tcutil.c	/^void tcndbputcat3(TCNDB *ndb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcndbputkeep	tcutil.c	/^bool tcndbputkeep(TCNDB *ndb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcndbputkeep2	tcutil.c	/^bool tcndbputkeep2(TCNDB *ndb, const char *kstr, const char *vstr){$/;"	f
tcndbputkeep3	tcutil.c	/^bool tcndbputkeep3(TCNDB *ndb, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tcndbputproc	tcutil.c	/^bool tcndbputproc(TCNDB *ndb, const void *kbuf, int ksiz, const void *vbuf, int vsiz,$/;"	f
tcndbrnum	tcutil.c	/^uint64_t tcndbrnum(TCNDB *ndb){$/;"	f
tcndbvanish	tcutil.c	/^void tcndbvanish(TCNDB *ndb){$/;"	f
tcndbvsiz	tcutil.c	/^int tcndbvsiz(TCNDB *ndb, const void *kbuf, int ksiz){$/;"	f
tcndbvsiz2	tcutil.c	/^int tcndbvsiz2(TCNDB *ndb, const char *kstr){$/;"	f
tcnumtostrbin	tcutil.c	/^int tcnumtostrbin(uint64_t num, char *buf, int col, int fc){$/;"	f
tcpackdecode	tcutil.c	/^char *tcpackdecode(const char *ptr, int size, int *sp){$/;"	f
tcpackencode	tcutil.c	/^char *tcpackencode(const char *ptr, int size, int *sp){$/;"	f
tcpagealign	tcutil.c	/^uint64_t tcpagealign(uint64_t off){$/;"	f
tcpathlock	tcutil.c	/^bool tcpathlock(const char *path){$/;"	f
tcpathmap	tcutil.c	/^static TCMAP *tcpathmap;$/;"	v	file:
tcpathmutex	tcutil.c	/^static pthread_mutex_t tcpathmutex;$/;"	v	file:
tcpathunlock	tcutil.c	/^bool tcpathunlock(const char *path){$/;"	f
tcptrlistclear	tcutil.c	/^void tcptrlistclear(TCPTRLIST *ptrlist){$/;"	f
tcptrlistdel	tcutil.c	/^void tcptrlistdel(TCPTRLIST *ptrlist){$/;"	f
tcptrlistdup	tcutil.c	/^TCPTRLIST *tcptrlistdup(const TCPTRLIST *ptrlist){$/;"	f
tcptrlistinsert	tcutil.c	/^void tcptrlistinsert(TCPTRLIST *ptrlist, int index, void *ptr){$/;"	f
tcptrlistnew	tcutil.c	/^TCPTRLIST *tcptrlistnew(void){$/;"	f
tcptrlistnew2	tcutil.c	/^TCPTRLIST *tcptrlistnew2(int anum){$/;"	f
tcptrlistnum	tcutil.c	/^int tcptrlistnum(const TCPTRLIST *ptrlist){$/;"	f
tcptrlistover	tcutil.c	/^void tcptrlistover(TCPTRLIST *ptrlist, int index, void *ptr){$/;"	f
tcptrlistpop	tcutil.c	/^void *tcptrlistpop(TCPTRLIST *ptrlist){$/;"	f
tcptrlistpush	tcutil.c	/^void tcptrlistpush(TCPTRLIST *ptrlist, void *ptr){$/;"	f
tcptrlistremove	tcutil.c	/^void *tcptrlistremove(TCPTRLIST *ptrlist, int index){$/;"	f
tcptrlistshift	tcutil.c	/^void *tcptrlistshift(TCPTRLIST *ptrlist){$/;"	f
tcptrlistunshift	tcutil.c	/^void tcptrlistunshift(TCPTRLIST *ptrlist, void *ptr){$/;"	f
tcptrlistval	tcutil.c	/^void *tcptrlistval(const TCPTRLIST *ptrlist, int index){$/;"	f
tcquotedecode	tcutil.c	/^char *tcquotedecode(const char *str, int *sp){$/;"	f
tcquoteencode	tcutil.c	/^char *tcquoteencode(const char *ptr, int size){$/;"	f
tcrandomdevfd	tcutil.c	/^int tcrandomdevfd = -1;$/;"	v
tcrandomfdclose	tcutil.c	/^static void tcrandomfdclose(void){$/;"	f	file:
tcread	tcutil.c	/^bool tcread(int fd, void *buf, size_t size){$/;"	f
tcreaddir	tcutil.c	/^TCLIST *tcreaddir(const char *path){$/;"	f
tcreadfile	tcutil.c	/^void *tcreadfile(const char *path, int limit, int *sp){$/;"	f
tcreadfilelines	tcutil.c	/^TCLIST *tcreadfilelines(const char *path){$/;"	f
tcrealloc	tcutil.c	/^void *tcrealloc(void *ptr, size_t size){$/;"	f
tcrealpath	tcutil.c	/^char *tcrealpath(const char *path){$/;"	f
tcreckeycmp	tchdb.c	/^static int tcreckeycmp(const char *abuf, int asiz, const char *bbuf, int bsiz){$/;"	f	file:
tcregexmatch	tcutil.c	/^bool tcregexmatch(const char *str, const char *regex){$/;"	f
tcregexreplace	tcutil.c	/^char *tcregexreplace(const char *str, const char *regex, const char *alt){$/;"	f
tcremovelink	tcutil.c	/^bool tcremovelink(const char *path){$/;"	f
tcsleep	tcutil.c	/^bool tcsleep(double sec){$/;"	f
tcsprintf	tcutil.c	/^char *tcsprintf(const char *format, ...){$/;"	f
tcstatfile	tcutil.c	/^bool tcstatfile(const char *path, bool *isdirp, int64_t *sizep, int64_t *mtimep){$/;"	f
tcstrbwm	tcutil.c	/^bool tcstrbwm(const char *str, const char *key){$/;"	f
tcstrcntutf	tcutil.c	/^int tcstrcntutf(const char *str){$/;"	f
tcstrcututf	tcutil.c	/^char *tcstrcututf(char *str, int num){$/;"	f
tcstrdist	tcutil.c	/^int tcstrdist(const char *astr, const char *bstr){$/;"	f
tcstrdistutf	tcutil.c	/^int tcstrdistutf(const char *astr, const char *bstr){$/;"	f
tcstrdup	tcutil.c	/^char *tcstrdup(const void *str){$/;"	f
tcstrfwm	tcutil.c	/^bool tcstrfwm(const char *str, const char *key){$/;"	f
tcstribwm	tcutil.c	/^bool tcstribwm(const char *str, const char *key){$/;"	f
tcstricmp	tcutil.c	/^int tcstricmp(const char *astr, const char *bstr){$/;"	f
tcstrifwm	tcutil.c	/^bool tcstrifwm(const char *str, const char *key){$/;"	f
tcstrisnum	tcutil.c	/^bool tcstrisnum(const char *str){$/;"	f
tcstrjoin	tcutil.c	/^char *tcstrjoin(const TCLIST *list, char delim){$/;"	f
tcstrjoin2	tcutil.c	/^void *tcstrjoin2(const TCLIST *list, int *sp){$/;"	f
tcstrjoin3	tcutil.c	/^char *tcstrjoin3(const TCMAP *map, char delim){$/;"	f
tcstrjoin4	tcutil.c	/^void *tcstrjoin4(const TCMAP *map, int *sp){$/;"	f
tcstrkwic	tcutil.c	/^TCLIST *tcstrkwic(const char *str, const TCLIST *words, int width, int opts){$/;"	f
tcstrmktime	tcutil.c	/^int64_t tcstrmktime(const char *str){$/;"	f
tcstrskipspc	tcutil.c	/^const char *tcstrskipspc(const char *str){$/;"	f
tcstrsplit	tcutil.c	/^TCLIST *tcstrsplit(const char *str, const char *delims){$/;"	f
tcstrsplit2	tcutil.c	/^TCLIST *tcstrsplit2(const void *ptr, int size){$/;"	f
tcstrsplit3	tcutil.c	/^TCMAP *tcstrsplit3(const char *str, const char *delims){$/;"	f
tcstrsplit4	tcutil.c	/^TCMAP *tcstrsplit4(const void *ptr, int size){$/;"	f
tcstrsqzspc	tcutil.c	/^char *tcstrsqzspc(char *str){$/;"	f
tcstrsubchr	tcutil.c	/^char *tcstrsubchr(char *str, const char *rstr, const char *sstr){$/;"	f
tcstrtokenize	tcutil.c	/^TCLIST *tcstrtokenize(const char *str){$/;"	f
tcstrtolower	tcutil.c	/^char *tcstrtolower(char *str){$/;"	f
tcstrtoupper	tcutil.c	/^char *tcstrtoupper(char *str){$/;"	f
tcstrtrim	tcutil.c	/^char *tcstrtrim(char *str){$/;"	f
tcstrucsnorm	tcutil.c	/^int tcstrucsnorm(uint16_t *ary, int num, int opts){$/;"	f
tcstrucstoutf	tcutil.c	/^int tcstrucstoutf(const uint16_t *ary, int num, char *str){$/;"	f
tcstrutfkwicputtext	tcutil.c	/^static int tcstrutfkwicputtext(const uint16_t *oary, const uint16_t *nary, int si, int ti,$/;"	f	file:
tcstrutfnorm	tcutil.c	/^char *tcstrutfnorm(char *str, int opts){$/;"	f
tcstrutftoucs	tcutil.c	/^void tcstrutftoucs(const char *str, uint16_t *ary, int *np){$/;"	f
tcsysinfo	tcutil.c	/^TCMAP *tcsysinfo(void){$/;"	f
tcsystem	tcutil.c	/^int tcsystem(const char **args, int anum){$/;"	f
tctdbadddouble	tctdb.c	/^double tctdbadddouble(TCTDB *tdb, const void *pkbuf, int pksiz, double num){$/;"	f
tctdbaddint	tctdb.c	/^int tctdbaddint(TCTDB *tdb, const void *pkbuf, int pksiz, int num){$/;"	f
tctdbaddnumber	tctdb.c	/^static double tctdbaddnumber(TCTDB *tdb, const void *pkbuf, int pksiz, double num){$/;"	f	file:
tctdbalign	tctdb.c	/^uint32_t tctdbalign(TCTDB *tdb){$/;"	f
tctdbatof	tctdb.c	/^static long double tctdbatof(const char *str){$/;"	f	file:
tctdbbnum	tctdb.c	/^uint64_t tctdbbnum(TCTDB *tdb){$/;"	f
tctdbbnumused	tctdb.c	/^uint64_t tctdbbnumused(TCTDB *tdb){$/;"	f
tctdbcacheclear	tctdb.c	/^bool tctdbcacheclear(TCTDB *tdb){$/;"	f
tctdbcacheclearimpl	tctdb.c	/^static bool tctdbcacheclearimpl(TCTDB *tdb){$/;"	f	file:
tctdbclear	tctdb.c	/^static void tctdbclear(TCTDB *tdb){$/;"	f	file:
tctdbclose	tctdb.c	/^bool tctdbclose(TCTDB *tdb){$/;"	f
tctdbcloseimpl	tctdb.c	/^static bool tctdbcloseimpl(TCTDB *tdb){$/;"	f	file:
tctdbcopy	tctdb.c	/^bool tctdbcopy(TCTDB *tdb, const char *path){$/;"	f
tctdbcopyimpl	tctdb.c	/^static bool tctdbcopyimpl(TCTDB *tdb, const char *path){$/;"	f	file:
tctdbdbgfd	tctdb.c	/^int tctdbdbgfd(TCTDB *tdb){$/;"	f
tctdbdefrag	tctdb.c	/^bool tctdbdefrag(TCTDB *tdb, int64_t step){$/;"	f
tctdbdefragimpl	tctdb.c	/^static bool tctdbdefragimpl(TCTDB *tdb, int64_t step){$/;"	f	file:
tctdbdel	tctdb.c	/^void tctdbdel(TCTDB *tdb){$/;"	f
tctdbdfunit	tctdb.c	/^uint32_t tctdbdfunit(TCTDB *tdb){$/;"	f
tctdbecode	tctdb.c	/^int tctdbecode(TCTDB *tdb){$/;"	f
tctdberrmsg	tctdb.c	/^const char *tctdberrmsg(int ecode){$/;"	f
tctdbfbpmax	tctdb.c	/^uint32_t tctdbfbpmax(TCTDB *tdb){$/;"	f
tctdbflags	tctdb.c	/^uint8_t tctdbflags(TCTDB *tdb){$/;"	f
tctdbforeach	tctdb.c	/^bool tctdbforeach(TCTDB *tdb, TCITER iter, void *op){$/;"	f
tctdbforeachimpl	tctdb.c	/^static bool tctdbforeachimpl(TCTDB *tdb, TCITER iter, void *op){$/;"	f	file:
tctdbfsiz	tctdb.c	/^uint64_t tctdbfsiz(TCTDB *tdb){$/;"	f
tctdbftsparseexpr	tctdb.c	/^static TDBFTSUNIT *tctdbftsparseexpr(const char *expr, int esiz, int op, int *np){$/;"	f	file:
tctdbfwmkeys	tctdb.c	/^TCLIST *tctdbfwmkeys(TCTDB *tdb, const void *pbuf, int psiz, int max){$/;"	f
tctdbfwmkeys2	tctdb.c	/^TCLIST *tctdbfwmkeys2(TCTDB *tdb, const char *pstr, int max){$/;"	f
tctdbgenuid	tctdb.c	/^int64_t tctdbgenuid(TCTDB *tdb){$/;"	f
tctdbgenuidimpl	tctdb.c	/^static int64_t tctdbgenuidimpl(TCTDB *tdb, int64_t inc){$/;"	f	file:
tctdbget	tctdb.c	/^TCMAP *tctdbget(TCTDB *tdb, const void *pkbuf, int pksiz){$/;"	f
tctdbget2	tctdb.c	/^char *tctdbget2(TCTDB *tdb, const void *pkbuf, int pksiz, int *sp){$/;"	f
tctdbget3	tctdb.c	/^char *tctdbget3(TCTDB *tdb, const char *pkstr){$/;"	f
tctdbget4	tctdb.c	/^char *tctdbget4(TCTDB *tdb, const void *pkbuf, int pksiz, const void *nbuf, int nsiz, int *sp){$/;"	f
tctdbgetimpl	tctdb.c	/^static TCMAP *tctdbgetimpl(TCTDB *tdb, const void *pkbuf, int pksiz){$/;"	f	file:
tctdbgetonecol	tctdb.c	/^static char *tctdbgetonecol(TCTDB *tdb, const void *pkbuf, int pksiz,$/;"	f	file:
tctdbhasmutex	tctdb.c	/^bool tctdbhasmutex(TCTDB *tdb){$/;"	f
tctdbidxcmpkey	tctdb.c	/^static int tctdbidxcmpkey(const char **a, const char **b){$/;"	f	file:
tctdbidxftscmpnumocr	tctdb.c	/^static int tctdbidxftscmpnumocr(TDBFTSNUMOCR *a, TDBFTSNUMOCR *b){$/;"	f	file:
tctdbidxftscmpstrocr	tctdb.c	/^static int tctdbidxftscmpstrocr(TDBFTSSTROCR *a, TDBFTSSTROCR *b){$/;"	f	file:
tctdbidxgetbyfts	tctdb.c	/^static TCMAP *tctdbidxgetbyfts(TCTDB *tdb, TDBIDX *idx, TDBCOND *cond, TCXSTR *hint){$/;"	f	file:
tctdbidxgetbyftsunion	tctdb.c	/^static void tctdbidxgetbyftsunion(TDBIDX *idx, const TCLIST *tokens, bool sign,$/;"	f	file:
tctdbidxgetbytokens	tctdb.c	/^static TCMAP *tctdbidxgetbytokens(TCTDB *tdb, TDBIDX *idx, const TCLIST *tokens, int op,$/;"	f	file:
tctdbidxhash	tctdb.c	/^static uint16_t tctdbidxhash(const char *pkbuf, int pksiz){$/;"	f	file:
tctdbidxout	tctdb.c	/^static bool tctdbidxout(TCTDB *tdb, const void *pkbuf, int pksiz, TCMAP *cols){$/;"	f	file:
tctdbidxoutone	tctdb.c	/^static bool tctdbidxoutone(TCTDB *tdb, TDBIDX *idx, const char *pkbuf, int pksiz, uint16_t hash,$/;"	f	file:
tctdbidxoutqgram	tctdb.c	/^static bool tctdbidxoutqgram(TCTDB *tdb, TDBIDX *idx, const char *pkbuf, int pksiz,$/;"	f	file:
tctdbidxouttoken	tctdb.c	/^static bool tctdbidxouttoken(TCTDB *tdb, TDBIDX *idx, const char *pkbuf, int pksiz,$/;"	f	file:
tctdbidxput	tctdb.c	/^static bool tctdbidxput(TCTDB *tdb, const void *pkbuf, int pksiz, TCMAP *cols){$/;"	f	file:
tctdbidxputone	tctdb.c	/^static bool tctdbidxputone(TCTDB *tdb, TDBIDX *idx, const char *pkbuf, int pksiz, uint16_t hash,$/;"	f	file:
tctdbidxputqgram	tctdb.c	/^static bool tctdbidxputqgram(TCTDB *tdb, TDBIDX *idx, const char *pkbuf, int pksiz,$/;"	f	file:
tctdbidxputtoken	tctdb.c	/^static bool tctdbidxputtoken(TCTDB *tdb, TDBIDX *idx, const char *pkbuf, int pksiz,$/;"	f	file:
tctdbidxsyncicc	tctdb.c	/^static bool tctdbidxsyncicc(TCTDB *tdb, TDBIDX *idx, bool all){$/;"	f	file:
tctdbinode	tctdb.c	/^uint64_t tctdbinode(TCTDB *tdb){$/;"	f
tctdbinum	tctdb.c	/^int tctdbinum(TCTDB *tdb){$/;"	f
tctdbiterinit	tctdb.c	/^bool tctdbiterinit(TCTDB *tdb){$/;"	f
tctdbiterinit2	tctdb.c	/^bool tctdbiterinit2(TCTDB *tdb, const void *pkbuf, int pksiz){$/;"	f
tctdbiterinit3	tctdb.c	/^bool tctdbiterinit3(TCTDB *tdb, const char *kstr){$/;"	f
tctdbiternext	tctdb.c	/^void *tctdbiternext(TCTDB *tdb, int *sp){$/;"	f
tctdbiternext2	tctdb.c	/^char *tctdbiternext2(TCTDB *tdb){$/;"	f
tctdbiternext3	tctdb.c	/^TCMAP *tctdbiternext3(TCTDB *tdb){$/;"	f
tctdblockmethod	tctdb.c	/^static bool tctdblockmethod(TCTDB *tdb, bool wr){$/;"	f	file:
tctdbmemsync	tctdb.c	/^bool tctdbmemsync(TCTDB *tdb, bool phys){$/;"	f
tctdbmetasearch	tctdb.c	/^TCLIST *tctdbmetasearch(TDBQRY **qrys, int num, int type){$/;"	f
tctdbmetastrtosettype	tctdb.c	/^int tctdbmetastrtosettype(const char *str){$/;"	f
tctdbmtime	tctdb.c	/^time_t tctdbmtime(TCTDB *tdb){$/;"	f
tctdbnew	tctdb.c	/^TCTDB *tctdbnew(void){$/;"	f
tctdbopaque	tctdb.c	/^char *tctdbopaque(TCTDB *tdb){$/;"	f
tctdbopen	tctdb.c	/^bool tctdbopen(TCTDB *tdb, const char *path, int omode){$/;"	f
tctdbopenimpl	tctdb.c	/^static bool tctdbopenimpl(TCTDB *tdb, const char *path, int omode){$/;"	f	file:
tctdboptimize	tctdb.c	/^bool tctdboptimize(TCTDB *tdb, int64_t bnum, int8_t apow, int8_t fpow, uint8_t opts){$/;"	f
tctdboptimizeimpl	tctdb.c	/^static bool tctdboptimizeimpl(TCTDB *tdb, int64_t bnum, int8_t apow, int8_t fpow, uint8_t opts){$/;"	f	file:
tctdbopts	tctdb.c	/^uint8_t tctdbopts(TCTDB *tdb){$/;"	f
tctdbout	tctdb.c	/^bool tctdbout(TCTDB *tdb, const void *pkbuf, int pksiz){$/;"	f
tctdbout2	tctdb.c	/^bool tctdbout2(TCTDB *tdb, const char *pkstr){$/;"	f
tctdboutimpl	tctdb.c	/^static bool tctdboutimpl(TCTDB *tdb, const char *pkbuf, int pksiz){$/;"	f	file:
tctdbpath	tctdb.c	/^const char *tctdbpath(TCTDB *tdb){$/;"	f
tctdbprintmeta	tctdb.c	/^void tctdbprintmeta(TCTDB *tdb){$/;"	f
tctdbput	tctdb.c	/^bool tctdbput(TCTDB *tdb, const void *pkbuf, int pksiz, TCMAP *cols){$/;"	f
tctdbput2	tctdb.c	/^bool tctdbput2(TCTDB *tdb, const void *pkbuf, int pksiz, const void *cbuf, int csiz){$/;"	f
tctdbput3	tctdb.c	/^bool tctdbput3(TCTDB *tdb, const char *pkstr, const char *cstr){$/;"	f
tctdbputcat	tctdb.c	/^bool tctdbputcat(TCTDB *tdb, const void *pkbuf, int pksiz, TCMAP *cols){$/;"	f
tctdbputcat2	tctdb.c	/^bool tctdbputcat2(TCTDB *tdb, const void *pkbuf, int pksiz, const void *cbuf, int csiz){$/;"	f
tctdbputcat3	tctdb.c	/^bool tctdbputcat3(TCTDB *tdb, const char *pkstr, const char *cstr){$/;"	f
tctdbputimpl	tctdb.c	/^static bool tctdbputimpl(TCTDB *tdb, const void *pkbuf, int pksiz, TCMAP *cols, int dmode){$/;"	f	file:
tctdbputkeep	tctdb.c	/^bool tctdbputkeep(TCTDB *tdb, const void *pkbuf, int pksiz, TCMAP *cols){$/;"	f
tctdbputkeep2	tctdb.c	/^bool tctdbputkeep2(TCTDB *tdb, const void *pkbuf, int pksiz, const void *cbuf, int csiz){$/;"	f
tctdbputkeep3	tctdb.c	/^bool tctdbputkeep3(TCTDB *tdb, const char *pkstr, const char *cstr){$/;"	f
tctdbputproc	tctdb.c	/^bool tctdbputproc(TCTDB *tdb, const void *pkbuf, int pksiz, const void *cbuf, int csiz,$/;"	f
tctdbqryaddcond	tctdb.c	/^void tctdbqryaddcond(TDBQRY *qry, const char *name, int op, const char *expr){$/;"	f
tctdbqryallcondmatch	tctdb.c	/^static bool tctdbqryallcondmatch(TDBQRY *qry, const char *pkbuf, int pksiz){$/;"	f	file:
tctdbqrycondcheckfts	tctdb.c	/^static bool tctdbqrycondcheckfts(const char *vbuf, int vsiz, TDBCOND *cond){$/;"	f	file:
tctdbqrycondchecknumbt	tctdb.c	/^static bool tctdbqrycondchecknumbt(const char *vbuf, const char *expr){$/;"	f	file:
tctdbqrycondchecknumoreq	tctdb.c	/^static bool tctdbqrycondchecknumoreq(const char *vbuf, const char *expr){$/;"	f	file:
tctdbqrycondcheckstrand	tctdb.c	/^static bool tctdbqrycondcheckstrand(const char *vbuf, const char *expr){$/;"	f	file:
tctdbqrycondcheckstror	tctdb.c	/^static bool tctdbqrycondcheckstror(const char *vbuf, const char *expr){$/;"	f	file:
tctdbqrycondcheckstroreq	tctdb.c	/^static bool tctdbqrycondcheckstroreq(const char *vbuf, const char *expr){$/;"	f	file:
tctdbqrycondmatch	tctdb.c	/^static bool tctdbqrycondmatch(TDBCOND *cond, const char *vbuf, int vsiz){$/;"	f	file:
tctdbqrycount	tctdb.c	/^int tctdbqrycount(TDBQRY *qry){$/;"	f
tctdbqrydel	tctdb.c	/^void tctdbqrydel(TDBQRY *qry){$/;"	f
tctdbqryhint	tctdb.c	/^const char *tctdbqryhint(TDBQRY *qry){$/;"	f
tctdbqryidxcurjumpnum	tctdb.c	/^static bool tctdbqryidxcurjumpnum(BDBCUR *cur, const char *expr, int esiz, bool first){$/;"	f	file:
tctdbqryidxfetch	tctdb.c	/^static TCMAP *tctdbqryidxfetch(TDBQRY *qry, TDBCOND *cond, TDBIDX *idx){$/;"	f	file:
tctdbqrykwic	tctdb.c	/^TCLIST *tctdbqrykwic(TDBQRY *qry, TCMAP *cols, const char *name, int width, int opts){$/;"	f
tctdbqrynew	tctdb.c	/^TDBQRY *tctdbqrynew(TCTDB *tdb){$/;"	f
tctdbqryonecondmatch	tctdb.c	/^static bool tctdbqryonecondmatch(TDBQRY *qry, TDBCOND *cond, const char *pkbuf, int pksiz){$/;"	f	file:
tctdbqryproc	tctdb.c	/^bool tctdbqryproc(TDBQRY *qry, TDBQRYPROC proc, void *op){$/;"	f
tctdbqryproc2	tctdb.c	/^bool tctdbqryproc2(TDBQRY *qry, TDBQRYPROC proc, void *op){$/;"	f
tctdbqryprocout	tcutil.h	4174;"	d
tctdbqryprocoutcb	tctdb.c	/^static int tctdbqryprocoutcb(const void *pkbuf, int pksiz, TCMAP *cols, void *op){$/;"	f	file:
tctdbqrysearch	tctdb.c	/^TCLIST *tctdbqrysearch(TDBQRY *qry){$/;"	f
tctdbqrysearchimpl	tctdb.c	/^static TCLIST *tctdbqrysearchimpl(TDBQRY *qry){$/;"	f	file:
tctdbqrysearchout	tctdb.c	/^bool tctdbqrysearchout(TDBQRY *qry){$/;"	f
tctdbqrysearchout2	tctdb.c	/^bool tctdbqrysearchout2(TDBQRY *qry){$/;"	f
tctdbqrysetlimit	tctdb.c	/^void tctdbqrysetlimit(TDBQRY *qry, int max, int skip){$/;"	f
tctdbqrysetmax	tcutil.h	4175;"	d
tctdbqrysetorder	tctdb.c	/^void tctdbqrysetorder(TDBQRY *qry, const char *name, int type){$/;"	f
tctdbqrystrtocondop	tctdb.c	/^int tctdbqrystrtocondop(const char *str){$/;"	f
tctdbqrystrtoordertype	tctdb.c	/^int tctdbqrystrtoordertype(const char *str){$/;"	f
tctdbrnum	tctdb.c	/^uint64_t tctdbrnum(TCTDB *tdb){$/;"	f
tctdbsetcache	tctdb.c	/^bool tctdbsetcache(TCTDB *tdb, int32_t rcnum, int32_t lcnum, int32_t ncnum){$/;"	f
tctdbsetcodecfunc	tctdb.c	/^bool tctdbsetcodecfunc(TCTDB *tdb, TCCODEC enc, void *encop, TCCODEC dec, void *decop){$/;"	f
tctdbsetdbgfd	tctdb.c	/^void tctdbsetdbgfd(TCTDB *tdb, int fd){$/;"	f
tctdbsetdfunit	tctdb.c	/^bool tctdbsetdfunit(TCTDB *tdb, int32_t dfunit){$/;"	f
tctdbsetecode	tctdb.c	/^void tctdbsetecode(TCTDB *tdb, int ecode, const char *filename, int line, const char *func){$/;"	f
tctdbsetindex	tctdb.c	/^bool tctdbsetindex(TCTDB *tdb, const char *name, int type){$/;"	f
tctdbsetindeximpl	tctdb.c	/^static bool tctdbsetindeximpl(TCTDB *tdb, const char *name, int type){$/;"	f	file:
tctdbsetinvcache	tctdb.c	/^bool tctdbsetinvcache(TCTDB *tdb, int64_t iccmax, double iccsync){$/;"	f
tctdbsetmutex	tctdb.c	/^bool tctdbsetmutex(TCTDB *tdb){$/;"	f
tctdbsetuidseed	tctdb.c	/^bool tctdbsetuidseed(TCTDB *tdb, int64_t seed){$/;"	f
tctdbsetxmsiz	tctdb.c	/^bool tctdbsetxmsiz(TCTDB *tdb, int64_t xmsiz){$/;"	f
tctdbstrtoindextype	tctdb.c	/^int tctdbstrtoindextype(const char *str){$/;"	f
tctdbstrtometasearcytype	tctdb.c	/^int tctdbstrtometasearcytype(const char *str){$/;"	f
tctdbsync	tctdb.c	/^bool tctdbsync(TCTDB *tdb){$/;"	f
tctdbtranabort	tctdb.c	/^bool tctdbtranabort(TCTDB *tdb){$/;"	f
tctdbtranabortimpl	tctdb.c	/^static bool tctdbtranabortimpl(TCTDB *tdb){$/;"	f	file:
tctdbtranbegin	tctdb.c	/^bool tctdbtranbegin(TCTDB *tdb){$/;"	f
tctdbtranbeginimpl	tctdb.c	/^static bool tctdbtranbeginimpl(TCTDB *tdb){$/;"	f	file:
tctdbtrancommit	tctdb.c	/^bool tctdbtrancommit(TCTDB *tdb){$/;"	f
tctdbtrancommitimpl	tctdb.c	/^static bool tctdbtrancommitimpl(TCTDB *tdb){$/;"	f	file:
tctdbtune	tctdb.c	/^bool tctdbtune(TCTDB *tdb, int64_t bnum, int8_t apow, int8_t fpow, uint8_t opts){$/;"	f
tctdbuidseed	tctdb.c	/^int64_t tctdbuidseed(TCTDB *tdb){$/;"	f
tctdbunlockmethod	tctdb.c	/^static bool tctdbunlockmethod(TCTDB *tdb){$/;"	f	file:
tctdbvanish	tctdb.c	/^bool tctdbvanish(TCTDB *tdb){$/;"	f
tctdbvanishimpl	tctdb.c	/^static bool tctdbvanishimpl(TCTDB *tdb){$/;"	f	file:
tctdbvsiz	tctdb.c	/^int tctdbvsiz(TCTDB *tdb, const void *pkbuf, int pksiz){$/;"	f
tctdbvsiz2	tctdb.c	/^int tctdbvsiz2(TCTDB *tdb, const char *pkstr){$/;"	f
tctime	tcutil.c	/^double tctime(void){$/;"	f
tctmplconf	tcutil.c	/^const char *tctmplconf(TCTMPL *tmpl, const char *name){$/;"	f
tctmpldel	tcutil.c	/^void tctmpldel(TCTMPL *tmpl){$/;"	f
tctmpldump	tcutil.c	/^char *tctmpldump(TCTMPL *tmpl, const TCMAP *vars){$/;"	f
tctmpldumpeval	tcutil.c	/^static int tctmpldumpeval(TCXSTR *xstr, const char *expr, const TCLIST *elems, int cur, int num,$/;"	f	file:
tctmpldumpevalvar	tcutil.c	/^static const char *tctmpldumpevalvar(const TCMAP **stack, int depth, const char *name,$/;"	f	file:
tctmplload	tcutil.c	/^void tctmplload(TCTMPL *tmpl, const char *str){$/;"	f
tctmplload2	tcutil.c	/^bool tctmplload2(TCTMPL *tmpl, const char *path){$/;"	f
tctmplnew	tcutil.c	/^TCTMPL *tctmplnew(void){$/;"	f
tctmplsetsep	tcutil.c	/^void tctmplsetsep(TCTMPL *tmpl, const char *begsep, const char *endsep){$/;"	f
tctmpltokenize	tcutil.c	/^static TCLIST *tctmpltokenize(const char *expr){$/;"	f	file:
tctopsort	tcutil.c	/^void tctopsort(void *base, size_t nmemb, size_t size, size_t top,$/;"	f
tctreeadddouble	tcutil.c	/^double tctreeadddouble(TCTREE *tree, const void *kbuf, int ksiz, double num){$/;"	f
tctreeaddint	tcutil.c	/^int tctreeaddint(TCTREE *tree, const void *kbuf, int ksiz, int num){$/;"	f
tctreeclear	tcutil.c	/^void tctreeclear(TCTREE *tree){$/;"	f
tctreecutfringe	tcutil.c	/^void tctreecutfringe(TCTREE *tree, int num){$/;"	f
tctreedel	tcutil.c	/^void tctreedel(TCTREE *tree){$/;"	f
tctreedump	tcutil.c	/^void *tctreedump(const TCTREE *tree, int *sp){$/;"	f
tctreedup	tcutil.c	/^TCTREE *tctreedup(const TCTREE *tree){$/;"	f
tctreeget	tcutil.c	/^const void *tctreeget(TCTREE *tree, const void *kbuf, int ksiz, int *sp){$/;"	f
tctreeget2	tcutil.c	/^const char *tctreeget2(TCTREE *tree, const char *kstr){$/;"	f
tctreeget3	tcutil.c	/^const void *tctreeget3(const TCTREE *tree, const void *kbuf, int ksiz, int *sp){$/;"	f
tctreeget4	tcutil.c	/^const char *tctreeget4(TCTREE *tree, const char *kstr, const char *dstr){$/;"	f
tctreeiterinit	tcutil.c	/^void tctreeiterinit(TCTREE *tree){$/;"	f
tctreeiterinit2	tcutil.c	/^void tctreeiterinit2(TCTREE *tree, const void *kbuf, int ksiz){$/;"	f
tctreeiterinit3	tcutil.c	/^void tctreeiterinit3(TCTREE *tree, const char *kstr){$/;"	f
tctreeiternext	tcutil.c	/^const void *tctreeiternext(TCTREE *tree, int *sp){$/;"	f
tctreeiternext2	tcutil.c	/^const char *tctreeiternext2(TCTREE *tree){$/;"	f
tctreeiterval	tcutil.c	/^const void *tctreeiterval(const void *kbuf, int *sp){$/;"	f
tctreeiterval2	tcutil.c	/^const char *tctreeiterval2(const char *kstr){$/;"	f
tctreekeys	tcutil.c	/^TCLIST *tctreekeys(const TCTREE *tree){$/;"	f
tctreekeys2	tcutil.c	/^const char **tctreekeys2(const TCTREE *tree, int *np){$/;"	f
tctreeload	tcutil.c	/^TCTREE *tctreeload(const void *ptr, int size, TCCMP cmp, void *cmpop){$/;"	f
tctreeloadone	tcutil.c	/^void *tctreeloadone(const void *ptr, int size, const void *kbuf, int ksiz, int *sp){$/;"	f
tctreemsiz	tcutil.c	/^uint64_t tctreemsiz(const TCTREE *tree){$/;"	f
tctreenew	tcutil.c	/^TCTREE *tctreenew(void){$/;"	f
tctreenew2	tcutil.c	/^TCTREE *tctreenew2(TCCMP cmp, void *cmpop){$/;"	f
tctreeout	tcutil.c	/^bool tctreeout(TCTREE *tree, const void *kbuf, int ksiz){$/;"	f
tctreeout2	tcutil.c	/^bool tctreeout2(TCTREE *tree, const char *kstr){$/;"	f
tctreeprintf	tcutil.c	/^void tctreeprintf(TCTREE *tree, const char *kstr, const char *format, ...){$/;"	f
tctreeput	tcutil.c	/^void tctreeput(TCTREE *tree, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tctreeput2	tcutil.c	/^void tctreeput2(TCTREE *tree, const char *kstr, const char *vstr){$/;"	f
tctreeput3	tcutil.c	/^void tctreeput3(TCTREE *tree, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tctreeputcat	tcutil.c	/^void tctreeputcat(TCTREE *tree, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tctreeputcat2	tcutil.c	/^void tctreeputcat2(TCTREE *tree, const char *kstr, const char *vstr){$/;"	f
tctreeputcat3	tcutil.c	/^void tctreeputcat3(TCTREE *tree, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tctreeputkeep	tcutil.c	/^bool tctreeputkeep(TCTREE *tree, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tctreeputkeep2	tcutil.c	/^bool tctreeputkeep2(TCTREE *tree, const char *kstr, const char *vstr){$/;"	f
tctreeputkeep3	tcutil.c	/^bool tctreeputkeep3(TCTREE *tree, const void *kbuf, int ksiz, const void *vbuf, int vsiz){$/;"	f
tctreeputproc	tcutil.c	/^bool tctreeputproc(TCTREE *tree, const void *kbuf, int ksiz, const void *vbuf, int vsiz,$/;"	f
tctreernum	tcutil.c	/^uint64_t tctreernum(const TCTREE *tree){$/;"	f
tctreesplay	tcutil.c	/^static TCTREEREC* tctreesplay(TCTREE *tree, const void *kbuf, int ksiz){$/;"	f	file:
tctreevals	tcutil.c	/^TCLIST *tctreevals(const TCTREE *tree){$/;"	f
tctreevals2	tcutil.c	/^const char **tctreevals2(const TCTREE *tree, int *np){$/;"	f
tcunlock	tcutil.c	/^bool tcunlock(int fd){$/;"	f
tcurlbreak	tcutil.c	/^TCMAP *tcurlbreak(const char *str){$/;"	f
tcurldecode	tcutil.c	/^char *tcurldecode(const char *str, int *sp){$/;"	f
tcurlencode	tcutil.c	/^char *tcurlencode(const char *ptr, int size){$/;"	f
tcurlresolve	tcutil.c	/^char *tcurlresolve(const char *base, const char *target){$/;"	f
tcversion	tcutil.c	/^const char *tcversion = _TC_VERSION;$/;"	v
tcvxstrprintf	tcutil.c	/^static void tcvxstrprintf(TCXSTR *xstr, const char *format, va_list ap){$/;"	f	file:
tcwrite	tcutil.c	/^bool tcwrite(int fd, const void *buf, size_t size){$/;"	f
tcwritefile	tcutil.c	/^bool tcwritefile(const char *path, const void *ptr, int size){$/;"	f
tcwwwformdecode	tcutil.c	/^void tcwwwformdecode(const char *str, TCMAP *params){$/;"	f
tcwwwformdecode2	tcutil.c	/^void tcwwwformdecode2(const void *ptr, int size, const char *type, TCMAP *params){$/;"	f
tcwwwformencode	tcutil.c	/^char *tcwwwformencode(const TCMAP *params){$/;"	f
tcxmlattrs	tcutil.c	/^TCMAP *tcxmlattrs(const char *str){$/;"	f
tcxmlbreak	tcutil.c	/^TCLIST *tcxmlbreak(const char *str){$/;"	f
tcxmlescape	tcutil.c	/^char *tcxmlescape(const char *str){$/;"	f
tcxmlunescape	tcutil.c	/^char *tcxmlunescape(const char *str){$/;"	f
tcxstrcat	tcutil.c	/^void tcxstrcat(TCXSTR *xstr, const void *ptr, int size){$/;"	f
tcxstrcat2	tcutil.c	/^void tcxstrcat2(TCXSTR *xstr, const char *str){$/;"	f
tcxstrclear	tcutil.c	/^void tcxstrclear(TCXSTR *xstr){$/;"	f
tcxstrdel	tcutil.c	/^void tcxstrdel(TCXSTR *xstr){$/;"	f
tcxstrdup	tcutil.c	/^TCXSTR *tcxstrdup(const TCXSTR *xstr){$/;"	f
tcxstrfrommalloc	tcutil.c	/^TCXSTR *tcxstrfrommalloc(void *ptr, int size){$/;"	f
tcxstrnew	tcutil.c	/^TCXSTR *tcxstrnew(void){$/;"	f
tcxstrnew2	tcutil.c	/^TCXSTR *tcxstrnew2(const char *str){$/;"	f
tcxstrnew3	tcutil.c	/^TCXSTR *tcxstrnew3(int asiz){$/;"	f
tcxstrprintf	tcutil.c	/^void tcxstrprintf(TCXSTR *xstr, const char *format, ...){$/;"	f
tcxstrptr	tcutil.c	/^const void *tcxstrptr(const TCXSTR *xstr){$/;"	f
tcxstrsize	tcutil.c	/^int tcxstrsize(const TCXSTR *xstr){$/;"	f
tcxstrtomalloc	tcutil.c	/^void *tcxstrtomalloc(TCXSTR *xstr){$/;"	f
tczeromap	tcutil.c	/^void *tczeromap(uint64_t size){$/;"	f
tczerounmap	tcutil.c	/^void tczerounmap(void *ptr){$/;"	f
tdb	tcadb.h	/^  TCTDB *tdb;                            \/* table database object *\/$/;"	m	struct:__anon4
tdb	tctdb.h	/^  TCTDB *tdb;                            \/* database object *\/$/;"	m	struct:__anon68
tdb	tctmttest.c	/^  TCTDB *tdb;$/;"	m	struct:__anon73	file:
tdb	tctmttest.c	/^  TCTDB *tdb;$/;"	m	struct:__anon74	file:
tdb	tctmttest.c	/^  TCTDB *tdb;$/;"	m	struct:__anon75	file:
tdb	tctmttest.c	/^  TCTDB *tdb;$/;"	m	struct:__anon76	file:
tdb	tctmttest.c	/^  TCTDB *tdb;$/;"	m	struct:__anon77	file:
tdbcmppkeynumasc	tctdb.c	/^static int tdbcmppkeynumasc(const TCLISTDATUM *a, const TCLISTDATUM *b){$/;"	f	file:
tdbcmppkeynumdesc	tctdb.c	/^static int tdbcmppkeynumdesc(const TCLISTDATUM *a, const TCLISTDATUM *b){$/;"	f	file:
tdbcmpsortrecnumasc	tctdb.c	/^static int tdbcmpsortrecnumasc(const TDBSORTREC *a, const TDBSORTREC *b){$/;"	f	file:
tdbcmpsortrecnumdesc	tctdb.c	/^static int tdbcmpsortrecnumdesc(const TDBSORTREC *a, const TDBSORTREC *b){$/;"	f	file:
tdbcmpsortrecstrasc	tctdb.c	/^static int tdbcmpsortrecstrasc(const TDBSORTREC *a, const TDBSORTREC *b){$/;"	f	file:
tdbcmpsortrecstrdesc	tctdb.c	/^static int tdbcmpsortrecstrdesc(const TDBSORTREC *a, const TDBSORTREC *b){$/;"	f	file:
test_sqlite	bros/cmpsqltctest.c	/^static void test_sqlite(void){$/;"	f	file:
test_tctdb	bros/cmpsqltctest.c	/^static void test_tctdb(void){$/;"	f	file:
threadrace	tcbmttest.c	/^static void *threadrace(void *targ){$/;"	f	file:
threadrace	tchmttest.c	/^static void *threadrace(void *targ){$/;"	f	file:
threadread	tcamttest.c	/^static void *threadread(void *targ){$/;"	f	file:
threadread	tcbmttest.c	/^static void *threadread(void *targ){$/;"	f	file:
threadread	tcfmttest.c	/^static void *threadread(void *targ){$/;"	f	file:
threadread	tchmttest.c	/^static void *threadread(void *targ){$/;"	f	file:
threadread	tctmttest.c	/^static void *threadread(void *targ){$/;"	f	file:
threadread	tcumttest.c	/^static void *threadread(void *targ){$/;"	f	file:
threadremove	tcamttest.c	/^static void *threadremove(void *targ){$/;"	f	file:
threadremove	tcbmttest.c	/^static void *threadremove(void *targ){$/;"	f	file:
threadremove	tcfmttest.c	/^static void *threadremove(void *targ){$/;"	f	file:
threadremove	tchmttest.c	/^static void *threadremove(void *targ){$/;"	f	file:
threadremove	tctmttest.c	/^static void *threadremove(void *targ){$/;"	f	file:
threadremove	tcumttest.c	/^static void *threadremove(void *targ){$/;"	f	file:
threadtypical	tcbmttest.c	/^static void *threadtypical(void *targ){$/;"	f	file:
threadtypical	tcfmttest.c	/^static void *threadtypical(void *targ){$/;"	f	file:
threadtypical	tchmttest.c	/^static void *threadtypical(void *targ){$/;"	f	file:
threadtypical	tctmttest.c	/^static void *threadtypical(void *targ){$/;"	f	file:
threadtypical	tcumttest.c	/^static void *threadtypical(void *targ){$/;"	f	file:
threadwicked	tcbmttest.c	/^static void *threadwicked(void *targ){$/;"	f	file:
threadwicked	tcfmttest.c	/^static void *threadwicked(void *targ){$/;"	f	file:
threadwicked	tchmttest.c	/^static void *threadwicked(void *targ){$/;"	f	file:
threadwicked	tctmttest.c	/^static void *threadwicked(void *targ){$/;"	f	file:
threadwrite	tcamttest.c	/^static void *threadwrite(void *targ){$/;"	f	file:
threadwrite	tcbmttest.c	/^static void *threadwrite(void *targ){$/;"	f	file:
threadwrite	tcfmttest.c	/^static void *threadwrite(void *targ){$/;"	f	file:
threadwrite	tchmttest.c	/^static void *threadwrite(void *targ){$/;"	f	file:
threadwrite	tctmttest.c	/^static void *threadwrite(void *targ){$/;"	f	file:
threadwrite	tcumttest.c	/^static void *threadwrite(void *targ){$/;"	f	file:
tmtx	tcfdb.h	/^  void *tmtx;                            \/* mutex for transaction *\/$/;"	m	struct:__anon32
tokens	tctdb.c	/^  TCLIST *tokens;                        \/\/ q-gram tokens$/;"	m	struct:__anon58	file:
tran	tcbdb.h	/^  bool tran;                             \/* whether in the transaction *\/$/;"	m	struct:__anon18
tran	tcfdb.h	/^  bool tran;                             \/* whether in the transaction *\/$/;"	m	struct:__anon32
tran	tchdb.h	/^  bool tran;                             \/* whether in the transaction *\/$/;"	m	struct:__anon46
tran	tctdb.h	/^  bool tran;                             \/* whether in the transaction *\/$/;"	m	struct:__anon62
tranabort	tcadb.h	/^  bool (*tranabort)(void *);$/;"	m	struct:__anon6
tranbegin	tcadb.h	/^  bool (*tranbegin)(void *);$/;"	m	struct:__anon6
trancommit	tcadb.h	/^  bool (*trancommit)(void *);$/;"	m	struct:__anon6
tree	tcutil.h	/^  TCTREE *tree;                          \/* internal tree object *\/$/;"	m	struct:__anon87
trhash	bros/maptest.cc	/^typedef tr1::unordered_map<string, string, stringhash> trhash;$/;"	t	file:
trimhtml	lab/htmltotsv	/^sub trimhtml {$/;"	s
type	tcfdb.h	/^  uint8_t type;                          \/* database type *\/$/;"	m	struct:__anon32
type	tchdb.h	/^  uint8_t type;                          \/* database type *\/$/;"	m	struct:__anon46
type	tctdb.h	/^  int type;                              \/* data type *\/$/;"	m	struct:__anon61
unescape	man/htmltoman	/^function unescape(text){$/;"	f
usage	bros/bdbtest.c	/^void usage(void){$/;"	f
usage	bros/cdbtest.c	/^void usage(void){$/;"	f
usage	bros/gdbmtest.c	/^void usage(void){$/;"	f
usage	bros/maptest.cc	/^static void usage(void){$/;"	f	file:
usage	bros/ndbmtest.c	/^void usage(void){$/;"	f
usage	bros/qdbmtest.c	/^void usage(void){$/;"	f
usage	bros/sdbmtest.c	/^void usage(void){$/;"	f
usage	bros/sqltest.c	/^void usage(void){$/;"	f
usage	bros/tctest.c	/^void usage(void){$/;"	f
usage	bros/tdbtest.c	/^void usage(void){$/;"	f
usage	lab/wgettsv	/^def usage$/;"	f
usage	tcamgr.c	/^static void usage(void){$/;"	f	file:
usage	tcamttest.c	/^static void usage(void){$/;"	f	file:
usage	tcatest.c	/^static void usage(void){$/;"	f	file:
usage	tcbmgr.c	/^static void usage(void){$/;"	f	file:
usage	tcbmttest.c	/^static void usage(void){$/;"	f	file:
usage	tcbtest.c	/^static void usage(void){$/;"	f	file:
usage	tcfmgr.c	/^static void usage(void){$/;"	f	file:
usage	tcfmttest.c	/^static void usage(void){$/;"	f	file:
usage	tcftest.c	/^static void usage(void){$/;"	f	file:
usage	tchmgr.c	/^static void usage(void){$/;"	f	file:
usage	tchmttest.c	/^static void usage(void){$/;"	f	file:
usage	tchtest.c	/^static void usage(void){$/;"	f	file:
usage	tctmgr.c	/^static void usage(void){$/;"	f	file:
usage	tctmttest.c	/^static void usage(void){$/;"	f	file:
usage	tcttest.c	/^static void usage(void){$/;"	f	file:
usage	tcucodec.c	/^static void usage(void){$/;"	f	file:
usage	tcumttest.c	/^static void usage(void){$/;"	f	file:
usage	tcutest.c	/^static void usage(void){$/;"	f	file:
vanish	tcadb.h	/^  bool (*vanish)(void *);$/;"	m	struct:__anon6
vbuf	tcawmgr.c	/^  const char *vbuf;                      \/\/ value buffer$/;"	m	struct:__anon10	file:
vbuf	tchdb.c	/^  const char *vbuf;                      \/\/ pointer to the value$/;"	m	struct:__anon41	file:
vbuf	tctdb.c	/^  char *vbuf;                            \/\/ pointer to the value$/;"	m	struct:__anon57	file:
vidx	tcbdb.h	/^  int32_t vidx;                          \/* number of the value *\/$/;"	m	struct:__anon22
vsiz	tcadb.h	/^  int (*vsiz)(void *, const void *, int);$/;"	m	struct:__anon6
vsiz	tcawmgr.c	/^  int vsiz;                              \/\/ value size$/;"	m	struct:__anon10	file:
vsiz	tcbdb.c	/^  int vsiz;                              \/\/ size of the value region$/;"	m	struct:__anon12	file:
vsiz	tchdb.c	/^  uint32_t vsiz;                         \/\/ size of the value$/;"	m	struct:__anon41	file:
vsiz	tctdb.c	/^  int vsiz;                              \/\/ size of the value$/;"	m	struct:__anon57	file:
vsiz	tcutil.h	/^  int32_t vsiz;                          \/* size of the region of the value *\/$/;"	m	struct:_TCMAPREC
vsiz	tcutil.h	/^  int32_t vsiz;                          \/* size of the region of the value *\/$/;"	m	struct:_TCTREEREC
walend	tcfdb.h	/^  uint64_t walend;                       \/* end offset of write ahead logging *\/$/;"	m	struct:__anon32
walend	tchdb.h	/^  uint64_t walend;                       \/* end offset of write ahead logging *\/$/;"	m	struct:__anon46
walfd	tcfdb.h	/^  int walfd;                             \/* file descriptor of write ahead logging *\/$/;"	m	struct:__anon32
walfd	tchdb.h	/^  int walfd;                             \/* file descriptor of write ahead logging *\/$/;"	m	struct:__anon46
wb	tcbmttest.c	/^  bool wb;$/;"	m	struct:__anon25	file:
wb	tcfmttest.c	/^  bool wb;$/;"	m	struct:__anon37	file:
wb	tchmttest.c	/^  bool wb;$/;"	m	struct:__anon51	file:
while	myconf.h	424;"	d
width	tcfdb.h	/^  uint32_t width;                        \/* width of the value of each record *\/$/;"	m	struct:__anon32
wmode	tcbdb.h	/^  bool wmode;                            \/* whether to be writable *\/$/;"	m	struct:__anon18
wmode	tctdb.h	/^  bool wmode;                            \/* whether to be writable *\/$/;"	m	struct:__anon62
wmtx	tcfdb.h	/^  void *wmtx;                            \/* mutex for write ahead logging *\/$/;"	m	struct:__anon32
wmtx	tchdb.h	/^  void *wmtx;                            \/* mutex for write ahead logging *\/$/;"	m	struct:__anon46
wsiz	tcfdb.h	/^  int wsiz;                              \/* size of the width region *\/$/;"	m	struct:__anon32
xfsiz	tchdb.h	/^  uint64_t xfsiz;                        \/* extra size of the file for mapped memory *\/$/;"	m	struct:__anon46
xmsiz	tchdb.h	/^  uint64_t xmsiz;                        \/* size of the extra mapped memory *\/$/;"	m	struct:__anon46
zmode	tchdb.h	/^  bool zmode;                            \/* whether compression is used *\/$/;"	m	struct:__anon46
